{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"DEPTH",
				"DEPTH_BIN"
			],
			[
				"reef",
				"reef_scale"
			],
			[
				"benth",
				"benthic"
			],
			[
				"pred",
				"predictors"
			],
			[
				"benh",
				"benthic"
			],
			[
				"beth",
				"benthic_pop"
			],
			[
				"boo",
				"boot_ID"
			],
			[
				"haw.sa",
				"haw.sample.csv.list"
			],
			[
				"install",
				"install.packages	{utils}"
			],
			[
				"Fcun",
				"Functions"
			],
			[
				"DPE",
				"DEPTH_BIN"
			],
			[
				"ben",
				"benthic_pop"
			],
			[
				"benthi",
				"benthic_pop"
			],
			[
				"shap",
				"shapiro.test	{stats}"
			],
			[
				"benthic",
				"benthic_remote"
			],
			[
				"offset",
				"offset.vec.pop"
			],
			[
				"offset.ve",
				"offset.vec.rem"
			],
			[
				"off.",
				"offset.vec.pop"
			],
			[
				"of",
				"offset.vec.pop"
			],
			[
				"benit",
				"benthic_remote"
			],
			[
				"mar",
				"mar"
			],
			[
				"bne",
				"benthic_pop"
			],
			[
				"min",
				"min_SST_unscaled"
			],
			[
				"bent",
				"benthic_remote"
			],
			[
				"tu",
				"turf.top"
			],
			[
				"coral.top",
				"coral.top.coef"
			],
			[
				"benhti",
				"benthic_pop"
			],
			[
				"benht",
				"benthic_pop"
			],
			[
				"M_",
				"M_coral_set"
			],
			[
				"div_",
				"div_HW.MAR"
			],
			[
				"div_HW",
				"div_HW.MAR"
			],
			[
				"popul",
				"populated_scaled"
			],
			[
				"isl",
				"isltype_at.low"
			],
			[
				"div_H",
				"div_HW.SAM"
			],
			[
				"remote",
				"remote_scaled.num"
			],
			[
				"even",
				"evenness.UniquesMean"
			],
			[
				"un",
				"UniquesMean"
			],
			[
				"fd.",
				"fd.plot"
			],
			[
				"prod",
				"prod	{base}"
			],
			[
				"Evenn",
				"evenness.UniquesMean"
			],
			[
				"mar.",
				"mar.biom.state"
			],
			[
				"mar200",
				"mar200_biom.sp"
			],
			[
				"mar20",
				"mar200_sample"
			],
			[
				"mar800bio",
				"mar800_biom.sp"
			],
			[
				"redun",
				"redundancy.UniquesMean"
			],
			[
				"mar_",
				"mar200_biomass"
			],
			[
				"mar2",
				"mar200_sample"
			],
			[
				"cred",
				"cred_nSPC"
			],
			[
				"speci",
				"species-size"
			],
			[
				"aggrega",
				"aggregated_sp"
			],
			[
				"fd_fish",
				"fd_fish_sites"
			],
			[
				"fd_",
				"fd_fish_sites"
			],
			[
				"df.biom",
				"df.biom.matrix"
			],
			[
				"fd",
				"fd_fish_islands"
			],
			[
				"wake.",
				"wake.biom.matrix"
			],
			[
				"mu",
				"muvarynegloglik"
			],
			[
				"lambdainf",
				"lambdavecinf"
			],
			[
				"lmad",
				"lambdavarynegloglikinf"
			],
			[
				"cr",
				"critval2"
			],
			[
				"lambdav",
				"lambdavarynegloglikinf"
			],
			[
				"lamd",
				"lambdaendvec"
			],
			[
				"lamda",
				"lambdamleinfanal"
			],
			[
				"logpop",
				"logpop"
			],
			[
				"Bmsy.",
				"Bmsy.MCMC.quant"
			],
			[
				"VB",
				"VB.MCMC.quant"
			],
			[
				"p.inn",
				"p.innocent.pos.test"
			],
			[
				"doplh",
				"dolph.func"
			],
			[
				"ki",
				"ki_full"
			],
			[
				"species",
				"species.code.list"
			],
			[
				"dist.isd.",
				"dist.isd.preds.var"
			],
			[
				"Isl",
				"IslType"
			],
			[
				"isltype_at.l",
				"isltype_at.low"
			],
			[
				"comple",
				"complexity"
			],
			[
				"islt",
				"isltype_at.high"
			],
			[
				"dred.pop",
				"dred.popsub2"
			],
			[
				"con",
				"continent"
			],
			[
				"logpo",
				"logpoparea"
			],
			[
				"facetw",
				"facet_wrap"
			],
			[
				"Pop",
				"Pop_count_2010_20_km"
			],
			[
				"scale",
				"scale_fill_discrete"
			],
			[
				"Tro",
				"Trophic_MonRep"
			],
			[
				"biomas",
				"biomass.belt_scaled"
			],
			[
				"biomass",
				"biomass.isd"
			],
			[
				"mean",
				"mean_biom"
			],
			[
				"biomass.",
				"biomass.belt"
			],
			[
				"reef_",
				"reef_area"
			],
			[
				"secP",
				"secpc_islands"
			],
			[
				"Atol",
				"Atoll-high"
			],
			[
				"isd.nol",
				"isd.nolag"
			],
			[
				"IslT",
				"isltype_at.low"
			],
			[
				"copml",
				"complexity"
			],
			[
				"div",
				"div_HW.CIP"
			],
			[
				"logre",
				"logreefarea_75"
			],
			[
				"reef_area",
				"reef_area_5km"
			],
			[
				"REEF_",
				"reef_area_20km"
			],
			[
				"poupl",
				"population.relevant"
			],
			[
				"confin",
				"confints_pop_biom"
			],
			[
				"poup",
				"population.relevant"
			],
			[
				"pred_pop",
				"pred_pop_cred"
			],
			[
				"spc_NO",
				"spc_NOSHARK_biom"
			],
			[
				"spc_",
				"spc_noshark"
			],
			[
				"SC",
				"SCIENTIFIC_NAME"
			],
			[
				"segme",
				"segmented"
			],
			[
				"break",
				"break1"
			],
			[
				"pred_p",
				"pred_pop_biom.int"
			],
			[
				"pred_",
				"pred_pop_isd"
			],
			[
				"isd",
				"isd_pop_top"
			],
			[
				"predi",
				"predicted.pop.isd-isd"
			],
			[
				"isd_pop",
				"isd_pop_top"
			],
			[
				"pred_di",
				"pred_dist_isd.int"
			],
			[
				"predicted",
				"predicted.pop.biom.means"
			],
			[
				"confit",
				"confint"
			],
			[
				"a.SE",
				"a.SE.cred.dist"
			],
			[
				"row",
				"rownames"
			],
			[
				"isd_",
				"isd_pop_top"
			],
			[
				"sqa",
				"squaredGLMM"
			],
			[
				"voc",
				"vcov_int12"
			],
			[
				"dis",
				"dist.cred.dist"
			],
			[
				"poul",
				"population.relevant"
			],
			[
				"pou",
				"population.relevant"
			],
			[
				"population",
				"population.relevant"
			],
			[
				"isle",
				"isltype_at.low"
			],
			[
				"pred_pop_",
				"pred_pop_isd.int"
			],
			[
				"poplu",
				"population.relevant"
			],
			[
				"secpc",
				"secpc_islands"
			],
			[
				"Cara",
				"Carcharhinidae"
			],
			[
				"M_IS",
				"M_ISD_DIST_AVG"
			],
			[
				"preid",
				"predict_island"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/indicator_data_create_master.R",
			"settings":
			{
				"buffer_size": 210,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nR version 3.2.2 (2015-08-14) -- \"Fire Safety\"\nCopyright (C) 2015 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin13.4.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n> ?scale\nscale                   package:base                   R Documentation\n\nScaling and Centering of Matrix-like Objects\n\nDescription:\n\n     'scale' is generic function whose default method centers and/or\n     scales the columns of a numeric matrix.\n\nUsage:\n\n     scale(x, center = TRUE, scale = TRUE)\n     \nArguments:\n\n       x: a numeric matrix(like object).\n\n  center: either a logical value or a numeric vector of length equal to\n          the number of columns of 'x'.\n\n   scale: either a logical value or a numeric vector of length equal to\n          the number of columns of 'x'.\n\nDetails:\n\n     The value of 'center' determines how column centering is\n     performed.  If 'center' is a numeric vector with length equal to\n     the number of columns of 'x', then each column of 'x' has the\n     corresponding value from 'center' subtracted from it.  If 'center'\n     is 'TRUE' then centering is done by subtracting the column means\n     (omitting 'NA's) of 'x' from their corresponding columns, and if\n     'center' is 'FALSE', no centering is done.\n\n     The value of 'scale' determines how column scaling is performed\n     (after centering).  If 'scale' is a numeric vector with length\n     equal to the number of columns of 'x', then each column of 'x' is\n     divided by the corresponding value from 'scale'.  If 'scale' is\n     'TRUE' then scaling is done by dividing the (centered) columns of\n     'x' by their standard deviations if 'center' is 'TRUE', and the\n     root mean square otherwise.  If 'scale' is 'FALSE', no scaling is\n     done.\n\n     The root-mean-square for a (possibly centered) column is defined\n     as sqrt(sum(x^2)/(n-1)), where x is a vector of the non-missing\n     values and n is the number of non-missing values.  In the case\n     'center = TRUE', this is the same as the standard deviation, but\n     in general it is not.  (To scale by the standard deviations\n     without centering, use 'scale(x, center = FALSE, scale = apply(x,\n     2, sd, na.rm = TRUE))'.)\n\nValue:\n\n     For 'scale.default', the centered, scaled matrix.  The numeric\n     centering and scalings used (if any) are returned as attributes\n     '\"scaled:center\"' and '\"scaled:scale\"'\n\nReferences:\n\n     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S\n     Language_.  Wadsworth & Brooks/Cole.\n\nSee Also:\n\n     'sweep' which allows centering (and scaling) with arbitrary\n     statistics.\n\n     For working with the scale of a plot, see 'par'.\n\nExamples:\n\n     require(stats)\n     x <- matrix(1:10, ncol = 2)\n     (centered.x <- scale(x, scale = FALSE))\n     cov(centered.scaled.x <- scale(x)) # all 1\n     \n\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-subset(data, filter=ID)\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\n> \n> ### creating scaled dataframe for all benthic statistical analyses\n> setwd(\"/Users/jpwrobinson/Documents/git_repos/herbivore-fd\")\n> source(\"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/models_explore_func<n/Google_Drive/R_PROJECTS_DATA/models_explore_funct                        ions.R\")\nLoading required package: visreg\nLoading required package: xtable\nLoading required package: knitr\nLoading required package: markdown\nLoading required package: scales\nLoading required package: plotrix\n\nAttaching package: 'plotrix'\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nLoading required package: lmerTest\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nLoading required package: stringr\nLoading required package: arm\nLoading required package: MASS\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\narm (Version 1.8-6, built: 2015-7-7)\n\nWorking directory is /Users/jpwrobinson/Documents/git_repos/herbivore-fd\n\n\nAttaching package: 'arm'\n\nThe following object is masked from 'package:plotrix':\n\n    rescale\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following object is masked from 'package:xtable':\n\n    display\n\nLoading required package: betareg\nWarning message:\npackage 'visreg' was built under R version 3.2.3 \n> require(tidyr)\nLoading required package: tidyr\n\nAttaching package: 'tidyr'\n\nThe following object is masked from 'package:reshape':\n\n    expand\n\nThe following object is masked from 'package:Matrix':\n\n    expand\n\nWarning message:\npackage 'tidyr' was built under R version 3.2.3 \n> \n> fd<-read.csv(\"Analyses/results/FD-data/CRED_FD_data_for_models.csv\")\n> # fd<-fd[fd$sample==\"400N\",]\n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(ID, REGION))\nError in .subset(x, j) : invalid subscript type 'closure'\n> debug(scaler)\n> scaler(data=fd, ID=c(ID, REGION))\ndebugging in: scaler(data = fd, ID = c(ID, REGION))\ndebug at #1: {\n    ID.vars <- subset(data, filter = ID)\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numeric]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, -numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- subset(data, filter = ID)\nBrowse[2]> \ndebug at #9: numerics <- sapply(data, is.numeric)\nBrowse[2]> ID.vars \n                          ID REGION total.biomass     browser   cropper\n1               Agrihan.2011 MARIAN    193.340888  45.5041333  53.75021\n2               Aguijan.2011 MARIAN     75.253014   4.0016343  47.65524\n3               Aguijan.2014 MARIAN     74.148686   4.5893386  43.61920\n4              Alamagan.2011 MARIAN     94.488167  12.5781379  65.99270\n5              Alamagan.2014 MARIAN    144.773964  15.3922055  58.87828\n6              Asuncion.2011 MARIAN    152.599709  25.3411154  45.99461\n7              Asuncion.2014 MARIAN    112.753638  34.8369657  50.49522\n8                 Baker.2010  PRIAs     77.551568   9.3553878  38.21525\n9                 Baker.2012  PRIAs    184.815184  11.9803954  99.05277\n10                Baker.2015  PRIAs    158.728771   9.8787396  91.62266\n11  Farallon_de_Pajaros.2011 MARIAN    107.523258  49.8080860  28.33109\n12  Farallon_de_Pajaros.2014 MARIAN     87.694790  30.1532989  42.69120\n13       French_Frigate.2010     HI    129.848726  15.7006843  59.72172\n14       French_Frigate.2011     HI     67.076309   6.0231064  33.62221\n15       French_Frigate.2012     HI     41.873321   6.0265761  22.16151\n16       French_Frigate.2014     HI    183.230803  23.9719539 101.82263\n17       French_Frigate.2015     HI    129.283602  68.1765183 101.79661\n18              Gardner.2011     HI    123.803949  16.7611125 100.98496\n19                 Guam.2011 MARIAN    155.494573  18.3949080  30.36046\n20                 Guam.2014 MARIAN     65.365354  17.2814980  23.02189\n21               Guguan.2011 MARIAN    156.794620  24.0653052  48.98827\n22               Guguan.2014 MARIAN    162.931637  28.2842987  98.55892\n23               Hawaii.2010     HI    106.341370  16.3750308  66.13973\n24               Hawaii.2013     HI    126.849651   7.9058152  94.45441\n25               Hawaii.2015     HI    141.124022  13.5932448  94.25437\n26              Howland.2010  PRIAs     61.942150   8.8646589  28.42874\n27              Howland.2012  PRIAs    114.288006  14.6465817  59.59928\n28              Howland.2015  PRIAs     81.550767   5.2615292  56.79290\n29               Jarvis.2010  PRIAs    178.577469   1.6092601  82.36349\n30               Jarvis.2012  PRIAs    365.651087  13.3469781 171.62189\n31               Jarvis.2015  PRIAs    178.873706   4.5439369  79.61870\n32             Johnston.2010     HI    148.030441  33.4705598 166.75989\n33             Johnston.2012     HI    203.719968  32.3007004  90.57054\n34             Johnston.2015     HI    171.276913  37.7266845 114.04451\n35                Kauai.2010     HI     78.251974   5.9079386  57.00027\n36                Kauai.2013     HI    103.112344   9.1949115  57.10036\n37                Kauai.2015     HI     41.211467   0.9057344  39.21626\n38              Kingman.2010  PRIAs    200.306312   9.5530526  48.45642\n39              Kingman.2012  PRIAs    156.988503   2.2601514  30.51762\n40              Kingman.2015  PRIAs    118.384078   3.3647367  17.48968\n41                 Kure.2010     HI    180.095103  39.7773879  35.85094\n42                 Kure.2012     HI    132.508947  59.2563892  32.39509\n43                 Kure.2015     HI    284.786993  77.4526228  49.58502\n44                Lanai.2010     HI    106.156304  10.8653145  52.55582\n45                Lanai.2012     HI    120.374647  13.5728236  53.90713\n46                Lanai.2013     HI    117.388209  12.4995483  65.03439\n47                Lanai.2015     HI     93.989614  10.7661581  63.99207\n48               Laysan.2011     HI    197.707262  35.6160932  91.47501\n49               Laysan.2015     HI    277.219102  93.5223766 121.13794\n50            Lisianski.2010     HI    119.873882   5.3184264  41.74136\n51            Lisianski.2011     HI    209.409471  16.3498256  74.97924\n52            Lisianski.2012     HI    267.407328  53.6831151  93.04049\n53            Lisianski.2014     HI     99.759511  10.8551967  17.28894\n54            Lisianski.2015     HI    255.467158 105.5630802  38.98950\n55                 Maro.2011     HI    186.845162  24.2417147  85.72898\n56                 Maro.2015     HI    264.108131  30.4104988  87.25689\n57                 Maug.2011 MARIAN    140.140523  52.6031930  29.63315\n58                 Maug.2014 MARIAN    148.684734  47.0974221  41.67266\n59                 Maui.2010     HI     77.423846  14.4557865  48.96129\n60                 Maui.2012     HI    103.548154  18.9027267  51.36428\n61                 Maui.2013     HI     97.799760  14.7821370  67.70988\n62                 Maui.2015     HI     89.719624   8.5575385  54.06911\n63               Midway.2011     HI    536.874848 222.7182354 152.02783\n64               Midway.2014     HI    498.559636 249.4131600  81.71425\n65               Midway.2015     HI    361.308214 153.2623821  74.35453\n66              Molokai.2010     HI    121.804528   6.2104011  81.39639\n67              Molokai.2012     HI    124.879224  16.7457454  51.36824\n68              Molokai.2013     HI    167.513975  17.3311606 105.52430\n69              Molokai.2015     HI    114.006554  11.3443831  76.73168\n70               Necker.2011     HI    658.510259 419.1343077 234.90078\n71                Nihoa.2011     HI    199.448609  62.6218108 207.06175\n72               Niihau.2010     HI    173.331139  42.0969427  84.34822\n73               Niihau.2013     HI    197.354754  37.6395226  92.33863\n74               Niihau.2015     HI    224.155165  59.9811240 109.75498\n75                 Oahu.2010     HI     35.551948   2.8077400  29.15736\n76                 Oahu.2012     HI     40.442515   1.0236315  33.23677\n77                 Oahu.2013     HI     56.546267   7.8327982  40.84441\n78                 Oahu.2015     HI     52.735440   8.1772502  34.90199\n79         Ofu__Olosega.2010  SAMOA    132.013976   5.6662940  51.61539\n80         Ofu__Olosega.2012  SAMOA    231.160932  16.7479087  70.47692\n81         Ofu__Olosega.2015  SAMOA    219.732257   4.0412161  54.68590\n82                Pagan.2011 MARIAN    146.028878  36.1003183  56.79122\n83                Pagan.2014 MARIAN    157.994081  36.3410820  59.97933\n84              Palmyra.2010  PRIAs    189.673055  27.3879874  74.57053\n85              Palmyra.2012  PRIAs    221.756155  12.1700307  41.99371\n86              Palmyra.2015  PRIAs    124.108351  11.3960864  42.68347\n87        Pearl__Hermes.2010     HI    120.130529  37.7468310  23.13774\n88        Pearl__Hermes.2011     HI    240.628208 133.5013581  41.76988\n89        Pearl__Hermes.2012     HI     65.423135  18.0815597  31.39536\n90        Pearl__Hermes.2015     HI    297.593045 136.9281015  70.20427\n91                 Rose.2010  SAMOA    102.796907  19.6482510  38.02723\n92                 Rose.2012  SAMOA    170.920694   9.5676891  52.76257\n93                 Rose.2015  SAMOA     82.560214   3.4675162  30.55162\n94                 Rota.2011 MARIAN    102.329201  10.7600213  41.10370\n95                 Rota.2014 MARIAN    117.454995  10.0773078  22.16439\n96               Saipan.2011 MARIAN     45.191187   2.8117020  22.55067\n97               Saipan.2014 MARIAN     69.449986  14.7547015  42.19901\n98              Sarigan.2011 MARIAN    112.181774  16.5536731  50.75054\n99              Sarigan.2014 MARIAN    215.826605  40.2350404 106.38648\n100          South_Bank.2010  SAMOA      7.364142   0.0000000  22.09243\n101              Swains.2010  SAMOA     27.472671   0.9877970  14.25547\n102              Swains.2012  SAMOA     59.880692   9.1571997  25.96989\n103              Swains.2015  SAMOA     39.793914   5.3515304  18.45818\n104                 Tau.2010  SAMOA    110.070674   3.8451342  34.46261\n105                 Tau.2012  SAMOA    187.331610  20.8370110  56.41180\n106                 Tau.2015  SAMOA    150.053502  27.4813954  40.01298\n107              Tinian.2011 MARIAN     54.324682   6.4592237  26.52309\n108              Tinian.2014 MARIAN     37.723115   5.6220041  14.46050\n109             Tutuila.2010  SAMOA     91.207744   5.1103534  38.50490\n110             Tutuila.2012  SAMOA    124.724096   8.6923559  39.81071\n111             Tutuila.2015  SAMOA    102.755316   4.6950194  36.11188\n112                Wake.2011 MARIAN    148.881721  27.2349040  29.99907\n113                Wake.2014 MARIAN    103.749019  17.0374523  17.96660\n       excavator     scraper     coral        CCA     turf      macro\n1    20.93679023  73.1497498 19.062500  5.2916667 63.05208  4.4791667\n2     3.60929970  19.9868351 21.700000  5.9916667 43.04167 21.2291667\n3    10.31467426  15.6254712 16.750000 14.0416667 41.16667 20.2500000\n4     3.78691476  59.3744948 30.375000  3.6666667 44.29167  7.0416667\n5    13.83391539  56.6695630  9.138889  5.6388889 67.27778 12.5555556\n6    35.11861726  46.1453696 17.244048  6.1633598 59.82407  4.1455026\n7     0.05992306  27.3615277 16.583333  6.3750000 58.84722  3.2777778\n8     0.45678458  29.5241479 32.811508 40.0004960 21.03869  1.6607143\n9     7.69166120  66.0903611 33.377381 23.3250000 33.27063  6.9063492\n10    1.54282512  55.6845425 26.536797 32.2424242 29.95455  4.5887446\n11    0.00000000  29.3840800 19.812500  3.6472222 65.64722  1.8888889\n12    0.00000000  14.8502946  5.583333  2.4722222 75.13889  1.3333333\n13   42.59864561  11.8276769 27.527778 11.6111111 47.62500  5.8333333\n14   50.30661969  10.6625313 18.375000  8.1250000 21.25000  1.8750000\n15   29.01841973   5.6034781 41.416667  6.1250000 25.52083 21.3541667\n16   33.50727420  23.9289486 15.511905 13.1944444 52.51389  7.6924603\n17   15.95123992   8.0010364 10.000000  8.6250000 68.87500  3.8750000\n18    5.72285791   0.3350182 14.761905  8.9285714 42.35714 28.8809524\n19   42.69970410  64.0394979 20.439180  8.7244951 39.36002 25.1080213\n20   10.83352975  14.2284313 11.961024  7.8539880 55.15053 15.8330285\n21    0.00000000  83.7410428 21.541667  7.6805556 61.40972  3.9652778\n22    3.15783804  32.9305769  9.208333 11.6166667 64.99167  3.6250000\n23    7.76420378  16.0624008 28.298368  8.9551930 51.62762  1.5449042\n24    6.04431327  18.4451160 22.747173 10.8482986 53.36511  5.1162206\n25   10.98278911  22.2936188 16.422222  7.7666667 62.93111  0.7600000\n26    0.00000000  24.6487496 33.590278 35.5694444 15.02083  0.9166667\n27    1.81642644  38.2257133 29.348485 26.6540404 29.55976  6.2609428\n28    0.56923464  18.9271076 23.721591 29.3191288 36.81534  2.3996212\n29    1.05983029  93.5448847 23.547559 30.4701178 36.23561  7.3059764\n30    5.06104120 175.6211770 20.506944 22.9097222 44.15741 10.2662037\n31    2.45894838  92.2521230 15.836806 26.4861111 47.26910  8.4768519\n32    8.41596121  13.3992527 20.531250 24.3437500 40.34375  4.0000000\n33   32.29115009  48.5575781  7.472222 14.0277778 73.11111  3.3055556\n34   67.02520174  38.1189728  6.417308 23.0730769 56.82500  5.5365385\n35    0.44045652  14.9033108  8.808333  4.7763889 68.97639 11.8000000\n36    0.68597738  36.1310932  6.019841  8.2943122 56.63558 18.8313492\n37    0.04506732   1.0444047  4.097222  0.9583333 66.19444 19.5555556\n38   82.06769018  60.2291485 28.606061 25.9116162 15.17677 10.5782828\n39   73.85415968  50.3565723 30.998775 20.9546569 22.10907 11.0098039\n40   71.01298364  26.5166743 21.092305 10.3903509 44.36802  2.4581340\n41   72.38817124  32.0786008 14.613426  8.8680556 51.32639 19.5300926\n42   88.02884306  19.0830973 13.979167  7.9166667 43.36111 27.0208333\n43  111.65731143  46.0920425  3.500000  5.0000000 67.70833 16.5416667\n44   15.48332956  27.2518400 28.809028  5.1493056 45.29514  8.0694444\n45   23.19231091  29.7023777 24.934554  3.5650253 51.47580 10.0347222\n46   16.08530312  23.7689708 18.676768  4.8585859 37.49495 27.3737374\n47    6.53033038  12.7010509  8.569444  2.3819444 77.63194  2.8541667\n48   64.79179538   5.8243627  9.863095 13.8720238 35.85417 31.9970238\n49   39.77987732  22.7789060  4.166667  3.9722222 55.22222 33.5277778\n50   59.25752748  13.5565645 26.712302 10.6984127 29.11310 22.8531746\n51   90.40274005  27.6776625 43.361111 10.0138889 21.86111  6.5138889\n52   98.91609925  21.7676243 41.946429  9.6309524 20.25000 18.3035714\n53   54.75621138  16.8591656 23.534392 12.3128307 36.77646 17.6097884\n54   83.50247804  27.4121006  9.925595  4.8154762 50.55357 17.7023810\n55   61.88029947  14.9941630 14.219841  3.9960317 17.10714 11.1833333\n56  113.89609156  32.5446475 23.454545 11.0000000 50.40404  9.2727273\n57    3.83593672  54.0682470 31.287037  5.5648148 52.78981  2.2166667\n58   12.23239160  47.6822618 23.409470  6.4559343 56.82803  3.9061869\n59    4.24468473   9.7620848 23.998377  5.9718615 57.03084  6.4080087\n60   13.31738434  19.9637589 23.071413  5.0489766 52.43151  8.2456140\n61    0.99860583  14.3091389 21.850000  5.0142857 49.05714 11.4738095\n62   11.75610789  15.3368712 20.423611  4.6296296 55.81019  9.0625000\n63  149.51437838  12.6144048  1.607143  7.4464286 28.83631  9.0952381\n64  133.76871516  33.6635150  1.809524  7.3280423 74.68254  7.8121693\n65  105.26331029  28.4279916  1.408333  3.1611111 76.72222 12.8500000\n66    9.07128667  25.1264471 37.847222  3.5694444 38.76389  5.7361111\n67   22.31214617  34.4530908 20.976190  4.1785714 53.03571 12.5476190\n68   10.84029612  33.8182191 18.284452  5.2052670 53.29690 11.3535354\n69   14.19026756  11.7402258 20.944444  3.3953824 59.74037  5.2246642\n70    0.39789714   4.0772756  4.555556  3.7222222 21.69444 13.0555556\n71   24.47367207   5.0156765  2.666667  5.8333333 30.58333  4.2083333\n72    3.03853143  43.8474500  3.437500  3.9930556 74.32639  5.7916667\n73    9.88671265  57.4898839  4.333333  5.3214286 68.78869 10.0476190\n74    1.86926953  52.5497916  2.651515  4.8216783 76.90967  7.5681818\n75    2.26848850   1.3183557 13.119035  7.4277956 45.76193 14.8335114\n76    1.02199658   5.1601146 12.603175  3.3174603 61.16270 13.3769841\n77    2.63332873   5.2357347 14.090278  5.6840278 55.64583 14.0104167\n78    0.30359804   9.3525971  5.719017  1.6196581 70.45085  7.6292735\n79   43.45758682  31.2747048 24.772436 39.3035714 23.42143  6.0009158\n80   90.78050556  53.1555933 23.027778 26.5000000 31.86111  8.7638889\n81  112.18703380  48.8181033 18.084377 29.7017066 41.16508  5.1236837\n82   11.42488503  41.7124524 15.848545  7.0162037 61.83135  4.7278439\n83    5.52608517  56.1475817 13.213352  5.6181917 63.47035  6.3179272\n84   44.92480102  42.7897349 27.138889 23.9079861 21.44618  8.6388889\n85   91.12433191  76.4680820 24.747345 20.7043845 27.33864 11.5345180\n86   36.06945091  33.9593461 21.335354 14.8848485 38.77980  6.1666667\n87   43.03776411  16.2081908  6.583333  8.3194444 55.10000 22.5611111\n88   51.88937794  13.4675932  5.291667  7.5625000 23.21528 11.5416667\n89   43.01322190   5.6445590 11.745536 16.0044643 41.35268 23.1071429\n90   72.61065409  17.8500197  2.583333 13.3944444 57.78333 16.8944444\n91   31.54568790  13.5757412 18.133712 45.2282197 17.76420 14.4130682\n92   80.97883447  27.6115990 17.540278 48.2958333 13.07222 17.7305556\n93   38.01058925  10.5304918 17.871429 54.0380952 12.13175 12.3023810\n94   18.48097600  31.9845038 16.208995  6.0006614 40.07870 30.5760582\n95    9.10706910  76.1062278  8.357955  5.2878788 61.10038 12.3731061\n96    8.28107340  11.5477419 19.900285  6.5086360 54.03161 11.7454594\n97    6.23160038   6.2646709 19.429147  4.8228663 56.16948  9.5398551\n98    2.34221362  42.5353514 16.250000  4.0000000 60.00000  9.1388889\n99   15.60774530  53.5973403  6.158333  5.2916667 65.65833  6.4833333\n100   0.00000000   0.0000000        NA         NA       NA         NA\n101   2.00094707  10.2284542 39.027778 25.8333333 15.15278 18.6342593\n102   3.84450592  20.9090963 33.086174 20.5757576 16.37405 29.3494318\n103   4.79083677  11.1933674 33.548611 20.2291667 18.29861 25.8958333\n104  52.17787193  19.5850571 23.814815 27.2361111 34.89815  6.0972222\n105  68.52396967  41.5588278 18.054167 25.6250000 43.95000  5.4458333\n106  45.40447356  37.1546495 19.566141 17.4341432 53.42171  3.8845553\n107  12.72200486   8.6203675 22.154762  6.1269841 46.86905 16.8134921\n108   8.14794038   9.4926716 16.767857  5.1071429 50.91071 14.8392857\n109  26.72847745  20.8640099 23.209072 31.1996243 31.30450  4.6405149\n110  35.14984242  41.0711844 20.387837 24.3029251 37.04388 10.8292298\n111  31.24362103  30.7047944 19.148569 18.1815876 49.03122  7.9062245\n112  47.65878620  43.9889645 25.553571 11.6260913 40.29821  5.3787698\n113  31.82054307  36.9244191 28.483631  8.9428571 42.96825  8.8080357\n          sand      reef    algae reefbuild.prop              ISLAND\n1    6.1770833 24.354167 67.53125     0.26504931             Agrihan\n2    6.0958333 27.691667 64.27083     0.30111912             Aguijan\n3    6.6666667 30.791667 61.41667     0.33393583             Aguijan\n4   13.9166667 34.041667 51.33333     0.39873109            Alamagan\n5    4.1388889 14.777778 79.83333     0.15619495            Alamagan\n6   11.6514550 23.407407 63.96958     0.26788985            Asuncion\n7   13.7638889 22.958333 62.12500     0.26983350            Asuncion\n8    3.9528770 72.812004 22.69940     0.76233829               Baker\n9    1.8349206 56.702381 40.17698     0.58528853               Baker\n10   3.2911255 58.779221 34.54329     0.62985040               Baker\n11   9.0041667 23.459722 67.53611     0.25781095 Farallon de Pajaros\n12  15.4722222  8.055556 76.47222     0.09530069 Farallon de Pajaros\n13   6.6944444 39.138889 53.45833     0.42267887      French Frigate\n14   0.3750000 26.500000 23.12500     0.53400504      French Frigate\n15   5.5833333 47.541667 46.87500     0.50353045      French Frigate\n16   6.1150794 28.706349 60.20635     0.32285995      French Frigate\n17   7.8750000 18.625000 72.75000     0.20383037      French Frigate\n18   3.9642857 23.690476 71.23810     0.24956107             Gardner\n19   4.6008158 29.163675 64.46805     0.31147217                Guam\n20   6.3987356 19.815012 70.98356     0.21823043                Guam\n21   4.7986111 29.222222 65.37500     0.30891205              Guguan\n22   9.9083333 20.825000 68.61667     0.23283332              Guguan\n23   9.4085405 37.253561 53.17253     0.41197803              Hawaii\n24   7.4438479 33.595472 58.48133     0.36486360              Hawaii\n25  12.0033333 24.188889 63.69111     0.27524908              Hawaii\n26   3.5138889 69.159722 15.93750     0.81271422             Howland\n27   3.3493266 56.002525 35.82071     0.60989495             Howland\n28   1.9630682 53.040720 39.21496     0.57493174             Howland\n29   2.1361953 54.017677 43.54158     0.55369093              Jarvis\n30   2.1597222 43.416667 54.42361     0.44375044              Jarvis\n31   1.6880787 42.322917 55.74595     0.43156323              Jarvis\n32  10.7812500 44.875000 44.34375     0.50297723            Johnston\n33   1.8611111 21.500000 76.41667     0.21957447            Johnston\n34   8.1480769 29.490385 62.36154     0.32106442            Johnston\n35   5.5458333 13.584722 80.77639     0.14396526               Kauai\n36   9.0297619 14.314153 75.46693     0.15943396               Kauai\n37   8.9722222  5.055556 85.75000     0.05567452               Kauai\n38   3.7449495 54.517677 25.75505     0.67915566             Kingman\n39   4.4767157 51.953431 33.11887     0.61069736             Kingman\n40   3.3781898 31.482656 46.82616     0.40203209             Kingman\n41   5.4097222 23.481481 70.85648     0.24890808                Kure\n42   7.7222222 21.895833 70.38194     0.23728176                Kure\n43   6.8750000  8.500000 84.25000     0.09164420                Kure\n44  12.6770833 33.958333 53.36458     0.38888226               Lanai\n45   9.3899411 28.499579 61.51052     0.31662645               Lanai\n46  11.5202020 23.535354 64.86869     0.26622486               Lanai\n47   8.5625000 10.951389 80.48611     0.11976912               Lanai\n48   6.3303571 23.735119 67.85119     0.25915575              Laysan\n49   2.4444444  8.138889 88.75000     0.08400229              Laysan\n50  10.6230159 37.410714 51.96627     0.41857213           Lisianski\n51   8.6666667 53.375000 28.37500     0.65290520           Lisianski\n52   8.4107143 51.577381 38.55357     0.57224937           Lisianski\n53   9.7665344 35.847222 54.38624     0.39727192           Lisianski\n54  16.9553571 14.741071 68.25595     0.17760964           Lisianski\n55   3.4579365 18.215873 28.29048     0.39168572                Maro\n56   5.3737374 34.454545 59.67677     0.36602640                Maro\n57   6.5250000 36.851852 55.00648     0.40118137                Maug\n58   6.7924242 29.865404 60.73422     0.32964160                Maug\n59   6.5308442 29.970238 63.43885     0.32084926                Maui\n60  10.6616622 28.120389 60.67713     0.31667991                Maui\n61  11.7714286 26.864286 60.53095     0.30738844                Maui\n62   9.7615741 25.053241 64.87269     0.27859864                Maui\n63   3.0148810  9.053571 37.93155     0.19269019              Midway\n64   8.3280423  9.137566 82.49471     0.09971995              Midway\n65   5.6305556  4.569444 89.57222     0.04853796              Midway\n66  14.0833333 41.416667 44.50000     0.48205626             Molokai\n67   8.2738095 25.154762 65.58333     0.27722383             Molokai\n68  11.5371573 23.489719 64.65043     0.26650418             Molokai\n69  10.3720169 24.339827 64.96503     0.27254761             Molokai\n70   6.8611111  8.277778 34.75000     0.19238218              Necker\n71   6.0625000  8.500000 34.79167     0.19634264               Nihoa\n72  12.4236111  7.430556 80.11806     0.08487348              Niihau\n73  11.2797619  9.654762 78.83631     0.10910436              Niihau\n74   7.0011655  7.473193 84.47786     0.08127361              Niihau\n75  18.8484687 20.546830 60.59544     0.25321981                Oahu\n76   9.1825397 15.920635 74.53968     0.17599579                Oahu\n77  10.1284722 19.774306 69.65625     0.22111353                Oahu\n78  13.7264957  7.338675 78.08013     0.08591405                Oahu\n79   5.0086996 64.076007 29.42234     0.68531697       Ofu & Olosega\n80   7.3472222 49.527778 40.62500     0.54937606       Ofu & Olosega\n81   4.8941086 47.786084 46.28876     0.50795814       Ofu & Olosega\n82   7.9269180 22.864749 66.55919     0.25568934               Pagan\n83  10.1976346 18.831544 69.78828     0.21249809               Pagan\n84   6.7638889 51.046875 30.08507     0.62918343             Palmyra\n85   6.6092048 45.451729 38.87316     0.53900727             Palmyra\n86   5.8222222 36.220202 44.94646     0.44624479             Palmyra\n87   7.1388889 14.902778 77.66111     0.16099991      Pearl & Hermes\n88   2.3888889 12.854167 34.75694     0.26998250      Pearl & Hermes\n89   7.3214286 27.750000 64.45982     0.30094408      Pearl & Hermes\n90   9.0000000 15.977778 74.67778     0.17624709      Pearl & Hermes\n91   2.2670455 63.361932 32.17727     0.66320347                Rose\n92   1.7944444 65.836111 30.80278     0.68125898                Rose\n93   2.2698413 71.909524 24.43413     0.74638571                Rose\n94   6.2923280 22.209656 70.65476     0.23916217                Rota\n95  11.4924242 13.645833 73.47348     0.15663384                Rota\n96   7.3638711 26.408921 65.77707     0.28647435              Saipan\n97   8.7190016 24.252013 65.70934     0.26958257              Saipan\n98   9.5833333 20.250000 69.13889     0.22653822             Sarigan\n99  15.7833333 11.450000 72.14167     0.13697538             Sarigan\n100         NA        NA       NA             NA                <NA>\n101  1.5370370 64.861111 33.78704     0.65749953              Swains\n102  0.6145833 53.661932 45.72348     0.53993769              Swains\n103  1.1597222 53.777778 44.19444     0.54890842              Swains\n104  5.8703704 51.050926 40.99537     0.55462227                 Tau\n105  4.5916667 43.679167 49.39583     0.46929000                 Tau\n106  5.0455385 37.000284 57.30627     0.39234055                 Tau\n107  7.4484127 28.281746 63.68254     0.30752967              Tinian\n108  9.5595238 21.875000 65.75000     0.24964337              Tinian\n109  6.8763612 54.408697 35.94502     0.60217444             Tutuila\n110  6.0852273 44.690762 47.87311     0.48281001             Tutuila\n111  4.8111397 37.330156 56.93745     0.39600196             Tutuila\n112 12.0480159 37.179663 45.67698     0.44872275                Wake\n113  5.0965278 37.426488 51.77629     0.41956640                Wake\n            lat      lon  min_SST     prod IslType bathymetry    distance\n1    18.7691976 145.6655 25.57350 299.9844    high 10.6416667  400.612133\n2    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n3    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n4    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n5    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n6    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n7    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n8     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n9     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n10    0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n11   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n12   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n13   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n14   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n15   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n16   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n17   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n18   24.9988842 191.7483 21.62325 588.3223     low  4.0000000 1138.505046\n19   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n20   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n21   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n22   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n23   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n24   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n25   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n26    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n27    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n28    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n29   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n30   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n31   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n32   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n33   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n34   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n35   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n36   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n37   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n38    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n39    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n40    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n41   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n42   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n43   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n44   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n45   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n46   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n47   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n48   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n49   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n50   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n51   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n52   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n53   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n54   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n55   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n56   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n57   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n58   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n59   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n60   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n61   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n62   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n63   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n64   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n65   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n66   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n67   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n68   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n69   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n70   23.5718950 195.3019 22.37513 679.2464    high  0.4250000  746.085180\n71   23.0591213 198.0764 22.59000 516.1087    high  0.3125000  460.539240\n72   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n73   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n74   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n75   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n76   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n77   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n78   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n79  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n80  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n81  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n82   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n83   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n84    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n85    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n86    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n87   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n88   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n89   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n90   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n91  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n92  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n93  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n94   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n95   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n96   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n97   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n98   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n99   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n100          NA       NA       NA       NA    <NA>         NA          NA\n101 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n102 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n103 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n104 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n105 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n106 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n107  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n108  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n109 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n110 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n111 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n112  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n113  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n    logdistance     pop_area logpoparea     STATE    wave irradiance complexity\n1     2.6027241   0.00000000 0.00000000    Remote 21.8215    42.8050  0.6493571\n2     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n3     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n4     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n5     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n6     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n7     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n8     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n9     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n10    3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n11    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n12    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n13    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n14    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n15    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n16    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n17    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n18    3.0563350   0.00000000 0.00000000    Remote      NA         NA  0.6568526\n19    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n20    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n21    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n22    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n23    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n24    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n25    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n26    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n27    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n28    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n29    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n30    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n31    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n32    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n33    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n34    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n35    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n36    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n37    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n38    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n39    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n40    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n41    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n42    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n43    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n44    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n45    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n46    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n47    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n48    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n49    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n50    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n51    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n52    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n53    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n54    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n55    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n56    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n57    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n58    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n59    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n60    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n61    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n62    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n63    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n64    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n65    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n66    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n67    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n68    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n69    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n70    2.8727884   0.00000000 0.00000000    Remote 39.2032    43.5079  0.5032295\n71    2.6632666   0.00000000 0.00000000    Remote 37.1754    43.6388  0.8630030\n72    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n73    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n74    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n75    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n76    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n77    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n78    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n79    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n80    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n81    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n82    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n83    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n84    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n85    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n86    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n87    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n88    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n89    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n90    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n91    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n92    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n93    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n94    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n95    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n96    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n97    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n98    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n99    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n100          NA           NA         NA      <NA>      NA         NA         NA\n101   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n102   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n103   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n104   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n105   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n106   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n107   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n108   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n109   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n110   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n111   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n112   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\n113   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\nBrowse[2]> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[colnames(data%in%ID),]\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\nBrowse[2]> \ndebug at #10: dat_cont <- data[, numeric]\nBrowse[2]> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\nBrowse[2]> \nError in .subset(x, j) : invalid subscript type 'closure'\n> scaler(data=fd, ID=c(ID, REGION))\ndebugging in: scaler(data = fd, ID = c(ID, REGION))\ndebug at #1: {\n    ID.vars <- subset(data, filter = ID)\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numeric]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, -numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> debug(scaler)\nBrowse[2]> \ndebug at #4: ID.vars <- subset(data, filter = ID)\nBrowse[2]> \ndebug at #9: numerics <- sapply(data, is.numeric)\nBrowse[2]> ID.vars \n                          ID REGION total.biomass     browser   cropper\n1               Agrihan.2011 MARIAN    193.340888  45.5041333  53.75021\n2               Aguijan.2011 MARIAN     75.253014   4.0016343  47.65524\n3               Aguijan.2014 MARIAN     74.148686   4.5893386  43.61920\n4              Alamagan.2011 MARIAN     94.488167  12.5781379  65.99270\n5              Alamagan.2014 MARIAN    144.773964  15.3922055  58.87828\n6              Asuncion.2011 MARIAN    152.599709  25.3411154  45.99461\n7              Asuncion.2014 MARIAN    112.753638  34.8369657  50.49522\n8                 Baker.2010  PRIAs     77.551568   9.3553878  38.21525\n9                 Baker.2012  PRIAs    184.815184  11.9803954  99.05277\n10                Baker.2015  PRIAs    158.728771   9.8787396  91.62266\n11  Farallon_de_Pajaros.2011 MARIAN    107.523258  49.8080860  28.33109\n12  Farallon_de_Pajaros.2014 MARIAN     87.694790  30.1532989  42.69120\n13       French_Frigate.2010     HI    129.848726  15.7006843  59.72172\n14       French_Frigate.2011     HI     67.076309   6.0231064  33.62221\n15       French_Frigate.2012     HI     41.873321   6.0265761  22.16151\n16       French_Frigate.2014     HI    183.230803  23.9719539 101.82263\n17       French_Frigate.2015     HI    129.283602  68.1765183 101.79661\n18              Gardner.2011     HI    123.803949  16.7611125 100.98496\n19                 Guam.2011 MARIAN    155.494573  18.3949080  30.36046\n20                 Guam.2014 MARIAN     65.365354  17.2814980  23.02189\n21               Guguan.2011 MARIAN    156.794620  24.0653052  48.98827\n22               Guguan.2014 MARIAN    162.931637  28.2842987  98.55892\n23               Hawaii.2010     HI    106.341370  16.3750308  66.13973\n24               Hawaii.2013     HI    126.849651   7.9058152  94.45441\n25               Hawaii.2015     HI    141.124022  13.5932448  94.25437\n26              Howland.2010  PRIAs     61.942150   8.8646589  28.42874\n27              Howland.2012  PRIAs    114.288006  14.6465817  59.59928\n28              Howland.2015  PRIAs     81.550767   5.2615292  56.79290\n29               Jarvis.2010  PRIAs    178.577469   1.6092601  82.36349\n30               Jarvis.2012  PRIAs    365.651087  13.3469781 171.62189\n31               Jarvis.2015  PRIAs    178.873706   4.5439369  79.61870\n32             Johnston.2010     HI    148.030441  33.4705598 166.75989\n33             Johnston.2012     HI    203.719968  32.3007004  90.57054\n34             Johnston.2015     HI    171.276913  37.7266845 114.04451\n35                Kauai.2010     HI     78.251974   5.9079386  57.00027\n36                Kauai.2013     HI    103.112344   9.1949115  57.10036\n37                Kauai.2015     HI     41.211467   0.9057344  39.21626\n38              Kingman.2010  PRIAs    200.306312   9.5530526  48.45642\n39              Kingman.2012  PRIAs    156.988503   2.2601514  30.51762\n40              Kingman.2015  PRIAs    118.384078   3.3647367  17.48968\n41                 Kure.2010     HI    180.095103  39.7773879  35.85094\n42                 Kure.2012     HI    132.508947  59.2563892  32.39509\n43                 Kure.2015     HI    284.786993  77.4526228  49.58502\n44                Lanai.2010     HI    106.156304  10.8653145  52.55582\n45                Lanai.2012     HI    120.374647  13.5728236  53.90713\n46                Lanai.2013     HI    117.388209  12.4995483  65.03439\n47                Lanai.2015     HI     93.989614  10.7661581  63.99207\n48               Laysan.2011     HI    197.707262  35.6160932  91.47501\n49               Laysan.2015     HI    277.219102  93.5223766 121.13794\n50            Lisianski.2010     HI    119.873882   5.3184264  41.74136\n51            Lisianski.2011     HI    209.409471  16.3498256  74.97924\n52            Lisianski.2012     HI    267.407328  53.6831151  93.04049\n53            Lisianski.2014     HI     99.759511  10.8551967  17.28894\n54            Lisianski.2015     HI    255.467158 105.5630802  38.98950\n55                 Maro.2011     HI    186.845162  24.2417147  85.72898\n56                 Maro.2015     HI    264.108131  30.4104988  87.25689\n57                 Maug.2011 MARIAN    140.140523  52.6031930  29.63315\n58                 Maug.2014 MARIAN    148.684734  47.0974221  41.67266\n59                 Maui.2010     HI     77.423846  14.4557865  48.96129\n60                 Maui.2012     HI    103.548154  18.9027267  51.36428\n61                 Maui.2013     HI     97.799760  14.7821370  67.70988\n62                 Maui.2015     HI     89.719624   8.5575385  54.06911\n63               Midway.2011     HI    536.874848 222.7182354 152.02783\n64               Midway.2014     HI    498.559636 249.4131600  81.71425\n65               Midway.2015     HI    361.308214 153.2623821  74.35453\n66              Molokai.2010     HI    121.804528   6.2104011  81.39639\n67              Molokai.2012     HI    124.879224  16.7457454  51.36824\n68              Molokai.2013     HI    167.513975  17.3311606 105.52430\n69              Molokai.2015     HI    114.006554  11.3443831  76.73168\n70               Necker.2011     HI    658.510259 419.1343077 234.90078\n71                Nihoa.2011     HI    199.448609  62.6218108 207.06175\n72               Niihau.2010     HI    173.331139  42.0969427  84.34822\n73               Niihau.2013     HI    197.354754  37.6395226  92.33863\n74               Niihau.2015     HI    224.155165  59.9811240 109.75498\n75                 Oahu.2010     HI     35.551948   2.8077400  29.15736\n76                 Oahu.2012     HI     40.442515   1.0236315  33.23677\n77                 Oahu.2013     HI     56.546267   7.8327982  40.84441\n78                 Oahu.2015     HI     52.735440   8.1772502  34.90199\n79         Ofu__Olosega.2010  SAMOA    132.013976   5.6662940  51.61539\n80         Ofu__Olosega.2012  SAMOA    231.160932  16.7479087  70.47692\n81         Ofu__Olosega.2015  SAMOA    219.732257   4.0412161  54.68590\n82                Pagan.2011 MARIAN    146.028878  36.1003183  56.79122\n83                Pagan.2014 MARIAN    157.994081  36.3410820  59.97933\n84              Palmyra.2010  PRIAs    189.673055  27.3879874  74.57053\n85              Palmyra.2012  PRIAs    221.756155  12.1700307  41.99371\n86              Palmyra.2015  PRIAs    124.108351  11.3960864  42.68347\n87        Pearl__Hermes.2010     HI    120.130529  37.7468310  23.13774\n88        Pearl__Hermes.2011     HI    240.628208 133.5013581  41.76988\n89        Pearl__Hermes.2012     HI     65.423135  18.0815597  31.39536\n90        Pearl__Hermes.2015     HI    297.593045 136.9281015  70.20427\n91                 Rose.2010  SAMOA    102.796907  19.6482510  38.02723\n92                 Rose.2012  SAMOA    170.920694   9.5676891  52.76257\n93                 Rose.2015  SAMOA     82.560214   3.4675162  30.55162\n94                 Rota.2011 MARIAN    102.329201  10.7600213  41.10370\n95                 Rota.2014 MARIAN    117.454995  10.0773078  22.16439\n96               Saipan.2011 MARIAN     45.191187   2.8117020  22.55067\n97               Saipan.2014 MARIAN     69.449986  14.7547015  42.19901\n98              Sarigan.2011 MARIAN    112.181774  16.5536731  50.75054\n99              Sarigan.2014 MARIAN    215.826605  40.2350404 106.38648\n100          South_Bank.2010  SAMOA      7.364142   0.0000000  22.09243\n101              Swains.2010  SAMOA     27.472671   0.9877970  14.25547\n102              Swains.2012  SAMOA     59.880692   9.1571997  25.96989\n103              Swains.2015  SAMOA     39.793914   5.3515304  18.45818\n104                 Tau.2010  SAMOA    110.070674   3.8451342  34.46261\n105                 Tau.2012  SAMOA    187.331610  20.8370110  56.41180\n106                 Tau.2015  SAMOA    150.053502  27.4813954  40.01298\n107              Tinian.2011 MARIAN     54.324682   6.4592237  26.52309\n108              Tinian.2014 MARIAN     37.723115   5.6220041  14.46050\n109             Tutuila.2010  SAMOA     91.207744   5.1103534  38.50490\n110             Tutuila.2012  SAMOA    124.724096   8.6923559  39.81071\n111             Tutuila.2015  SAMOA    102.755316   4.6950194  36.11188\n112                Wake.2011 MARIAN    148.881721  27.2349040  29.99907\n113                Wake.2014 MARIAN    103.749019  17.0374523  17.96660\n       excavator     scraper     coral        CCA     turf      macro\n1    20.93679023  73.1497498 19.062500  5.2916667 63.05208  4.4791667\n2     3.60929970  19.9868351 21.700000  5.9916667 43.04167 21.2291667\n3    10.31467426  15.6254712 16.750000 14.0416667 41.16667 20.2500000\n4     3.78691476  59.3744948 30.375000  3.6666667 44.29167  7.0416667\n5    13.83391539  56.6695630  9.138889  5.6388889 67.27778 12.5555556\n6    35.11861726  46.1453696 17.244048  6.1633598 59.82407  4.1455026\n7     0.05992306  27.3615277 16.583333  6.3750000 58.84722  3.2777778\n8     0.45678458  29.5241479 32.811508 40.0004960 21.03869  1.6607143\n9     7.69166120  66.0903611 33.377381 23.3250000 33.27063  6.9063492\n10    1.54282512  55.6845425 26.536797 32.2424242 29.95455  4.5887446\n11    0.00000000  29.3840800 19.812500  3.6472222 65.64722  1.8888889\n12    0.00000000  14.8502946  5.583333  2.4722222 75.13889  1.3333333\n13   42.59864561  11.8276769 27.527778 11.6111111 47.62500  5.8333333\n14   50.30661969  10.6625313 18.375000  8.1250000 21.25000  1.8750000\n15   29.01841973   5.6034781 41.416667  6.1250000 25.52083 21.3541667\n16   33.50727420  23.9289486 15.511905 13.1944444 52.51389  7.6924603\n17   15.95123992   8.0010364 10.000000  8.6250000 68.87500  3.8750000\n18    5.72285791   0.3350182 14.761905  8.9285714 42.35714 28.8809524\n19   42.69970410  64.0394979 20.439180  8.7244951 39.36002 25.1080213\n20   10.83352975  14.2284313 11.961024  7.8539880 55.15053 15.8330285\n21    0.00000000  83.7410428 21.541667  7.6805556 61.40972  3.9652778\n22    3.15783804  32.9305769  9.208333 11.6166667 64.99167  3.6250000\n23    7.76420378  16.0624008 28.298368  8.9551930 51.62762  1.5449042\n24    6.04431327  18.4451160 22.747173 10.8482986 53.36511  5.1162206\n25   10.98278911  22.2936188 16.422222  7.7666667 62.93111  0.7600000\n26    0.00000000  24.6487496 33.590278 35.5694444 15.02083  0.9166667\n27    1.81642644  38.2257133 29.348485 26.6540404 29.55976  6.2609428\n28    0.56923464  18.9271076 23.721591 29.3191288 36.81534  2.3996212\n29    1.05983029  93.5448847 23.547559 30.4701178 36.23561  7.3059764\n30    5.06104120 175.6211770 20.506944 22.9097222 44.15741 10.2662037\n31    2.45894838  92.2521230 15.836806 26.4861111 47.26910  8.4768519\n32    8.41596121  13.3992527 20.531250 24.3437500 40.34375  4.0000000\n33   32.29115009  48.5575781  7.472222 14.0277778 73.11111  3.3055556\n34   67.02520174  38.1189728  6.417308 23.0730769 56.82500  5.5365385\n35    0.44045652  14.9033108  8.808333  4.7763889 68.97639 11.8000000\n36    0.68597738  36.1310932  6.019841  8.2943122 56.63558 18.8313492\n37    0.04506732   1.0444047  4.097222  0.9583333 66.19444 19.5555556\n38   82.06769018  60.2291485 28.606061 25.9116162 15.17677 10.5782828\n39   73.85415968  50.3565723 30.998775 20.9546569 22.10907 11.0098039\n40   71.01298364  26.5166743 21.092305 10.3903509 44.36802  2.4581340\n41   72.38817124  32.0786008 14.613426  8.8680556 51.32639 19.5300926\n42   88.02884306  19.0830973 13.979167  7.9166667 43.36111 27.0208333\n43  111.65731143  46.0920425  3.500000  5.0000000 67.70833 16.5416667\n44   15.48332956  27.2518400 28.809028  5.1493056 45.29514  8.0694444\n45   23.19231091  29.7023777 24.934554  3.5650253 51.47580 10.0347222\n46   16.08530312  23.7689708 18.676768  4.8585859 37.49495 27.3737374\n47    6.53033038  12.7010509  8.569444  2.3819444 77.63194  2.8541667\n48   64.79179538   5.8243627  9.863095 13.8720238 35.85417 31.9970238\n49   39.77987732  22.7789060  4.166667  3.9722222 55.22222 33.5277778\n50   59.25752748  13.5565645 26.712302 10.6984127 29.11310 22.8531746\n51   90.40274005  27.6776625 43.361111 10.0138889 21.86111  6.5138889\n52   98.91609925  21.7676243 41.946429  9.6309524 20.25000 18.3035714\n53   54.75621138  16.8591656 23.534392 12.3128307 36.77646 17.6097884\n54   83.50247804  27.4121006  9.925595  4.8154762 50.55357 17.7023810\n55   61.88029947  14.9941630 14.219841  3.9960317 17.10714 11.1833333\n56  113.89609156  32.5446475 23.454545 11.0000000 50.40404  9.2727273\n57    3.83593672  54.0682470 31.287037  5.5648148 52.78981  2.2166667\n58   12.23239160  47.6822618 23.409470  6.4559343 56.82803  3.9061869\n59    4.24468473   9.7620848 23.998377  5.9718615 57.03084  6.4080087\n60   13.31738434  19.9637589 23.071413  5.0489766 52.43151  8.2456140\n61    0.99860583  14.3091389 21.850000  5.0142857 49.05714 11.4738095\n62   11.75610789  15.3368712 20.423611  4.6296296 55.81019  9.0625000\n63  149.51437838  12.6144048  1.607143  7.4464286 28.83631  9.0952381\n64  133.76871516  33.6635150  1.809524  7.3280423 74.68254  7.8121693\n65  105.26331029  28.4279916  1.408333  3.1611111 76.72222 12.8500000\n66    9.07128667  25.1264471 37.847222  3.5694444 38.76389  5.7361111\n67   22.31214617  34.4530908 20.976190  4.1785714 53.03571 12.5476190\n68   10.84029612  33.8182191 18.284452  5.2052670 53.29690 11.3535354\n69   14.19026756  11.7402258 20.944444  3.3953824 59.74037  5.2246642\n70    0.39789714   4.0772756  4.555556  3.7222222 21.69444 13.0555556\n71   24.47367207   5.0156765  2.666667  5.8333333 30.58333  4.2083333\n72    3.03853143  43.8474500  3.437500  3.9930556 74.32639  5.7916667\n73    9.88671265  57.4898839  4.333333  5.3214286 68.78869 10.0476190\n74    1.86926953  52.5497916  2.651515  4.8216783 76.90967  7.5681818\n75    2.26848850   1.3183557 13.119035  7.4277956 45.76193 14.8335114\n76    1.02199658   5.1601146 12.603175  3.3174603 61.16270 13.3769841\n77    2.63332873   5.2357347 14.090278  5.6840278 55.64583 14.0104167\n78    0.30359804   9.3525971  5.719017  1.6196581 70.45085  7.6292735\n79   43.45758682  31.2747048 24.772436 39.3035714 23.42143  6.0009158\n80   90.78050556  53.1555933 23.027778 26.5000000 31.86111  8.7638889\n81  112.18703380  48.8181033 18.084377 29.7017066 41.16508  5.1236837\n82   11.42488503  41.7124524 15.848545  7.0162037 61.83135  4.7278439\n83    5.52608517  56.1475817 13.213352  5.6181917 63.47035  6.3179272\n84   44.92480102  42.7897349 27.138889 23.9079861 21.44618  8.6388889\n85   91.12433191  76.4680820 24.747345 20.7043845 27.33864 11.5345180\n86   36.06945091  33.9593461 21.335354 14.8848485 38.77980  6.1666667\n87   43.03776411  16.2081908  6.583333  8.3194444 55.10000 22.5611111\n88   51.88937794  13.4675932  5.291667  7.5625000 23.21528 11.5416667\n89   43.01322190   5.6445590 11.745536 16.0044643 41.35268 23.1071429\n90   72.61065409  17.8500197  2.583333 13.3944444 57.78333 16.8944444\n91   31.54568790  13.5757412 18.133712 45.2282197 17.76420 14.4130682\n92   80.97883447  27.6115990 17.540278 48.2958333 13.07222 17.7305556\n93   38.01058925  10.5304918 17.871429 54.0380952 12.13175 12.3023810\n94   18.48097600  31.9845038 16.208995  6.0006614 40.07870 30.5760582\n95    9.10706910  76.1062278  8.357955  5.2878788 61.10038 12.3731061\n96    8.28107340  11.5477419 19.900285  6.5086360 54.03161 11.7454594\n97    6.23160038   6.2646709 19.429147  4.8228663 56.16948  9.5398551\n98    2.34221362  42.5353514 16.250000  4.0000000 60.00000  9.1388889\n99   15.60774530  53.5973403  6.158333  5.2916667 65.65833  6.4833333\n100   0.00000000   0.0000000        NA         NA       NA         NA\n101   2.00094707  10.2284542 39.027778 25.8333333 15.15278 18.6342593\n102   3.84450592  20.9090963 33.086174 20.5757576 16.37405 29.3494318\n103   4.79083677  11.1933674 33.548611 20.2291667 18.29861 25.8958333\n104  52.17787193  19.5850571 23.814815 27.2361111 34.89815  6.0972222\n105  68.52396967  41.5588278 18.054167 25.6250000 43.95000  5.4458333\n106  45.40447356  37.1546495 19.566141 17.4341432 53.42171  3.8845553\n107  12.72200486   8.6203675 22.154762  6.1269841 46.86905 16.8134921\n108   8.14794038   9.4926716 16.767857  5.1071429 50.91071 14.8392857\n109  26.72847745  20.8640099 23.209072 31.1996243 31.30450  4.6405149\n110  35.14984242  41.0711844 20.387837 24.3029251 37.04388 10.8292298\n111  31.24362103  30.7047944 19.148569 18.1815876 49.03122  7.9062245\n112  47.65878620  43.9889645 25.553571 11.6260913 40.29821  5.3787698\n113  31.82054307  36.9244191 28.483631  8.9428571 42.96825  8.8080357\n          sand      reef    algae reefbuild.prop              ISLAND\n1    6.1770833 24.354167 67.53125     0.26504931             Agrihan\n2    6.0958333 27.691667 64.27083     0.30111912             Aguijan\n3    6.6666667 30.791667 61.41667     0.33393583             Aguijan\n4   13.9166667 34.041667 51.33333     0.39873109            Alamagan\n5    4.1388889 14.777778 79.83333     0.15619495            Alamagan\n6   11.6514550 23.407407 63.96958     0.26788985            Asuncion\n7   13.7638889 22.958333 62.12500     0.26983350            Asuncion\n8    3.9528770 72.812004 22.69940     0.76233829               Baker\n9    1.8349206 56.702381 40.17698     0.58528853               Baker\n10   3.2911255 58.779221 34.54329     0.62985040               Baker\n11   9.0041667 23.459722 67.53611     0.25781095 Farallon de Pajaros\n12  15.4722222  8.055556 76.47222     0.09530069 Farallon de Pajaros\n13   6.6944444 39.138889 53.45833     0.42267887      French Frigate\n14   0.3750000 26.500000 23.12500     0.53400504      French Frigate\n15   5.5833333 47.541667 46.87500     0.50353045      French Frigate\n16   6.1150794 28.706349 60.20635     0.32285995      French Frigate\n17   7.8750000 18.625000 72.75000     0.20383037      French Frigate\n18   3.9642857 23.690476 71.23810     0.24956107             Gardner\n19   4.6008158 29.163675 64.46805     0.31147217                Guam\n20   6.3987356 19.815012 70.98356     0.21823043                Guam\n21   4.7986111 29.222222 65.37500     0.30891205              Guguan\n22   9.9083333 20.825000 68.61667     0.23283332              Guguan\n23   9.4085405 37.253561 53.17253     0.41197803              Hawaii\n24   7.4438479 33.595472 58.48133     0.36486360              Hawaii\n25  12.0033333 24.188889 63.69111     0.27524908              Hawaii\n26   3.5138889 69.159722 15.93750     0.81271422             Howland\n27   3.3493266 56.002525 35.82071     0.60989495             Howland\n28   1.9630682 53.040720 39.21496     0.57493174             Howland\n29   2.1361953 54.017677 43.54158     0.55369093              Jarvis\n30   2.1597222 43.416667 54.42361     0.44375044              Jarvis\n31   1.6880787 42.322917 55.74595     0.43156323              Jarvis\n32  10.7812500 44.875000 44.34375     0.50297723            Johnston\n33   1.8611111 21.500000 76.41667     0.21957447            Johnston\n34   8.1480769 29.490385 62.36154     0.32106442            Johnston\n35   5.5458333 13.584722 80.77639     0.14396526               Kauai\n36   9.0297619 14.314153 75.46693     0.15943396               Kauai\n37   8.9722222  5.055556 85.75000     0.05567452               Kauai\n38   3.7449495 54.517677 25.75505     0.67915566             Kingman\n39   4.4767157 51.953431 33.11887     0.61069736             Kingman\n40   3.3781898 31.482656 46.82616     0.40203209             Kingman\n41   5.4097222 23.481481 70.85648     0.24890808                Kure\n42   7.7222222 21.895833 70.38194     0.23728176                Kure\n43   6.8750000  8.500000 84.25000     0.09164420                Kure\n44  12.6770833 33.958333 53.36458     0.38888226               Lanai\n45   9.3899411 28.499579 61.51052     0.31662645               Lanai\n46  11.5202020 23.535354 64.86869     0.26622486               Lanai\n47   8.5625000 10.951389 80.48611     0.11976912               Lanai\n48   6.3303571 23.735119 67.85119     0.25915575              Laysan\n49   2.4444444  8.138889 88.75000     0.08400229              Laysan\n50  10.6230159 37.410714 51.96627     0.41857213           Lisianski\n51   8.6666667 53.375000 28.37500     0.65290520           Lisianski\n52   8.4107143 51.577381 38.55357     0.57224937           Lisianski\n53   9.7665344 35.847222 54.38624     0.39727192           Lisianski\n54  16.9553571 14.741071 68.25595     0.17760964           Lisianski\n55   3.4579365 18.215873 28.29048     0.39168572                Maro\n56   5.3737374 34.454545 59.67677     0.36602640                Maro\n57   6.5250000 36.851852 55.00648     0.40118137                Maug\n58   6.7924242 29.865404 60.73422     0.32964160                Maug\n59   6.5308442 29.970238 63.43885     0.32084926                Maui\n60  10.6616622 28.120389 60.67713     0.31667991                Maui\n61  11.7714286 26.864286 60.53095     0.30738844                Maui\n62   9.7615741 25.053241 64.87269     0.27859864                Maui\n63   3.0148810  9.053571 37.93155     0.19269019              Midway\n64   8.3280423  9.137566 82.49471     0.09971995              Midway\n65   5.6305556  4.569444 89.57222     0.04853796              Midway\n66  14.0833333 41.416667 44.50000     0.48205626             Molokai\n67   8.2738095 25.154762 65.58333     0.27722383             Molokai\n68  11.5371573 23.489719 64.65043     0.26650418             Molokai\n69  10.3720169 24.339827 64.96503     0.27254761             Molokai\n70   6.8611111  8.277778 34.75000     0.19238218              Necker\n71   6.0625000  8.500000 34.79167     0.19634264               Nihoa\n72  12.4236111  7.430556 80.11806     0.08487348              Niihau\n73  11.2797619  9.654762 78.83631     0.10910436              Niihau\n74   7.0011655  7.473193 84.47786     0.08127361              Niihau\n75  18.8484687 20.546830 60.59544     0.25321981                Oahu\n76   9.1825397 15.920635 74.53968     0.17599579                Oahu\n77  10.1284722 19.774306 69.65625     0.22111353                Oahu\n78  13.7264957  7.338675 78.08013     0.08591405                Oahu\n79   5.0086996 64.076007 29.42234     0.68531697       Ofu & Olosega\n80   7.3472222 49.527778 40.62500     0.54937606       Ofu & Olosega\n81   4.8941086 47.786084 46.28876     0.50795814       Ofu & Olosega\n82   7.9269180 22.864749 66.55919     0.25568934               Pagan\n83  10.1976346 18.831544 69.78828     0.21249809               Pagan\n84   6.7638889 51.046875 30.08507     0.62918343             Palmyra\n85   6.6092048 45.451729 38.87316     0.53900727             Palmyra\n86   5.8222222 36.220202 44.94646     0.44624479             Palmyra\n87   7.1388889 14.902778 77.66111     0.16099991      Pearl & Hermes\n88   2.3888889 12.854167 34.75694     0.26998250      Pearl & Hermes\n89   7.3214286 27.750000 64.45982     0.30094408      Pearl & Hermes\n90   9.0000000 15.977778 74.67778     0.17624709      Pearl & Hermes\n91   2.2670455 63.361932 32.17727     0.66320347                Rose\n92   1.7944444 65.836111 30.80278     0.68125898                Rose\n93   2.2698413 71.909524 24.43413     0.74638571                Rose\n94   6.2923280 22.209656 70.65476     0.23916217                Rota\n95  11.4924242 13.645833 73.47348     0.15663384                Rota\n96   7.3638711 26.408921 65.77707     0.28647435              Saipan\n97   8.7190016 24.252013 65.70934     0.26958257              Saipan\n98   9.5833333 20.250000 69.13889     0.22653822             Sarigan\n99  15.7833333 11.450000 72.14167     0.13697538             Sarigan\n100         NA        NA       NA             NA                <NA>\n101  1.5370370 64.861111 33.78704     0.65749953              Swains\n102  0.6145833 53.661932 45.72348     0.53993769              Swains\n103  1.1597222 53.777778 44.19444     0.54890842              Swains\n104  5.8703704 51.050926 40.99537     0.55462227                 Tau\n105  4.5916667 43.679167 49.39583     0.46929000                 Tau\n106  5.0455385 37.000284 57.30627     0.39234055                 Tau\n107  7.4484127 28.281746 63.68254     0.30752967              Tinian\n108  9.5595238 21.875000 65.75000     0.24964337              Tinian\n109  6.8763612 54.408697 35.94502     0.60217444             Tutuila\n110  6.0852273 44.690762 47.87311     0.48281001             Tutuila\n111  4.8111397 37.330156 56.93745     0.39600196             Tutuila\n112 12.0480159 37.179663 45.67698     0.44872275                Wake\n113  5.0965278 37.426488 51.77629     0.41956640                Wake\n            lat      lon  min_SST     prod IslType bathymetry    distance\n1    18.7691976 145.6655 25.57350 299.9844    high 10.6416667  400.612133\n2    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n3    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n4    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n5    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n6    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n7    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n8     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n9     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n10    0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n11   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n12   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n13   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n14   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n15   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n16   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n17   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n18   24.9988842 191.7483 21.62325 588.3223     low  4.0000000 1138.505046\n19   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n20   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n21   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n22   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n23   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n24   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n25   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n26    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n27    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n28    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n29   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n30   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n31   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n32   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n33   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n34   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n35   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n36   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n37   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n38    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n39    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n40    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n41   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n42   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n43   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n44   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n45   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n46   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n47   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n48   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n49   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n50   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n51   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n52   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n53   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n54   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n55   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n56   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n57   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n58   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n59   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n60   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n61   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n62   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n63   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n64   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n65   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n66   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n67   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n68   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n69   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n70   23.5718950 195.3019 22.37513 679.2464    high  0.4250000  746.085180\n71   23.0591213 198.0764 22.59000 516.1087    high  0.3125000  460.539240\n72   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n73   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n74   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n75   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n76   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n77   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n78   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n79  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n80  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n81  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n82   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n83   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n84    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n85    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n86    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n87   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n88   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n89   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n90   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n91  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n92  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n93  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n94   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n95   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n96   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n97   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n98   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n99   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n100          NA       NA       NA       NA    <NA>         NA          NA\n101 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n102 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n103 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n104 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n105 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n106 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n107  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n108  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n109 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n110 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n111 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n112  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n113  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n    logdistance     pop_area logpoparea     STATE    wave irradiance complexity\n1     2.6027241   0.00000000 0.00000000    Remote 21.8215    42.8050  0.6493571\n2     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n3     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n4     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n5     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n6     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n7     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n8     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n9     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n10    3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n11    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n12    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n13    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n14    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n15    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n16    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n17    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n18    3.0563350   0.00000000 0.00000000    Remote      NA         NA  0.6568526\n19    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n20    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n21    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n22    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n23    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n24    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n25    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n26    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n27    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n28    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n29    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n30    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n31    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n32    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n33    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n34    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n35    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n36    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n37    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n38    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n39    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n40    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n41    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n42    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n43    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n44    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n45    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n46    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n47    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n48    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n49    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n50    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n51    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n52    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n53    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n54    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n55    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n56    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n57    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n58    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n59    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n60    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n61    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n62    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n63    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n64    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n65    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n66    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n67    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n68    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n69    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n70    2.8727884   0.00000000 0.00000000    Remote 39.2032    43.5079  0.5032295\n71    2.6632666   0.00000000 0.00000000    Remote 37.1754    43.6388  0.8630030\n72    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n73    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n74    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n75    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n76    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n77    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n78    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n79    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n80    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n81    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n82    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n83    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n84    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n85    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n86    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n87    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n88    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n89    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n90    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n91    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n92    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n93    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n94    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n95    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n96    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n97    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n98    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n99    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n100          NA           NA         NA      <NA>      NA         NA         NA\n101   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n102   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n103   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n104   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n105   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n106   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n107   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n108   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n109   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n110   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n111   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n112   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\n113   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\nBrowse[2]> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[colnames(data)%in%ID,]\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\nBrowse[2]> \ndebug at #10: dat_cont <- data[, numeric]\nBrowse[2]> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\nBrowse[2]> \nError in .subset(x, j) : invalid subscript type 'closure'\n> scaler(data=fd, ID=c(ID, REGION))\ndebugging in: scaler(data = fd, ID = c(ID, REGION))\ndebug at #1: {\n    ID.vars <- subset(data, filter = ID)\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numeric]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, -numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> debug(scaler)\nBrowse[2]> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[colnames(data)%in%ID,]\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\nBrowse[2]> \ndebug at #4: ID.vars <- subset(data, filter = ID)\nBrowse[2]> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\nBrowse[2]> \ndebug at #9: numerics <- sapply(data, is.numeric)\nBrowse[2]> scaler(data=fd, ID=c(ID, REGION))\nError in match(x, table, nomatch = 0L) : object 'ID' not found\nBrowse[2]> debug(scaler)\nBrowse[2]> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[colnames(data)%in%ID,]\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\nBrowse[2]> \ndebug at #10: dat_cont <- data[, numeric]\nBrowse[2]> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\nBrowse[2]> \nError in .subset(x, j) : invalid subscript type 'closure'\n> \n> \n> \n> \n> \n> \n> \n> \n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[colnames(data)%in%ID,]\n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numeric]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(ID, REGION))\nError in match(x, table, nomatch = 0L) : object 'ID' not found\n> scaler(data=fd, ID=c(\"ID\", \"REGION\"))\nError in .subset(x, j) : invalid subscript type 'closure'\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\"))\ndebug at #1: {\n    ID.vars <- data[colnames(data) %in% ID, ]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numeric]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, -numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[colnames(data) %in% ID, ]\nBrowse[2]> \ndebug at #9: numerics <- sapply(data, is.numeric)\nBrowse[2]> ID.vars \n              ID REGION total.biomass   browser   cropper  excavator  scraper\n1   Agrihan.2011 MARIAN     193.34089 45.504133  53.75021 20.9367902 73.14975\n2   Aguijan.2011 MARIAN      75.25301  4.001634  47.65524  3.6092997 19.98684\n31   Jarvis.2015  PRIAs     178.87371  4.543937  79.61870  2.4589484 92.25212\n32 Johnston.2010     HI     148.03044 33.470560 166.75989  8.4159612 13.39925\n61     Maui.2013     HI      97.79976 14.782137  67.70988  0.9986058 14.30914\n62     Maui.2015     HI      89.71962  8.557538  54.06911 11.7561079 15.33687\n91     Rose.2010  SAMOA     102.79691 19.648251  38.02723 31.5456879 13.57574\n92     Rose.2012  SAMOA     170.92069  9.567689  52.76257 80.9788345 27.61160\n      coral       CCA     turf     macro      sand     reef    algae\n1  19.06250  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2  21.70000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n31 15.83681 26.486111 47.26910  8.476852  1.688079 42.32292 55.74595\n32 20.53125 24.343750 40.34375  4.000000 10.781250 44.87500 44.34375\n61 21.85000  5.014286 49.05714 11.473810 11.771429 26.86429 60.53095\n62 20.42361  4.629630 55.81019  9.062500  9.761574 25.05324 64.87269\n91 18.13371 45.228220 17.76420 14.413068  2.267045 63.36193 32.17727\n92 17.54028 48.295833 13.07222 17.730556  1.794444 65.83611 30.80278\n   reefbuild.prop   ISLAND         lat      lon  min_SST     prod IslType\n1       0.2650493  Agrihan  18.7691976 145.6655 25.57350 299.9844    high\n2       0.3011191  Aguijan  14.8505222 145.5540 26.32422 291.7947    high\n31      0.4315632   Jarvis  -0.3737269 200.0100 25.14811 991.0307    high\n32      0.5029772 Johnston  16.7466029 190.4940 24.58659 435.4276   atoll\n61      0.3073884     Maui  20.8274988 203.5728 23.47777 537.5028    high\n62      0.2785986     Maui  20.8274988 203.5728 23.47777 537.5028    high\n91      0.6632035     Rose -14.5449209 191.8442 26.45779 374.3630   atoll\n92      0.6812590     Rose -14.5449209 191.8442 26.45779 374.3630   atoll\n   bathymetry   distance logdistance    pop_area logpoparea     STATE    wave\n1   10.641667  400.61213    2.602724  0.00000000 0.00000000    Remote 21.8215\n2    6.404348   38.44611    1.584852 10.71237073 1.06864481 Populated 18.3557\n31   8.722404 1937.05961    3.287143  0.00000000 0.00000000    Remote 24.8993\n32  11.400000 1325.93331    3.122522  0.00000000 0.00000000    Remote 34.0338\n61   1.028161  152.05606    2.182004 91.46468193 1.96597588 Populated 29.7250\n62   1.028161  152.05606    2.182004 91.46468193 1.96597588 Populated 29.7250\n91  21.219298  275.84650    2.440667  0.09474589 0.03931332 Populated 27.1245\n92  21.219298  275.84650    2.440667  0.09474589 0.03931332 Populated 27.1245\n   irradiance complexity\n1     42.8050  0.6493571\n2     43.5752  0.5632117\n31    50.1888  0.5245300\n32    45.5527  0.5358269\n61    43.7165  0.6425458\n62    43.7165  0.6425458\n91    42.3857  0.7043106\n92    42.3857  0.7043106\nBrowse[2]> ID \n[1] \"ID\"     \"REGION\"\nBrowse[2]> colnames(data )\n [1] \"ID\"             \"REGION\"         \"total.biomass\"  \"browser\"       \n [5] \"cropper\"        \"excavator\"      \"scraper\"        \"coral\"         \n [9] \"CCA\"            \"turf\"           \"macro\"          \"sand\"          \n[13] \"reef\"           \"algae\"          \"reefbuild.prop\" \"ISLAND\"        \n[17] \"lat\"            \"lon\"            \"min_SST\"        \"prod\"          \n[21] \"IslType\"        \"bathymetry\"     \"distance\"       \"logdistance\"   \n[25] \"pop_area\"       \"logpoparea\"     \"STATE\"          \"wave\"          \n[29] \"irradiance\"     \"complexity\"    \nBrowse[2]> head(ID.vars )\n              ID REGION total.biomass   browser   cropper  excavator  scraper\n1   Agrihan.2011 MARIAN     193.34089 45.504133  53.75021 20.9367902 73.14975\n2   Aguijan.2011 MARIAN      75.25301  4.001634  47.65524  3.6092997 19.98684\n31   Jarvis.2015  PRIAs     178.87371  4.543937  79.61870  2.4589484 92.25212\n32 Johnston.2010     HI     148.03044 33.470560 166.75989  8.4159612 13.39925\n61     Maui.2013     HI      97.79976 14.782137  67.70988  0.9986058 14.30914\n62     Maui.2015     HI      89.71962  8.557538  54.06911 11.7561079 15.33687\n      coral       CCA     turf     macro      sand     reef    algae\n1  19.06250  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2  21.70000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n31 15.83681 26.486111 47.26910  8.476852  1.688079 42.32292 55.74595\n32 20.53125 24.343750 40.34375  4.000000 10.781250 44.87500 44.34375\n61 21.85000  5.014286 49.05714 11.473810 11.771429 26.86429 60.53095\n62 20.42361  4.629630 55.81019  9.062500  9.761574 25.05324 64.87269\n   reefbuild.prop   ISLAND        lat      lon  min_SST     prod IslType\n1       0.2650493  Agrihan 18.7691976 145.6655 25.57350 299.9844    high\n2       0.3011191  Aguijan 14.8505222 145.5540 26.32422 291.7947    high\n31      0.4315632   Jarvis -0.3737269 200.0100 25.14811 991.0307    high\n32      0.5029772 Johnston 16.7466029 190.4940 24.58659 435.4276   atoll\n61      0.3073884     Maui 20.8274988 203.5728 23.47777 537.5028    high\n62      0.2785986     Maui 20.8274988 203.5728 23.47777 537.5028    high\n   bathymetry   distance logdistance pop_area logpoparea     STATE    wave\n1   10.641667  400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2    6.404348   38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n31   8.722404 1937.05961    3.287143  0.00000   0.000000    Remote 24.8993\n32  11.400000 1325.93331    3.122522  0.00000   0.000000    Remote 34.0338\n61   1.028161  152.05606    2.182004 91.46468   1.965976 Populated 29.7250\n62   1.028161  152.05606    2.182004 91.46468   1.965976 Populated 29.7250\n   irradiance complexity\n1     42.8050  0.6493571\n2     43.5752  0.5632117\n31    50.1888  0.5245300\n32    45.5527  0.5358269\n61    43.7165  0.6425458\n62    43.7165  0.6425458\nBrowse[2]> data[colnames(data)%in%ID,]\n              ID REGION total.biomass   browser   cropper  excavator  scraper\n1   Agrihan.2011 MARIAN     193.34089 45.504133  53.75021 20.9367902 73.14975\n2   Aguijan.2011 MARIAN      75.25301  4.001634  47.65524  3.6092997 19.98684\n31   Jarvis.2015  PRIAs     178.87371  4.543937  79.61870  2.4589484 92.25212\n32 Johnston.2010     HI     148.03044 33.470560 166.75989  8.4159612 13.39925\n61     Maui.2013     HI      97.79976 14.782137  67.70988  0.9986058 14.30914\n62     Maui.2015     HI      89.71962  8.557538  54.06911 11.7561079 15.33687\n91     Rose.2010  SAMOA     102.79691 19.648251  38.02723 31.5456879 13.57574\n92     Rose.2012  SAMOA     170.92069  9.567689  52.76257 80.9788345 27.61160\n      coral       CCA     turf     macro      sand     reef    algae\n1  19.06250  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2  21.70000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n31 15.83681 26.486111 47.26910  8.476852  1.688079 42.32292 55.74595\n32 20.53125 24.343750 40.34375  4.000000 10.781250 44.87500 44.34375\n61 21.85000  5.014286 49.05714 11.473810 11.771429 26.86429 60.53095\n62 20.42361  4.629630 55.81019  9.062500  9.761574 25.05324 64.87269\n91 18.13371 45.228220 17.76420 14.413068  2.267045 63.36193 32.17727\n92 17.54028 48.295833 13.07222 17.730556  1.794444 65.83611 30.80278\n   reefbuild.prop   ISLAND         lat      lon  min_SST     prod IslType\n1       0.2650493  Agrihan  18.7691976 145.6655 25.57350 299.9844    high\n2       0.3011191  Aguijan  14.8505222 145.5540 26.32422 291.7947    high\n31      0.4315632   Jarvis  -0.3737269 200.0100 25.14811 991.0307    high\n32      0.5029772 Johnston  16.7466029 190.4940 24.58659 435.4276   atoll\n61      0.3073884     Maui  20.8274988 203.5728 23.47777 537.5028    high\n62      0.2785986     Maui  20.8274988 203.5728 23.47777 537.5028    high\n91      0.6632035     Rose -14.5449209 191.8442 26.45779 374.3630   atoll\n92      0.6812590     Rose -14.5449209 191.8442 26.45779 374.3630   atoll\n   bathymetry   distance logdistance    pop_area logpoparea     STATE    wave\n1   10.641667  400.61213    2.602724  0.00000000 0.00000000    Remote 21.8215\n2    6.404348   38.44611    1.584852 10.71237073 1.06864481 Populated 18.3557\n31   8.722404 1937.05961    3.287143  0.00000000 0.00000000    Remote 24.8993\n32  11.400000 1325.93331    3.122522  0.00000000 0.00000000    Remote 34.0338\n61   1.028161  152.05606    2.182004 91.46468193 1.96597588 Populated 29.7250\n62   1.028161  152.05606    2.182004 91.46468193 1.96597588 Populated 29.7250\n91  21.219298  275.84650    2.440667  0.09474589 0.03931332 Populated 27.1245\n92  21.219298  275.84650    2.440667  0.09474589 0.03931332 Populated 27.1245\n   irradiance complexity\n1     42.8050  0.6493571\n2     43.5752  0.5632117\n31    50.1888  0.5245300\n32    45.5527  0.5358269\n61    43.7165  0.6425458\n62    43.7165  0.6425458\n91    42.3857  0.7043106\n92    42.3857  0.7043106\nBrowse[2]> ID.vars<-data[which(colnames(data)%in%ID),]\nBrowse[2]> ID.vars\n            ID REGION total.biomass   browser  cropper excavator  scraper\n1 Agrihan.2011 MARIAN     193.34089 45.504133 53.75021  20.93679 73.14975\n2 Aguijan.2011 MARIAN      75.25301  4.001634 47.65524   3.60930 19.98684\n    coral      CCA     turf     macro     sand     reef    algae reefbuild.prop\n1 19.0625 5.291667 63.05208  4.479167 6.177083 24.35417 67.53125      0.2650493\n2 21.7000 5.991667 43.04167 21.229167 6.095833 27.69167 64.27083      0.3011191\n   ISLAND      lat      lon  min_SST     prod IslType bathymetry  distance\n1 Agrihan 18.76920 145.6655 25.57350 299.9844    high  10.641667 400.61213\n2 Aguijan 14.85052 145.5540 26.32422 291.7947    high   6.404348  38.44611\n  logdistance pop_area logpoparea     STATE    wave irradiance complexity\n1    2.602724  0.00000   0.000000    Remote 21.8215    42.8050  0.6493571\n2    1.584852 10.71237   1.068645 Populated 18.3557    43.5752  0.5632117\nBrowse[2]> ID\n[1] \"ID\"     \"REGION\"\nBrowse[2]> colnames(data)\n [1] \"ID\"             \"REGION\"         \"total.biomass\"  \"browser\"       \n [5] \"cropper\"        \"excavator\"      \"scraper\"        \"coral\"         \n [9] \"CCA\"            \"turf\"           \"macro\"          \"sand\"          \n[13] \"reef\"           \"algae\"          \"reefbuild.prop\" \"ISLAND\"        \n[17] \"lat\"            \"lon\"            \"min_SST\"        \"prod\"          \n[21] \"IslType\"        \"bathymetry\"     \"distance\"       \"logdistance\"   \n[25] \"pop_area\"       \"logpoparea\"     \"STATE\"          \"wave\"          \n[29] \"irradiance\"     \"complexity\"    \nBrowse[2]> subset(data, filter=ID)\n                          ID REGION total.biomass     browser   cropper\n1               Agrihan.2011 MARIAN    193.340888  45.5041333  53.75021\n2               Aguijan.2011 MARIAN     75.253014   4.0016343  47.65524\n3               Aguijan.2014 MARIAN     74.148686   4.5893386  43.61920\n4              Alamagan.2011 MARIAN     94.488167  12.5781379  65.99270\n5              Alamagan.2014 MARIAN    144.773964  15.3922055  58.87828\n6              Asuncion.2011 MARIAN    152.599709  25.3411154  45.99461\n7              Asuncion.2014 MARIAN    112.753638  34.8369657  50.49522\n8                 Baker.2010  PRIAs     77.551568   9.3553878  38.21525\n9                 Baker.2012  PRIAs    184.815184  11.9803954  99.05277\n10                Baker.2015  PRIAs    158.728771   9.8787396  91.62266\n11  Farallon_de_Pajaros.2011 MARIAN    107.523258  49.8080860  28.33109\n12  Farallon_de_Pajaros.2014 MARIAN     87.694790  30.1532989  42.69120\n13       French_Frigate.2010     HI    129.848726  15.7006843  59.72172\n14       French_Frigate.2011     HI     67.076309   6.0231064  33.62221\n15       French_Frigate.2012     HI     41.873321   6.0265761  22.16151\n16       French_Frigate.2014     HI    183.230803  23.9719539 101.82263\n17       French_Frigate.2015     HI    129.283602  68.1765183 101.79661\n18              Gardner.2011     HI    123.803949  16.7611125 100.98496\n19                 Guam.2011 MARIAN    155.494573  18.3949080  30.36046\n20                 Guam.2014 MARIAN     65.365354  17.2814980  23.02189\n21               Guguan.2011 MARIAN    156.794620  24.0653052  48.98827\n22               Guguan.2014 MARIAN    162.931637  28.2842987  98.55892\n23               Hawaii.2010     HI    106.341370  16.3750308  66.13973\n24               Hawaii.2013     HI    126.849651   7.9058152  94.45441\n25               Hawaii.2015     HI    141.124022  13.5932448  94.25437\n26              Howland.2010  PRIAs     61.942150   8.8646589  28.42874\n27              Howland.2012  PRIAs    114.288006  14.6465817  59.59928\n28              Howland.2015  PRIAs     81.550767   5.2615292  56.79290\n29               Jarvis.2010  PRIAs    178.577469   1.6092601  82.36349\n30               Jarvis.2012  PRIAs    365.651087  13.3469781 171.62189\n31               Jarvis.2015  PRIAs    178.873706   4.5439369  79.61870\n32             Johnston.2010     HI    148.030441  33.4705598 166.75989\n33             Johnston.2012     HI    203.719968  32.3007004  90.57054\n34             Johnston.2015     HI    171.276913  37.7266845 114.04451\n35                Kauai.2010     HI     78.251974   5.9079386  57.00027\n36                Kauai.2013     HI    103.112344   9.1949115  57.10036\n37                Kauai.2015     HI     41.211467   0.9057344  39.21626\n38              Kingman.2010  PRIAs    200.306312   9.5530526  48.45642\n39              Kingman.2012  PRIAs    156.988503   2.2601514  30.51762\n40              Kingman.2015  PRIAs    118.384078   3.3647367  17.48968\n41                 Kure.2010     HI    180.095103  39.7773879  35.85094\n42                 Kure.2012     HI    132.508947  59.2563892  32.39509\n43                 Kure.2015     HI    284.786993  77.4526228  49.58502\n44                Lanai.2010     HI    106.156304  10.8653145  52.55582\n45                Lanai.2012     HI    120.374647  13.5728236  53.90713\n46                Lanai.2013     HI    117.388209  12.4995483  65.03439\n47                Lanai.2015     HI     93.989614  10.7661581  63.99207\n48               Laysan.2011     HI    197.707262  35.6160932  91.47501\n49               Laysan.2015     HI    277.219102  93.5223766 121.13794\n50            Lisianski.2010     HI    119.873882   5.3184264  41.74136\n51            Lisianski.2011     HI    209.409471  16.3498256  74.97924\n52            Lisianski.2012     HI    267.407328  53.6831151  93.04049\n53            Lisianski.2014     HI     99.759511  10.8551967  17.28894\n54            Lisianski.2015     HI    255.467158 105.5630802  38.98950\n55                 Maro.2011     HI    186.845162  24.2417147  85.72898\n56                 Maro.2015     HI    264.108131  30.4104988  87.25689\n57                 Maug.2011 MARIAN    140.140523  52.6031930  29.63315\n58                 Maug.2014 MARIAN    148.684734  47.0974221  41.67266\n59                 Maui.2010     HI     77.423846  14.4557865  48.96129\n60                 Maui.2012     HI    103.548154  18.9027267  51.36428\n61                 Maui.2013     HI     97.799760  14.7821370  67.70988\n62                 Maui.2015     HI     89.719624   8.5575385  54.06911\n63               Midway.2011     HI    536.874848 222.7182354 152.02783\n64               Midway.2014     HI    498.559636 249.4131600  81.71425\n65               Midway.2015     HI    361.308214 153.2623821  74.35453\n66              Molokai.2010     HI    121.804528   6.2104011  81.39639\n67              Molokai.2012     HI    124.879224  16.7457454  51.36824\n68              Molokai.2013     HI    167.513975  17.3311606 105.52430\n69              Molokai.2015     HI    114.006554  11.3443831  76.73168\n70               Necker.2011     HI    658.510259 419.1343077 234.90078\n71                Nihoa.2011     HI    199.448609  62.6218108 207.06175\n72               Niihau.2010     HI    173.331139  42.0969427  84.34822\n73               Niihau.2013     HI    197.354754  37.6395226  92.33863\n74               Niihau.2015     HI    224.155165  59.9811240 109.75498\n75                 Oahu.2010     HI     35.551948   2.8077400  29.15736\n76                 Oahu.2012     HI     40.442515   1.0236315  33.23677\n77                 Oahu.2013     HI     56.546267   7.8327982  40.84441\n78                 Oahu.2015     HI     52.735440   8.1772502  34.90199\n79         Ofu__Olosega.2010  SAMOA    132.013976   5.6662940  51.61539\n80         Ofu__Olosega.2012  SAMOA    231.160932  16.7479087  70.47692\n81         Ofu__Olosega.2015  SAMOA    219.732257   4.0412161  54.68590\n82                Pagan.2011 MARIAN    146.028878  36.1003183  56.79122\n83                Pagan.2014 MARIAN    157.994081  36.3410820  59.97933\n84              Palmyra.2010  PRIAs    189.673055  27.3879874  74.57053\n85              Palmyra.2012  PRIAs    221.756155  12.1700307  41.99371\n86              Palmyra.2015  PRIAs    124.108351  11.3960864  42.68347\n87        Pearl__Hermes.2010     HI    120.130529  37.7468310  23.13774\n88        Pearl__Hermes.2011     HI    240.628208 133.5013581  41.76988\n89        Pearl__Hermes.2012     HI     65.423135  18.0815597  31.39536\n90        Pearl__Hermes.2015     HI    297.593045 136.9281015  70.20427\n91                 Rose.2010  SAMOA    102.796907  19.6482510  38.02723\n92                 Rose.2012  SAMOA    170.920694   9.5676891  52.76257\n93                 Rose.2015  SAMOA     82.560214   3.4675162  30.55162\n94                 Rota.2011 MARIAN    102.329201  10.7600213  41.10370\n95                 Rota.2014 MARIAN    117.454995  10.0773078  22.16439\n96               Saipan.2011 MARIAN     45.191187   2.8117020  22.55067\n97               Saipan.2014 MARIAN     69.449986  14.7547015  42.19901\n98              Sarigan.2011 MARIAN    112.181774  16.5536731  50.75054\n99              Sarigan.2014 MARIAN    215.826605  40.2350404 106.38648\n100          South_Bank.2010  SAMOA      7.364142   0.0000000  22.09243\n101              Swains.2010  SAMOA     27.472671   0.9877970  14.25547\n102              Swains.2012  SAMOA     59.880692   9.1571997  25.96989\n103              Swains.2015  SAMOA     39.793914   5.3515304  18.45818\n104                 Tau.2010  SAMOA    110.070674   3.8451342  34.46261\n105                 Tau.2012  SAMOA    187.331610  20.8370110  56.41180\n106                 Tau.2015  SAMOA    150.053502  27.4813954  40.01298\n107              Tinian.2011 MARIAN     54.324682   6.4592237  26.52309\n108              Tinian.2014 MARIAN     37.723115   5.6220041  14.46050\n109             Tutuila.2010  SAMOA     91.207744   5.1103534  38.50490\n110             Tutuila.2012  SAMOA    124.724096   8.6923559  39.81071\n111             Tutuila.2015  SAMOA    102.755316   4.6950194  36.11188\n112                Wake.2011 MARIAN    148.881721  27.2349040  29.99907\n113                Wake.2014 MARIAN    103.749019  17.0374523  17.96660\n       excavator     scraper     coral        CCA     turf      macro\n1    20.93679023  73.1497498 19.062500  5.2916667 63.05208  4.4791667\n2     3.60929970  19.9868351 21.700000  5.9916667 43.04167 21.2291667\n3    10.31467426  15.6254712 16.750000 14.0416667 41.16667 20.2500000\n4     3.78691476  59.3744948 30.375000  3.6666667 44.29167  7.0416667\n5    13.83391539  56.6695630  9.138889  5.6388889 67.27778 12.5555556\n6    35.11861726  46.1453696 17.244048  6.1633598 59.82407  4.1455026\n7     0.05992306  27.3615277 16.583333  6.3750000 58.84722  3.2777778\n8     0.45678458  29.5241479 32.811508 40.0004960 21.03869  1.6607143\n9     7.69166120  66.0903611 33.377381 23.3250000 33.27063  6.9063492\n10    1.54282512  55.6845425 26.536797 32.2424242 29.95455  4.5887446\n11    0.00000000  29.3840800 19.812500  3.6472222 65.64722  1.8888889\n12    0.00000000  14.8502946  5.583333  2.4722222 75.13889  1.3333333\n13   42.59864561  11.8276769 27.527778 11.6111111 47.62500  5.8333333\n14   50.30661969  10.6625313 18.375000  8.1250000 21.25000  1.8750000\n15   29.01841973   5.6034781 41.416667  6.1250000 25.52083 21.3541667\n16   33.50727420  23.9289486 15.511905 13.1944444 52.51389  7.6924603\n17   15.95123992   8.0010364 10.000000  8.6250000 68.87500  3.8750000\n18    5.72285791   0.3350182 14.761905  8.9285714 42.35714 28.8809524\n19   42.69970410  64.0394979 20.439180  8.7244951 39.36002 25.1080213\n20   10.83352975  14.2284313 11.961024  7.8539880 55.15053 15.8330285\n21    0.00000000  83.7410428 21.541667  7.6805556 61.40972  3.9652778\n22    3.15783804  32.9305769  9.208333 11.6166667 64.99167  3.6250000\n23    7.76420378  16.0624008 28.298368  8.9551930 51.62762  1.5449042\n24    6.04431327  18.4451160 22.747173 10.8482986 53.36511  5.1162206\n25   10.98278911  22.2936188 16.422222  7.7666667 62.93111  0.7600000\n26    0.00000000  24.6487496 33.590278 35.5694444 15.02083  0.9166667\n27    1.81642644  38.2257133 29.348485 26.6540404 29.55976  6.2609428\n28    0.56923464  18.9271076 23.721591 29.3191288 36.81534  2.3996212\n29    1.05983029  93.5448847 23.547559 30.4701178 36.23561  7.3059764\n30    5.06104120 175.6211770 20.506944 22.9097222 44.15741 10.2662037\n31    2.45894838  92.2521230 15.836806 26.4861111 47.26910  8.4768519\n32    8.41596121  13.3992527 20.531250 24.3437500 40.34375  4.0000000\n33   32.29115009  48.5575781  7.472222 14.0277778 73.11111  3.3055556\n34   67.02520174  38.1189728  6.417308 23.0730769 56.82500  5.5365385\n35    0.44045652  14.9033108  8.808333  4.7763889 68.97639 11.8000000\n36    0.68597738  36.1310932  6.019841  8.2943122 56.63558 18.8313492\n37    0.04506732   1.0444047  4.097222  0.9583333 66.19444 19.5555556\n38   82.06769018  60.2291485 28.606061 25.9116162 15.17677 10.5782828\n39   73.85415968  50.3565723 30.998775 20.9546569 22.10907 11.0098039\n40   71.01298364  26.5166743 21.092305 10.3903509 44.36802  2.4581340\n41   72.38817124  32.0786008 14.613426  8.8680556 51.32639 19.5300926\n42   88.02884306  19.0830973 13.979167  7.9166667 43.36111 27.0208333\n43  111.65731143  46.0920425  3.500000  5.0000000 67.70833 16.5416667\n44   15.48332956  27.2518400 28.809028  5.1493056 45.29514  8.0694444\n45   23.19231091  29.7023777 24.934554  3.5650253 51.47580 10.0347222\n46   16.08530312  23.7689708 18.676768  4.8585859 37.49495 27.3737374\n47    6.53033038  12.7010509  8.569444  2.3819444 77.63194  2.8541667\n48   64.79179538   5.8243627  9.863095 13.8720238 35.85417 31.9970238\n49   39.77987732  22.7789060  4.166667  3.9722222 55.22222 33.5277778\n50   59.25752748  13.5565645 26.712302 10.6984127 29.11310 22.8531746\n51   90.40274005  27.6776625 43.361111 10.0138889 21.86111  6.5138889\n52   98.91609925  21.7676243 41.946429  9.6309524 20.25000 18.3035714\n53   54.75621138  16.8591656 23.534392 12.3128307 36.77646 17.6097884\n54   83.50247804  27.4121006  9.925595  4.8154762 50.55357 17.7023810\n55   61.88029947  14.9941630 14.219841  3.9960317 17.10714 11.1833333\n56  113.89609156  32.5446475 23.454545 11.0000000 50.40404  9.2727273\n57    3.83593672  54.0682470 31.287037  5.5648148 52.78981  2.2166667\n58   12.23239160  47.6822618 23.409470  6.4559343 56.82803  3.9061869\n59    4.24468473   9.7620848 23.998377  5.9718615 57.03084  6.4080087\n60   13.31738434  19.9637589 23.071413  5.0489766 52.43151  8.2456140\n61    0.99860583  14.3091389 21.850000  5.0142857 49.05714 11.4738095\n62   11.75610789  15.3368712 20.423611  4.6296296 55.81019  9.0625000\n63  149.51437838  12.6144048  1.607143  7.4464286 28.83631  9.0952381\n64  133.76871516  33.6635150  1.809524  7.3280423 74.68254  7.8121693\n65  105.26331029  28.4279916  1.408333  3.1611111 76.72222 12.8500000\n66    9.07128667  25.1264471 37.847222  3.5694444 38.76389  5.7361111\n67   22.31214617  34.4530908 20.976190  4.1785714 53.03571 12.5476190\n68   10.84029612  33.8182191 18.284452  5.2052670 53.29690 11.3535354\n69   14.19026756  11.7402258 20.944444  3.3953824 59.74037  5.2246642\n70    0.39789714   4.0772756  4.555556  3.7222222 21.69444 13.0555556\n71   24.47367207   5.0156765  2.666667  5.8333333 30.58333  4.2083333\n72    3.03853143  43.8474500  3.437500  3.9930556 74.32639  5.7916667\n73    9.88671265  57.4898839  4.333333  5.3214286 68.78869 10.0476190\n74    1.86926953  52.5497916  2.651515  4.8216783 76.90967  7.5681818\n75    2.26848850   1.3183557 13.119035  7.4277956 45.76193 14.8335114\n76    1.02199658   5.1601146 12.603175  3.3174603 61.16270 13.3769841\n77    2.63332873   5.2357347 14.090278  5.6840278 55.64583 14.0104167\n78    0.30359804   9.3525971  5.719017  1.6196581 70.45085  7.6292735\n79   43.45758682  31.2747048 24.772436 39.3035714 23.42143  6.0009158\n80   90.78050556  53.1555933 23.027778 26.5000000 31.86111  8.7638889\n81  112.18703380  48.8181033 18.084377 29.7017066 41.16508  5.1236837\n82   11.42488503  41.7124524 15.848545  7.0162037 61.83135  4.7278439\n83    5.52608517  56.1475817 13.213352  5.6181917 63.47035  6.3179272\n84   44.92480102  42.7897349 27.138889 23.9079861 21.44618  8.6388889\n85   91.12433191  76.4680820 24.747345 20.7043845 27.33864 11.5345180\n86   36.06945091  33.9593461 21.335354 14.8848485 38.77980  6.1666667\n87   43.03776411  16.2081908  6.583333  8.3194444 55.10000 22.5611111\n88   51.88937794  13.4675932  5.291667  7.5625000 23.21528 11.5416667\n89   43.01322190   5.6445590 11.745536 16.0044643 41.35268 23.1071429\n90   72.61065409  17.8500197  2.583333 13.3944444 57.78333 16.8944444\n91   31.54568790  13.5757412 18.133712 45.2282197 17.76420 14.4130682\n92   80.97883447  27.6115990 17.540278 48.2958333 13.07222 17.7305556\n93   38.01058925  10.5304918 17.871429 54.0380952 12.13175 12.3023810\n94   18.48097600  31.9845038 16.208995  6.0006614 40.07870 30.5760582\n95    9.10706910  76.1062278  8.357955  5.2878788 61.10038 12.3731061\n96    8.28107340  11.5477419 19.900285  6.5086360 54.03161 11.7454594\n97    6.23160038   6.2646709 19.429147  4.8228663 56.16948  9.5398551\n98    2.34221362  42.5353514 16.250000  4.0000000 60.00000  9.1388889\n99   15.60774530  53.5973403  6.158333  5.2916667 65.65833  6.4833333\n100   0.00000000   0.0000000        NA         NA       NA         NA\n101   2.00094707  10.2284542 39.027778 25.8333333 15.15278 18.6342593\n102   3.84450592  20.9090963 33.086174 20.5757576 16.37405 29.3494318\n103   4.79083677  11.1933674 33.548611 20.2291667 18.29861 25.8958333\n104  52.17787193  19.5850571 23.814815 27.2361111 34.89815  6.0972222\n105  68.52396967  41.5588278 18.054167 25.6250000 43.95000  5.4458333\n106  45.40447356  37.1546495 19.566141 17.4341432 53.42171  3.8845553\n107  12.72200486   8.6203675 22.154762  6.1269841 46.86905 16.8134921\n108   8.14794038   9.4926716 16.767857  5.1071429 50.91071 14.8392857\n109  26.72847745  20.8640099 23.209072 31.1996243 31.30450  4.6405149\n110  35.14984242  41.0711844 20.387837 24.3029251 37.04388 10.8292298\n111  31.24362103  30.7047944 19.148569 18.1815876 49.03122  7.9062245\n112  47.65878620  43.9889645 25.553571 11.6260913 40.29821  5.3787698\n113  31.82054307  36.9244191 28.483631  8.9428571 42.96825  8.8080357\n          sand      reef    algae reefbuild.prop              ISLAND\n1    6.1770833 24.354167 67.53125     0.26504931             Agrihan\n2    6.0958333 27.691667 64.27083     0.30111912             Aguijan\n3    6.6666667 30.791667 61.41667     0.33393583             Aguijan\n4   13.9166667 34.041667 51.33333     0.39873109            Alamagan\n5    4.1388889 14.777778 79.83333     0.15619495            Alamagan\n6   11.6514550 23.407407 63.96958     0.26788985            Asuncion\n7   13.7638889 22.958333 62.12500     0.26983350            Asuncion\n8    3.9528770 72.812004 22.69940     0.76233829               Baker\n9    1.8349206 56.702381 40.17698     0.58528853               Baker\n10   3.2911255 58.779221 34.54329     0.62985040               Baker\n11   9.0041667 23.459722 67.53611     0.25781095 Farallon de Pajaros\n12  15.4722222  8.055556 76.47222     0.09530069 Farallon de Pajaros\n13   6.6944444 39.138889 53.45833     0.42267887      French Frigate\n14   0.3750000 26.500000 23.12500     0.53400504      French Frigate\n15   5.5833333 47.541667 46.87500     0.50353045      French Frigate\n16   6.1150794 28.706349 60.20635     0.32285995      French Frigate\n17   7.8750000 18.625000 72.75000     0.20383037      French Frigate\n18   3.9642857 23.690476 71.23810     0.24956107             Gardner\n19   4.6008158 29.163675 64.46805     0.31147217                Guam\n20   6.3987356 19.815012 70.98356     0.21823043                Guam\n21   4.7986111 29.222222 65.37500     0.30891205              Guguan\n22   9.9083333 20.825000 68.61667     0.23283332              Guguan\n23   9.4085405 37.253561 53.17253     0.41197803              Hawaii\n24   7.4438479 33.595472 58.48133     0.36486360              Hawaii\n25  12.0033333 24.188889 63.69111     0.27524908              Hawaii\n26   3.5138889 69.159722 15.93750     0.81271422             Howland\n27   3.3493266 56.002525 35.82071     0.60989495             Howland\n28   1.9630682 53.040720 39.21496     0.57493174             Howland\n29   2.1361953 54.017677 43.54158     0.55369093              Jarvis\n30   2.1597222 43.416667 54.42361     0.44375044              Jarvis\n31   1.6880787 42.322917 55.74595     0.43156323              Jarvis\n32  10.7812500 44.875000 44.34375     0.50297723            Johnston\n33   1.8611111 21.500000 76.41667     0.21957447            Johnston\n34   8.1480769 29.490385 62.36154     0.32106442            Johnston\n35   5.5458333 13.584722 80.77639     0.14396526               Kauai\n36   9.0297619 14.314153 75.46693     0.15943396               Kauai\n37   8.9722222  5.055556 85.75000     0.05567452               Kauai\n38   3.7449495 54.517677 25.75505     0.67915566             Kingman\n39   4.4767157 51.953431 33.11887     0.61069736             Kingman\n40   3.3781898 31.482656 46.82616     0.40203209             Kingman\n41   5.4097222 23.481481 70.85648     0.24890808                Kure\n42   7.7222222 21.895833 70.38194     0.23728176                Kure\n43   6.8750000  8.500000 84.25000     0.09164420                Kure\n44  12.6770833 33.958333 53.36458     0.38888226               Lanai\n45   9.3899411 28.499579 61.51052     0.31662645               Lanai\n46  11.5202020 23.535354 64.86869     0.26622486               Lanai\n47   8.5625000 10.951389 80.48611     0.11976912               Lanai\n48   6.3303571 23.735119 67.85119     0.25915575              Laysan\n49   2.4444444  8.138889 88.75000     0.08400229              Laysan\n50  10.6230159 37.410714 51.96627     0.41857213           Lisianski\n51   8.6666667 53.375000 28.37500     0.65290520           Lisianski\n52   8.4107143 51.577381 38.55357     0.57224937           Lisianski\n53   9.7665344 35.847222 54.38624     0.39727192           Lisianski\n54  16.9553571 14.741071 68.25595     0.17760964           Lisianski\n55   3.4579365 18.215873 28.29048     0.39168572                Maro\n56   5.3737374 34.454545 59.67677     0.36602640                Maro\n57   6.5250000 36.851852 55.00648     0.40118137                Maug\n58   6.7924242 29.865404 60.73422     0.32964160                Maug\n59   6.5308442 29.970238 63.43885     0.32084926                Maui\n60  10.6616622 28.120389 60.67713     0.31667991                Maui\n61  11.7714286 26.864286 60.53095     0.30738844                Maui\n62   9.7615741 25.053241 64.87269     0.27859864                Maui\n63   3.0148810  9.053571 37.93155     0.19269019              Midway\n64   8.3280423  9.137566 82.49471     0.09971995              Midway\n65   5.6305556  4.569444 89.57222     0.04853796              Midway\n66  14.0833333 41.416667 44.50000     0.48205626             Molokai\n67   8.2738095 25.154762 65.58333     0.27722383             Molokai\n68  11.5371573 23.489719 64.65043     0.26650418             Molokai\n69  10.3720169 24.339827 64.96503     0.27254761             Molokai\n70   6.8611111  8.277778 34.75000     0.19238218              Necker\n71   6.0625000  8.500000 34.79167     0.19634264               Nihoa\n72  12.4236111  7.430556 80.11806     0.08487348              Niihau\n73  11.2797619  9.654762 78.83631     0.10910436              Niihau\n74   7.0011655  7.473193 84.47786     0.08127361              Niihau\n75  18.8484687 20.546830 60.59544     0.25321981                Oahu\n76   9.1825397 15.920635 74.53968     0.17599579                Oahu\n77  10.1284722 19.774306 69.65625     0.22111353                Oahu\n78  13.7264957  7.338675 78.08013     0.08591405                Oahu\n79   5.0086996 64.076007 29.42234     0.68531697       Ofu & Olosega\n80   7.3472222 49.527778 40.62500     0.54937606       Ofu & Olosega\n81   4.8941086 47.786084 46.28876     0.50795814       Ofu & Olosega\n82   7.9269180 22.864749 66.55919     0.25568934               Pagan\n83  10.1976346 18.831544 69.78828     0.21249809               Pagan\n84   6.7638889 51.046875 30.08507     0.62918343             Palmyra\n85   6.6092048 45.451729 38.87316     0.53900727             Palmyra\n86   5.8222222 36.220202 44.94646     0.44624479             Palmyra\n87   7.1388889 14.902778 77.66111     0.16099991      Pearl & Hermes\n88   2.3888889 12.854167 34.75694     0.26998250      Pearl & Hermes\n89   7.3214286 27.750000 64.45982     0.30094408      Pearl & Hermes\n90   9.0000000 15.977778 74.67778     0.17624709      Pearl & Hermes\n91   2.2670455 63.361932 32.17727     0.66320347                Rose\n92   1.7944444 65.836111 30.80278     0.68125898                Rose\n93   2.2698413 71.909524 24.43413     0.74638571                Rose\n94   6.2923280 22.209656 70.65476     0.23916217                Rota\n95  11.4924242 13.645833 73.47348     0.15663384                Rota\n96   7.3638711 26.408921 65.77707     0.28647435              Saipan\n97   8.7190016 24.252013 65.70934     0.26958257              Saipan\n98   9.5833333 20.250000 69.13889     0.22653822             Sarigan\n99  15.7833333 11.450000 72.14167     0.13697538             Sarigan\n100         NA        NA       NA             NA                <NA>\n101  1.5370370 64.861111 33.78704     0.65749953              Swains\n102  0.6145833 53.661932 45.72348     0.53993769              Swains\n103  1.1597222 53.777778 44.19444     0.54890842              Swains\n104  5.8703704 51.050926 40.99537     0.55462227                 Tau\n105  4.5916667 43.679167 49.39583     0.46929000                 Tau\n106  5.0455385 37.000284 57.30627     0.39234055                 Tau\n107  7.4484127 28.281746 63.68254     0.30752967              Tinian\n108  9.5595238 21.875000 65.75000     0.24964337              Tinian\n109  6.8763612 54.408697 35.94502     0.60217444             Tutuila\n110  6.0852273 44.690762 47.87311     0.48281001             Tutuila\n111  4.8111397 37.330156 56.93745     0.39600196             Tutuila\n112 12.0480159 37.179663 45.67698     0.44872275                Wake\n113  5.0965278 37.426488 51.77629     0.41956640                Wake\n            lat      lon  min_SST     prod IslType bathymetry    distance\n1    18.7691976 145.6655 25.57350 299.9844    high 10.6416667  400.612133\n2    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n3    14.8505222 145.5540 26.32422 291.7947    high  6.4043478   38.446114\n4    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n5    17.5976319 145.8288 25.75800 311.1410    high  9.2229167  271.050217\n6    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n7    19.6901697 145.4020 25.15698 313.2058    high  9.9447154  503.725385\n8     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n9     0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n10    0.1955945 183.5275 26.26940 884.9237    high 12.4688889 1077.259260\n11   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n12   20.5428660 144.8935 24.72078 322.3268    high 10.4347826  603.500853\n13   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n14   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n15   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n16   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n17   23.7466545 193.8029 22.35188 553.0845   atoll  1.0250000  898.079309\n18   24.9988842 191.7483 21.62325 588.3223     low  4.0000000 1138.505046\n19   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n20   13.4659110 144.7789 26.43683 266.3871    high  6.7144013   16.524992\n21   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n22   17.3070377 145.8414 25.92986 303.3385    high  7.9206349  238.973021\n23   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n24   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n25   19.6531728 204.4824 23.67076 485.4578    high  5.3937294   70.712605\n26    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n27    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n28    0.8071712 183.3816 26.28829 893.5249    high 11.3218182 1131.620635\n29   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n30   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n31   -0.3737269 200.0100 25.14811 991.0307    high  8.7224044 1937.059608\n32   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n33   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n34   16.7466029 190.4940 24.58659 435.4276   atoll 11.4000000 1325.933307\n35   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n36   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n37   22.0279771 200.4573 23.08571 530.9097    high  1.5936508  190.823098\n38    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n39    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n40    6.4022806 197.5961 26.31127 653.9552   atoll 12.3355556 1673.051073\n41   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n42   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n43   28.4157815 181.6642 18.65580 581.4208   atoll  0.9366667 2209.008205\n44   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n45   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n46   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n47   20.8231091 203.0992 23.76280 532.6192    high  1.1995495  114.753838\n48   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n49   25.7731509 188.2698 21.10317 526.1613    high  0.2478261 1498.025119\n50   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n51   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n52   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n53   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n54   26.0158773 186.0650 20.86566 604.0628   atoll  0.2497175 1718.264535\n55   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n56   25.4035719 189.4378 21.25286 652.5088   atoll  0.1000000 1373.904502\n57   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n58   20.0227995 145.2218 25.10507 323.6074    high  6.9895238  542.047392\n59   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n60   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n61   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n62   20.8274988 203.5728 23.47777 537.5028    high  1.0281609  152.056065\n63   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n64   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n65   28.2335718 182.6370 18.99265 570.0078   atoll  0.9235294 2111.813557\n66   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n67   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n68   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n69   21.1208920 202.9425 23.50479 567.6276    high  1.0276094   86.962656\n70   23.5718950 195.3019 22.37513 679.2464    high  0.4250000  746.085180\n71   23.0591213 198.0764 22.59000 516.1087    high  0.3125000  460.539240\n72   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n73   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n74   21.9064997 199.8509 23.19879 474.9148    high  0.7904762  245.359338\n75   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n76   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n77   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n78   21.4595144 202.0297 23.40212 544.8640    high  1.7455635   29.035514\n79  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n80  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n81  -14.1710267 190.3512 26.63850 315.8520     low  3.4333333  113.747661\n82   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n83   18.1065867 145.7598 25.67217 301.9989    high  8.5745370  327.221864\n84    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n85    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n86    5.8762429 197.9111 26.29784 683.4905   atoll 11.4191111 1709.359975\n87   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n88   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n89   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n90   27.8753380 184.2069 19.22594 633.9518   atoll  1.3875000 1952.673717\n91  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n92  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n93  -14.5449209 191.8442 26.45779 374.3630   atoll 21.2192982  275.846500\n94   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n95   14.1448797 145.1785 26.40981 230.3474    high  3.2923077   88.363683\n96   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n97   15.1986885 145.7474 26.24142 329.5397     low  4.7132479    8.804893\n98   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n99   16.7027782 145.7772 25.77330 302.9977    high 11.3916667  171.889214\n100          NA       NA       NA       NA    <NA>         NA          NA\n101 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n102 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n103 -11.0559939 188.9210 27.50250 350.3432    high 16.8177419  315.923159\n104 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n105 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n106 -14.2397700 190.5350 26.75778 305.7970    high  6.8637681  133.101284\n107  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n108  15.0194841 145.6290 26.30700 294.1725    high  4.8815789   18.816116\n109 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n110 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n111 -14.2933092 189.3257 26.56783 406.6967    high  3.7342105   10.384414\n112  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n113  19.2988891 166.6302 25.11992 314.0339   atoll 15.2151111 1441.455634\n    logdistance     pop_area logpoparea     STATE    wave irradiance complexity\n1     2.6027241   0.00000000 0.00000000    Remote 21.8215    42.8050  0.6493571\n2     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n3     1.5848524  10.71237073 1.06864481 Populated 18.3557    43.5752  0.5632117\n4     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n5     2.4330498   0.00000000 0.00000000    Remote 20.3294    43.4626  0.7122837\n6     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n7     2.7021938   0.00000000 0.00000000    Remote 19.5548    43.1212  0.6973295\n8     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n9     3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n10    3.0323202   0.00000000 0.00000000    Remote 20.8526    48.4046  0.6250592\n11    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n12    2.7806779   0.00000000 0.00000000    Remote 20.9987    43.2012  0.7258871\n13    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n14    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n15    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n16    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n17    2.9533147   0.00000000 0.00000000    Remote      NA         NA  0.5319003\n18    3.0563350   0.00000000 0.00000000    Remote      NA         NA  0.6568526\n19    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n20    1.2181413 583.89940493 2.76708118 Populated 15.5398    42.6369  0.5239447\n21    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n22    2.3783489   0.00000000 0.00000000    Remote 20.1654    43.6631  0.6996211\n23    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n24    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n25    1.8494968 310.48985520 2.49344391 Populated 26.4763    41.4614  0.7097747\n26    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n27    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n28    3.0537009   0.00000000 0.00000000    Remote 21.4907    47.8224  0.5752921\n29    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n30    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n31    3.2871430   0.00000000 0.00000000    Remote 24.8993    50.1888  0.5245300\n32    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n33    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n34    3.1225217   0.00000000 0.00000000    Remote 34.0338    45.5527  0.5358269\n35    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n36    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n37    2.2806309  75.66268208 1.88458401 Populated 34.8080    43.0076  0.4636883\n38    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n39    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n40    3.2235092   0.00000000 0.00000000    Remote 30.3207    39.0531  0.4997899\n41    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n42    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n43    3.3441973   0.00000000 0.00000000    Remote 45.5080    39.2653  0.6761911\n44    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n45    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n46    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n47    2.0597672   7.97785815 0.95317274 Populated 28.5566    44.9531  0.5952243\n48    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n49    3.1755191   0.00000000 0.00000000    Remote 42.2588    41.4585  0.5489513\n50    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n51    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n52    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n53    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n54    3.2350900   0.00000000 0.00000000    Remote 42.0123    41.3167  0.8175812\n55    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n56    3.1379565   0.00000000 0.00000000    Remote      NA         NA  0.7578201\n57    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n58    2.7340373   0.00000000 0.00000000    Remote 19.5548    43.4783  0.6288036\n59    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n60    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n61    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n62    2.1820037  91.46468193 1.96597588 Populated 29.7250    43.7165  0.6425458\n63    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n64    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n65    3.3246556   0.00000000 0.00000000    Remote 45.8011    39.3677  0.6985207\n66    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n67    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n68    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n69    1.9393328   2.92725923 0.59408957 Populated 28.5566    44.3811  0.5798249\n70    2.8727884   0.00000000 0.00000000    Remote 39.2032    43.5079  0.5032295\n71    2.6632666   0.00000000 0.00000000    Remote 37.1754    43.6388  0.8630030\n72    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n73    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n74    2.3898026   0.76511726 0.24677356 Populated 34.8080    43.7765  0.5872004\n75    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n76    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n77    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n78    1.4629295 277.37432396 2.44462918 Populated 28.5566    43.2572  0.3660559\n79    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n80    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n81    2.0559425  10.00149874 1.04145185 Populated 23.4032    41.7635  0.6420069\n82    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n83    2.5148423   0.00000000 0.00000000    Remote 20.3294    43.1460  0.7127678\n84    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n85    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n86    3.2328335   0.00000000 0.00000000    Remote 30.3207    39.2093  0.5463743\n87    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n88    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n89    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n90    3.2906297   0.00000000 0.00000000    Remote 46.0951    39.6664  0.6849650\n91    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n92    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n93    2.4406675   0.09474589 0.03931332 Populated 27.1245    42.3857  0.7043106\n94    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n95    1.9462738  47.09553706 1.68210478 Populated 16.8906    43.6585  0.6169039\n96    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n97    0.9447241 302.32507450 2.48190831 Populated 18.0504    43.3102  0.5103093\n98    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n99    2.2352486   0.00000000 0.00000000    Remote 20.1654    43.1598  0.7229792\n100          NA           NA         NA      <NA>      NA         NA         NA\n101   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n102   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n103   2.4995815   8.20387442 0.96397068 Populated 21.1538    42.3648  0.7442864\n104   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n105   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n106   2.1241822  12.50698201 1.13055832 Populated 23.4032    41.3452  0.5499830\n107   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n108   1.2745300 119.83670410 2.08219887 Populated 18.0504    42.8066  0.5286865\n109   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n110   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n111   1.0163820 151.68539425 2.18379749 Populated 22.3420    41.5889  0.5810279\n112   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\n113   3.1588013   0.00000000 0.00000000    Remote 28.0328    44.7139  0.5662124\nBrowse[2]> subset(data, select=ID)\n                          ID\n1               Agrihan.2011\n2               Aguijan.2011\n3               Aguijan.2014\n4              Alamagan.2011\n5              Alamagan.2014\n6              Asuncion.2011\n7              Asuncion.2014\n8                 Baker.2010\n9                 Baker.2012\n10                Baker.2015\n11  Farallon_de_Pajaros.2011\n12  Farallon_de_Pajaros.2014\n13       French_Frigate.2010\n14       French_Frigate.2011\n15       French_Frigate.2012\n16       French_Frigate.2014\n17       French_Frigate.2015\n18              Gardner.2011\n19                 Guam.2011\n20                 Guam.2014\n21               Guguan.2011\n22               Guguan.2014\n23               Hawaii.2010\n24               Hawaii.2013\n25               Hawaii.2015\n26              Howland.2010\n27              Howland.2012\n28              Howland.2015\n29               Jarvis.2010\n30               Jarvis.2012\n31               Jarvis.2015\n32             Johnston.2010\n33             Johnston.2012\n34             Johnston.2015\n35                Kauai.2010\n36                Kauai.2013\n37                Kauai.2015\n38              Kingman.2010\n39              Kingman.2012\n40              Kingman.2015\n41                 Kure.2010\n42                 Kure.2012\n43                 Kure.2015\n44                Lanai.2010\n45                Lanai.2012\n46                Lanai.2013\n47                Lanai.2015\n48               Laysan.2011\n49               Laysan.2015\n50            Lisianski.2010\n51            Lisianski.2011\n52            Lisianski.2012\n53            Lisianski.2014\n54            Lisianski.2015\n55                 Maro.2011\n56                 Maro.2015\n57                 Maug.2011\n58                 Maug.2014\n59                 Maui.2010\n60                 Maui.2012\n61                 Maui.2013\n62                 Maui.2015\n63               Midway.2011\n64               Midway.2014\n65               Midway.2015\n66              Molokai.2010\n67              Molokai.2012\n68              Molokai.2013\n69              Molokai.2015\n70               Necker.2011\n71                Nihoa.2011\n72               Niihau.2010\n73               Niihau.2013\n74               Niihau.2015\n75                 Oahu.2010\n76                 Oahu.2012\n77                 Oahu.2013\n78                 Oahu.2015\n79         Ofu__Olosega.2010\n80         Ofu__Olosega.2012\n81         Ofu__Olosega.2015\n82                Pagan.2011\n83                Pagan.2014\n84              Palmyra.2010\n85              Palmyra.2012\n86              Palmyra.2015\n87        Pearl__Hermes.2010\n88        Pearl__Hermes.2011\n89        Pearl__Hermes.2012\n90        Pearl__Hermes.2015\n91                 Rose.2010\n92                 Rose.2012\n93                 Rose.2015\n94                 Rota.2011\n95                 Rota.2014\n96               Saipan.2011\n97               Saipan.2014\n98              Sarigan.2011\n99              Sarigan.2014\n100          South_Bank.2010\n101              Swains.2010\n102              Swains.2012\n103              Swains.2015\n104                 Tau.2010\n105                 Tau.2012\n106                 Tau.2015\n107              Tinian.2011\n108              Tinian.2014\n109             Tutuila.2010\n110             Tutuila.2012\n111             Tutuila.2015\n112                Wake.2011\n113                Wake.2014\nBrowse[2]> ID.vars<-subset(data, select=ID)\nBrowse[2]> ID.vars\n                          ID\n1               Agrihan.2011\n2               Aguijan.2011\n3               Aguijan.2014\n4              Alamagan.2011\n5              Alamagan.2014\n6              Asuncion.2011\n7              Asuncion.2014\n8                 Baker.2010\n9                 Baker.2012\n10                Baker.2015\n11  Farallon_de_Pajaros.2011\n12  Farallon_de_Pajaros.2014\n13       French_Frigate.2010\n14       French_Frigate.2011\n15       French_Frigate.2012\n16       French_Frigate.2014\n17       French_Frigate.2015\n18              Gardner.2011\n19                 Guam.2011\n20                 Guam.2014\n21               Guguan.2011\n22               Guguan.2014\n23               Hawaii.2010\n24               Hawaii.2013\n25               Hawaii.2015\n26              Howland.2010\n27              Howland.2012\n28              Howland.2015\n29               Jarvis.2010\n30               Jarvis.2012\n31               Jarvis.2015\n32             Johnston.2010\n33             Johnston.2012\n34             Johnston.2015\n35                Kauai.2010\n36                Kauai.2013\n37                Kauai.2015\n38              Kingman.2010\n39              Kingman.2012\n40              Kingman.2015\n41                 Kure.2010\n42                 Kure.2012\n43                 Kure.2015\n44                Lanai.2010\n45                Lanai.2012\n46                Lanai.2013\n47                Lanai.2015\n48               Laysan.2011\n49               Laysan.2015\n50            Lisianski.2010\n51            Lisianski.2011\n52            Lisianski.2012\n53            Lisianski.2014\n54            Lisianski.2015\n55                 Maro.2011\n56                 Maro.2015\n57                 Maug.2011\n58                 Maug.2014\n59                 Maui.2010\n60                 Maui.2012\n61                 Maui.2013\n62                 Maui.2015\n63               Midway.2011\n64               Midway.2014\n65               Midway.2015\n66              Molokai.2010\n67              Molokai.2012\n68              Molokai.2013\n69              Molokai.2015\n70               Necker.2011\n71                Nihoa.2011\n72               Niihau.2010\n73               Niihau.2013\n74               Niihau.2015\n75                 Oahu.2010\n76                 Oahu.2012\n77                 Oahu.2013\n78                 Oahu.2015\n79         Ofu__Olosega.2010\n80         Ofu__Olosega.2012\n81         Ofu__Olosega.2015\n82                Pagan.2011\n83                Pagan.2014\n84              Palmyra.2010\n85              Palmyra.2012\n86              Palmyra.2015\n87        Pearl__Hermes.2010\n88        Pearl__Hermes.2011\n89        Pearl__Hermes.2012\n90        Pearl__Hermes.2015\n91                 Rose.2010\n92                 Rose.2012\n93                 Rose.2015\n94                 Rota.2011\n95                 Rota.2014\n96               Saipan.2011\n97               Saipan.2014\n98              Sarigan.2011\n99              Sarigan.2014\n100          South_Bank.2010\n101              Swains.2010\n102              Swains.2012\n103              Swains.2015\n104                 Tau.2010\n105                 Tau.2012\n106                 Tau.2015\n107              Tinian.2011\n108              Tinian.2014\n109             Tutuila.2010\n110             Tutuila.2012\n111             Tutuila.2015\n112                Wake.2011\n113                Wake.2014\nBrowse[2]> ID.vars<-subset(data, select=print(ID))\n[1] 1\nBrowse[2]> ID.vars<-data[,colnames(data)%in%ID] \nBrowse[2]> head(ID.vars)\n             ID REGION\n1  Agrihan.2011 MARIAN\n2  Aguijan.2011 MARIAN\n3  Aguijan.2014 MARIAN\n4 Alamagan.2011 MARIAN\n5 Alamagan.2014 MARIAN\n6 Asuncion.2011 MARIAN\nBrowse[2]> \ndebug at #10: dat_cont <- data[, numeric]\nBrowse[2]> \nError in .subset(x, j) : invalid subscript type 'closure'\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,-numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(\"ID\", \"REGION\"))\nError in -numeric : invalid argument to unary operator\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,!numeric]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(\"ID\", \"REGION\"))\nError in !numeric : invalid argument type\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> head(dat_cont )\n  total.biomass   browser  cropper excavator  scraper     coral       CCA\n1     193.34089 45.504133 53.75021 20.936790 73.14975 19.062500  5.291667\n2      75.25301  4.001634 47.65524  3.609300 19.98684 21.700000  5.991667\n3      74.14869  4.589339 43.61920 10.314674 15.62547 16.750000 14.041667\n4      94.48817 12.578138 65.99270  3.786915 59.37449 30.375000  3.666667\n5     144.77396 15.392206 58.87828 13.833915 56.66956  9.138889  5.638889\n6     152.59971 25.341115 45.99461 35.118617 46.14537 17.244048  6.163360\n      turf     macro      sand     reef    algae reefbuild.prop      lat\n1 63.05208  4.479167  6.177083 24.35417 67.53125      0.2650493 18.76920\n2 43.04167 21.229167  6.095833 27.69167 64.27083      0.3011191 14.85052\n3 41.16667 20.250000  6.666667 30.79167 61.41667      0.3339358 14.85052\n4 44.29167  7.041667 13.916667 34.04167 51.33333      0.3987311 17.59763\n5 67.27778 12.555556  4.138889 14.77778 79.83333      0.1561950 17.59763\n6 59.82407  4.145503 11.651455 23.40741 63.96958      0.2678899 19.69017\n       lon  min_SST     prod bathymetry  distance logdistance pop_area\n1 145.6655 25.57350 299.9844  10.641667 400.61213    2.602724  0.00000\n2 145.5540 26.32422 291.7947   6.404348  38.44611    1.584852 10.71237\n3 145.5540 26.32422 291.7947   6.404348  38.44611    1.584852 10.71237\n4 145.8288 25.75800 311.1410   9.222917 271.05022    2.433050  0.00000\n5 145.8288 25.75800 311.1410   9.222917 271.05022    2.433050  0.00000\n6 145.4020 25.15698 313.2058   9.944715 503.72538    2.702194  0.00000\n  logpoparea    wave irradiance complexity\n1   0.000000 21.8215    42.8050  0.6493571\n2   1.068645 18.3557    43.5752  0.5632117\n3   1.068645 18.3557    43.5752  0.5632117\n4   0.000000 20.3294    43.4626  0.7122837\n5   0.000000 20.3294    43.4626  0.7122837\n6   0.000000 19.5548    43.1212  0.6973295\nBrowse[2]> \ndebug at #15: cats <- data[, !numeric]\nBrowse[2]> head(cats )\n  Sex Bwt Hwt\n1   F 2.0 7.0\n2   F 2.0 7.4\n3   F 2.0 9.5\n4   F 2.1 7.2\n5   F 2.1 7.3\n6   F 2.1 7.6\nBrowse[2]> data[,!numeric ]\nError in !numeric : invalid argument type\nBrowse[2]> numeric \nfunction (length = 0L) \n.Internal(vector(\"double\", length))\n<bytecode: 0x7ff729b1d608>\n<environment: namespace:base>\nBrowse[2]> numerics\n            ID         REGION  total.biomass        browser        cropper \n         FALSE          FALSE           TRUE           TRUE           TRUE \n     excavator        scraper          coral            CCA           turf \n          TRUE           TRUE           TRUE           TRUE           TRUE \n         macro           sand           reef          algae reefbuild.prop \n          TRUE           TRUE           TRUE           TRUE           TRUE \n        ISLAND            lat            lon        min_SST           prod \n         FALSE           TRUE           TRUE           TRUE           TRUE \n       IslType     bathymetry       distance    logdistance       pop_area \n         FALSE           TRUE           TRUE           TRUE           TRUE \n    logpoparea          STATE           wave     irradiance     complexity \n          TRUE          FALSE           TRUE           TRUE           TRUE \nBrowse[2]> cats<-data[,!numerics]\nBrowse[2]> head(cats)\n             ID REGION   ISLAND IslType     STATE\n1  Agrihan.2011 MARIAN  Agrihan    high    Remote\n2  Aguijan.2011 MARIAN  Aguijan    high Populated\n3  Aguijan.2014 MARIAN  Aguijan    high Populated\n4 Alamagan.2011 MARIAN Alamagan    high    Remote\n5 Alamagan.2014 MARIAN Alamagan    high    Remote\n6 Asuncion.2011 MARIAN Asuncion    high    Remote\nBrowse[2]> cats<-cats[,colnames(cats)%in%ID]\nBrowse[2]> head(cats)\n             ID REGION\n1  Agrihan.2011 MARIAN\n2  Aguijan.2011 MARIAN\n3  Aguijan.2014 MARIAN\n4 Alamagan.2011 MARIAN\n5 Alamagan.2014 MARIAN\n6 Asuncion.2011 MARIAN\nBrowse[2]> cats<-data[,!numerics]\nBrowse[2]> cats<-cats[,!colnames(cats)%in%ID]\nBrowse[2]> head(cats)\n    ISLAND IslType     STATE\n1  Agrihan    high    Remote\n2  Aguijan    high Populated\n3  Aguijan    high Populated\n4 Alamagan    high    Remote\n5 Alamagan    high    Remote\n6 Asuncion    high    Remote\nBrowse[2]> \nError in !numeric : invalid argument type\n> \n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numeric]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #15: cats <- data[, !numeric]\nBrowse[2]> \nError in !numeric : invalid argument type\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep<-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\", sep=                        \".\")\n+ }\n+ \n+ cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\n+ \n+ }\n+ \n+ ## remove unscaled categorical\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ }\n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> \n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #15: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #16: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #18: for (i in 1:dim(cats)[2]) {\n    nvars = dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    for (j in 2:length(i.levels)) {\n        cats[, i + nvars + (j - 1)] <- 0\n        cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n        colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j], \"dummy\", sep = \".\")\n    }\n    cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, i * \n        nvars])\n}\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #23: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> \ndebug at #24: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n        cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, \n            i * nvars])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #15: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #16: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #18: for (i in 1:dim(cats)[2]) {\n    nvars = dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    for (j in 2:length(i.levels)) {\n        cats[, i + nvars + (j - 1)] <- 0\n        cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n        colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j], \"dummy\", sep = \".\")\n    }\n    cats[, i * nvars] <- cats[, i * nvars] - mean(cats[, i * \n        nvars])\n}\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> nvars \nError: object 'nvars' not found\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> nvars \n[1] 2\nBrowse[2]> head(cats )\n  IslType     STATE\n1    high    Remote\n2    high Populated\n3    high Populated\n4    high    Remote\n5    high    Remote\n6    high    Remote\nBrowse[2]> \ndebug at #23: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars][cats[, i] == i.levels[j]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> i.levels \n[1] \"atoll\" \"high\"  \"low\"  \nBrowse[2]> \ndebug at #24: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> cats[, i + nvars + (j - 1)]\nError in `[.data.frame`(cats, , i + nvars + (j - 1)) : \n  undefined columns selected\nBrowse[2]> cats[, i + nvars + (j - 1)]<-0\nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\nBrowse[2]> head(cats )\n  IslType     STATE\n1    high    Remote\n2    high Populated\n3    high Populated\n4    high    Remote\n5    high    Remote\n6    high    Remote\nBrowse[2]> i+nvars+j-1\n[1] 4\nBrowse[2]> cats[, i+nvars]<-0\nBrowse[2]> cats[, i+nvars][cats[,i]==i.levels[2]]<-1\nBrowse[2]> colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[2],i.levels[j],\"dumm<+nvars+(j-1)]<-paste(i.levels[2],i.levels[j],\"dummy                        \", sep=\".\")\nError in `colnames<-`(`*tmp*`, value = c(\"IslType\", \"STATE\", \"V3\", \"high.high.dummy\" : \n  'names' attribute [4] must be the same length as the vector [3]\nBrowse[2]> head(cats)\n  IslType     STATE V3\n1    high    Remote  1\n2    high Populated  1\n3    high Populated  1\n4    high    Remote  1\n5    high    Remote  1\n6    high    Remote  1\nBrowse[2]> tail(cats)\n    IslType     STATE V3\n108    high Populated  1\n109    high Populated  1\n110    high Populated  1\n111    high Populated  1\n112   atoll    Remote  0\n113   atoll    Remote  0\nBrowse[2]> colnames(cats)[i+nvars]<-paste(i.levels[2],i.levels[j],\"dummy\", se<+nvars]<-paste(i.levels[2],i.levels[j],\"dummy\", sep                        =\".\")\nBrowse[2]> head(cats)\n  IslType     STATE high.high.dummy\n1    high    Remote               1\n2    high Populated               1\n3    high Populated               1\n4    high    Remote               1\n5    high    Remote               1\n6    high    Remote               1\nBrowse[2]> colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", se<+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep                        =\".\")\nBrowse[2]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[2]> for(j in 2:length(i.levels)){\n+ cats[, i+nvars+j]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j],i.levels[j+1],\"dummy\", sep<-1)]<-paste(i.levels[j],i.levels[j+1],\"dummy\", sep=                        \".\")\n+ if(j==length(i.levels)){break}\n+ }\ndebug at #2: cats[, i + nvars + j] <- 0\nBrowse[3]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[3]> length(i.levels)\n[1] 3\nBrowse[3]> i.levels\n[1] \"atoll\" \"high\"  \"low\"  \nBrowse[3]> i+nvars+j\n[1] 5\nBrowse[3]> cats[, i+nvars+(j-1)]<-0\nBrowse[3]> head(cats)\n  IslType     STATE atoll.high.dummy V4\n1    high    Remote                1  0\n2    high Populated                1  0\n3    high Populated                1  0\n4    high    Remote                1  0\n5    high    Remote                1  0\n6    high    Remote                1  0\nBrowse[3]> cats[, i+nvars][cats[,i]==i.levels[j+1]]<-1\nBrowse[3]> head(cats)\n  IslType     STATE atoll.high.dummy V4\n1    high    Remote                1  0\n2    high Populated                1  0\n3    high Populated                1  0\n4    high    Remote                1  0\n5    high    Remote                1  0\n6    high    Remote                1  0\nBrowse[3]> i.levels\n[1] \"atoll\" \"high\"  \"low\"  \nBrowse[3]> tail(i.levels)\n[1] \"atoll\" \"high\"  \"low\"  \nBrowse[3]> tail(cats)\n    IslType     STATE atoll.high.dummy V4\n108    high Populated                1  0\n109    high Populated                1  0\n110    high Populated                1  0\n111    high Populated                1  0\n112   atoll    Remote                0  0\n113   atoll    Remote                0  0\nBrowse[3]> cats\n    IslType     STATE atoll.high.dummy V4\n1      high    Remote                1  0\n2      high Populated                1  0\n3      high Populated                1  0\n4      high    Remote                1  0\n5      high    Remote                1  0\n6      high    Remote                1  0\n7      high    Remote                1  0\n8      high    Remote                1  0\n9      high    Remote                1  0\n10     high    Remote                1  0\n11     high    Remote                1  0\n12     high    Remote                1  0\n13    atoll    Remote                0  0\n14    atoll    Remote                0  0\n15    atoll    Remote                0  0\n16    atoll    Remote                0  0\n17    atoll    Remote                0  0\n18      low    Remote                1  0\n19     high Populated                1  0\n20     high Populated                1  0\n21     high    Remote                1  0\n22     high    Remote                1  0\n23     high Populated                1  0\n24     high Populated                1  0\n25     high Populated                1  0\n26     high    Remote                1  0\n27     high    Remote                1  0\n28     high    Remote                1  0\n29     high    Remote                1  0\n30     high    Remote                1  0\n31     high    Remote                1  0\n32    atoll    Remote                0  0\n33    atoll    Remote                0  0\n34    atoll    Remote                0  0\n35     high Populated                1  0\n36     high Populated                1  0\n37     high Populated                1  0\n38    atoll    Remote                0  0\n39    atoll    Remote                0  0\n40    atoll    Remote                0  0\n41    atoll    Remote                0  0\n42    atoll    Remote                0  0\n43    atoll    Remote                0  0\n44     high Populated                1  0\n45     high Populated                1  0\n46     high Populated                1  0\n47     high Populated                1  0\n48     high    Remote                1  0\n49     high    Remote                1  0\n50    atoll    Remote                0  0\n51    atoll    Remote                0  0\n52    atoll    Remote                0  0\n53    atoll    Remote                0  0\n54    atoll    Remote                0  0\n55    atoll    Remote                0  0\n56    atoll    Remote                0  0\n57     high    Remote                1  0\n58     high    Remote                1  0\n59     high Populated                1  0\n60     high Populated                1  0\n61     high Populated                1  0\n62     high Populated                1  0\n63    atoll    Remote                0  0\n64    atoll    Remote                0  0\n65    atoll    Remote                0  0\n66     high Populated                1  0\n67     high Populated                1  0\n68     high Populated                1  0\n69     high Populated                1  0\n70     high    Remote                1  0\n71     high    Remote                1  0\n72     high Populated                1  0\n73     high Populated                1  0\n74     high Populated                1  0\n75     high Populated                1  0\n76     high Populated                1  0\n77     high Populated                1  0\n78     high Populated                1  0\n79      low Populated                1  0\n80      low Populated                1  0\n81      low Populated                1  0\n82     high    Remote                1  0\n83     high    Remote                1  0\n84    atoll    Remote                0  0\n85    atoll    Remote                0  0\n86    atoll    Remote                0  0\n87    atoll    Remote                0  0\n88    atoll    Remote                0  0\n89    atoll    Remote                0  0\n90    atoll    Remote                0  0\n91    atoll Populated                0  0\n92    atoll Populated                0  0\n93    atoll Populated                0  0\n94     high Populated                1  0\n95     high Populated                1  0\n96      low Populated                1  0\n97      low Populated                1  0\n98     high    Remote                1  0\n99     high    Remote                1  0\n100    <NA>      <NA>                0  0\n101    high Populated                1  0\n102    high Populated                1  0\n103    high Populated                1  0\n104    high Populated                1  0\n105    high Populated                1  0\n106    high Populated                1  0\n107    high Populated                1  0\n108    high Populated                1  0\n109    high Populated                1  0\n110    high Populated                1  0\n111    high Populated                1  0\n112   atoll    Remote                0  0\n113   atoll    Remote                0  0\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy V4\n97     low Populated                1  0\nBrowse[3]> cats[, i+nvars][cats[,i]==i.levels[j+1]]<-1\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy V4\n97     low Populated                1  0\nBrowse[3]> i.levels\n[1] \"atoll\" \"high\"  \"low\"  \nBrowse[3]> cats[, i+nvars][cats[,i+nvars]==i.levels[j+1]]<-1\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy V4\n97     low Populated                1  0\nBrowse[3]> cats[, i+nvars]\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1\n [38] 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1\n [75] 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1\n[112] 0 0\nBrowse[3]> cats[, i+nvars+(j-1)][cats[,i+nvars+(j-1)]==i.levels[j+1]]<-1\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy V4\n97     low Populated                1  0\nBrowse[3]> cats[, i+nvars+(j-1)]\n  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[112] 0 0\nBrowse[3]> [cats[,i+nvars]\nError: unexpected '[' in \"[\"\nBrowse[3]> cats[,i+nvars]\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1\n [38] 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1\n [75] 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1\n[112] 0 0\nBrowse[3]> i\n[1] 1\nBrowse[3]> cats[,i]\n  [1] high  high  high  high  high  high  high  high  high  high  high  high \n [13] atoll atoll atoll atoll atoll low   high  high  high  high  high  high \n [25] high  high  high  high  high  high  high  atoll atoll atoll high  high \n [37] high  atoll atoll atoll atoll atoll atoll high  high  high  high  high \n [49] high  atoll atoll atoll atoll atoll atoll atoll high  high  high  high \n [61] high  high  atoll atoll atoll high  high  high  high  high  high  high \n [73] high  high  high  high  high  high  low   low   low   high  high  atoll\n [85] atoll atoll atoll atoll atoll atoll atoll atoll atoll high  high  low  \n [97] low   high  high  <NA>  high  high  high  high  high  high  high  high \n[109] high  high  high  atoll atoll\nLevels: atoll high low\nBrowse[3]> cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\nBrowse[3]> head(cats)\n  IslType     STATE atoll.high.dummy V4\n1    high    Remote                1  0\n2    high Populated                1  0\n3    high Populated                1  0\n4    high    Remote                1  0\n5    high    Remote                1  0\n6    high    Remote                1  0\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy V4\n97     low Populated                1  1\nBrowse[3]> colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j],i.levels[j+1],\"du<+nvars+(j-1)]<-paste(i.levels[j],i.levels[j+1],\"dum                        my\", sep=\".\")\nBrowse[3]> cats[97,]\n   IslType     STATE atoll.high.dummy high.low.dummy\n97     low Populated                1              1\nBrowse[3]> colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"<+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"d                        ummy\", sep=\".\")\nBrowse[3]> head(cats)\n  IslType     STATE atoll.high.dummy atoll.low.dummy\n1    high    Remote                1               0\n2    high Populated                1               0\n3    high Populated                1               0\n4    high    Remote                1               0\n5    high    Remote                1               0\n6    high    Remote                1               0\nBrowse[3]> cats[,i*nvars]<-cats[,i*nvars] - mean(cats[,i*nvars])\nWarning messages:\n1: In mean.default(cats[, i * nvars]) :\n  argument is not numeric or logical: returning NA\n2: In Ops.factor(cats[, i * nvars], mean(cats[, i * nvars])) :\n  '-' not meaningful for factors\nBrowse[3]> head(cats)\n  IslType STATE atoll.high.dummy atoll.low.dummy\n1    high    NA                1               0\n2    high    NA                1               0\n3    high    NA                1               0\n4    high    NA                1               0\n5    high    NA                1               0\n6    high    NA                1               0\nBrowse[3]> \ndebug at #3: cats[, i + nvars][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[3]> for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ \n+ }\ndebug at #3: nvars = dim(cats)[2]\nBrowse[4]> head(cats)\n  IslType STATE atoll.high.dummy atoll.low.dummy V5\n1    high    NA                1               0  0\n2    high    NA                1               0  0\n3    high    NA                1               0  0\n4    high    NA                1               0  0\n5    high    NA                1               0  0\n6    high    NA                1               0  0\nBrowse[4]> ID.vars<-data[,colnames(data)%in%ID] \nBrowse[4]> \ndebug at #4: i.levels <- levels(cats[, i])\nBrowse[4]> \ndebug at #6: cats[, i + nvars] <- 0\nBrowse[4]> \ndebug at #7: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[4]> \ndebug at #8: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[4]> # scale the numeric variables\nBrowse[4]> numerics<-sapply(data, is.numeric)\nBrowse[4]> dat_cont<-data[, numerics]\nBrowse[4]> scaled_cont<-scale(dat_cont, center=TRUE)\nBrowse[4]> \ndebug at #10: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[4]> # scale the categorical variables\nBrowse[4]> cats<-data[,!numerics]\nBrowse[4]> cats<-cats[,!colnames(cats)%in%ID]\nBrowse[4]> \ndebug at #11: cats[, i + nvars + (j - 1)] <- 0\nBrowse[4]> for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\ndebug at #3: nvars = dim(cats)[2]\nBrowse[5]> head(cats)\n  IslType     STATE\n1    high    Remote\n2    high Populated\n3    high Populated\n4    high    Remote\n5    high    Remote\n6    high    Remote\nBrowse[5]> ## extract ID variables\nBrowse[5]> ID.vars<-data[,colnames(data)%in%ID] \nBrowse[5]> \ndebug at #4: i.levels <- levels(cats[, i])\nBrowse[5]> \ndebug at #6: cats[, i + nvars] <- 0\nBrowse[5]> \ndebug at #7: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[5]> \ndebug at #8: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[5]> # scale the numeric variables\nBrowse[5]> numerics<-sapply(data, is.numeric)\nBrowse[5]> dat_cont<-data[, numerics]\nBrowse[5]> scaled_cont<-scale(dat_cont, center=TRUE)\nBrowse[5]> \ndebug at #10: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[5]> # scale the categorical variables\nBrowse[5]> cats<-data[,!numerics]\nBrowse[5]> cats<-cats[,!colnames(cats)%in%ID]\nBrowse[5]> \ndebug at #11: cats[, i + nvars + (j - 1)] <- 0\nBrowse[5]> for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\ndebug at #3: nvars = dim(cats)[2]\nBrowse[6]> head(cats)\n  IslType     STATE\n1    high    Remote\n2    high Populated\n3    high Populated\n4    high    Remote\n5    high    Remote\n6    high    Remote\nBrowse[6]> \ndebug at #4: i.levels <- levels(cats[, i])\nBrowse[6]> for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\ndebug at #3: nvars = dim(cats)[2]\nBrowse[7]> head(cats)\n  IslType     STATE\n1    high    Remote\n2    high Populated\n3    high Populated\n4    high    Remote\n5    high    Remote\n6    high    Remote\nBrowse[7]> nvars = dim(cats)[2]\nBrowse[7]> i.levels<-levels(cats[,i])\nBrowse[7]> \ndebug at #4: i.levels <- levels(cats[, i])\nBrowse[7]> cats[, i+nvars]<-0\nBrowse[7]> cats[, i+nvars][cats[,i]==i.levels[2]]<-1\nBrowse[7]> colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", se<+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep                        =\".\")\nBrowse[7]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[7]> for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[8]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[8]> for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[9]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[9]> for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ }\ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[10]> head(cats)\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[10]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[10]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[10]> \ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[10]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[10]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[10]> \nBrowse[9]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[9]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[9]> \ndebug at #5: if (j == length(i.levels)) {\n    break\n}\nBrowse[9]> \ndebug at #5: break\nBrowse[9]> \nBrowse[8]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[8]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[8]> \ndebug at #5: if (j == length(i.levels)) {\n    break\n}\nBrowse[8]> \ndebug at #5: break\nBrowse[8]> \nBrowse[7]> \ndebug at #6: cats[, i + nvars] <- 0\nBrowse[7]> \ndebug at #7: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[7]> \ndebug at #8: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[7]> \ndebug at #10: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[7]> \ndebug at #11: cats[, i + nvars + (j - 1)] <- 0\nBrowse[7]> \ndebug at #12: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[7]> \ndebug at #13: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[7]> \ndebug at #14: if (j == length(i.levels)) {\n    break\n}\nBrowse[7]> \ndebug at #11: cats[, i + nvars + (j - 1)] <- 0\nBrowse[7]> \ndebug at #12: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[7]> \ndebug at #13: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[7]> \ndebug at #14: if (j == length(i.levels)) {\n    break\n}\nBrowse[7]> \ndebug at #14: break\nBrowse[7]> \ndebug at #3: nvars = dim(cats)[2]\nBrowse[7]> \ndebug at #4: i.levels <- levels(cats[, i])\nBrowse[7]> \ndebug at #6: cats[, i + nvars] <- 0\nBrowse[7]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\nBrowse[6]> \ndebug at #6: cats[, i + nvars] <- 0\nBrowse[6]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\nBrowse[5]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\nBrowse[4]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\nBrowse[3]> \nError in `[.data.frame`(`*tmp*`, , i + nvars) : \n  undefined columns selected\nBrowse[2]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars = dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,numerics]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ }\n> \n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        cats[, i + nvars] <- 0\n        cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n                1]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j + 1], \"dummy\", sep = \".\")\n            if (j == length(i.levels)) {\n                break\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, numerics]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #15: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #16: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #18: for (i in 1:dim(cats)[2]) {\n    nvars = dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    cats[, i + nvars] <- 0\n    cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 2:length(i.levels)) {\n        cats[, i + nvars + (j - 1)] <- 0\n        cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n            1]] <- 1\n        colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j + 1], \"dummy\", sep = \".\")\n        if (j == length(i.levels)) {\n            break\n        }\n    }\n}\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #23: cats[, i + nvars] <- 0\nBrowse[2]> \ndebug at #24: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #25: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> head(cats )\n  IslType     STATE V3\n1    high    Remote  1\n2    high Populated  1\n3    high Populated  1\n4    high    Remote  1\n5    high    Remote  1\n6    high    Remote  1\nBrowse[2]> \ndebug at #27: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> head(cats )\n  IslType     STATE atoll.high.dummy\n1    high    Remote                1\n2    high Populated                1\n3    high Populated                1\n4    high    Remote                1\n5    high    Remote                1\n6    high    Remote                1\nBrowse[2]> \ndebug at #28: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[3]> cats \n    IslType     STATE atoll.high.dummy\n1      high    Remote                1\n2      high Populated                1\n3      high Populated                1\n4      high    Remote                1\n5      high    Remote                1\n6      high    Remote                1\n7      high    Remote                1\n8      high    Remote                1\n9      high    Remote                1\n10     high    Remote                1\n11     high    Remote                1\n12     high    Remote                1\n13    atoll    Remote                0\n14    atoll    Remote                0\n15    atoll    Remote                0\n16    atoll    Remote                0\n17    atoll    Remote                0\n18      low    Remote                0\n19     high Populated                1\n20     high Populated                1\n21     high    Remote                1\n22     high    Remote                1\n23     high Populated                1\n24     high Populated                1\n25     high Populated                1\n26     high    Remote                1\n27     high    Remote                1\n28     high    Remote                1\n29     high    Remote                1\n30     high    Remote                1\n31     high    Remote                1\n32    atoll    Remote                0\n33    atoll    Remote                0\n34    atoll    Remote                0\n35     high Populated                1\n36     high Populated                1\n37     high Populated                1\n38    atoll    Remote                0\n39    atoll    Remote                0\n40    atoll    Remote                0\n41    atoll    Remote                0\n42    atoll    Remote                0\n43    atoll    Remote                0\n44     high Populated                1\n45     high Populated                1\n46     high Populated                1\n47     high Populated                1\n48     high    Remote                1\n49     high    Remote                1\n50    atoll    Remote                0\n51    atoll    Remote                0\n52    atoll    Remote                0\n53    atoll    Remote                0\n54    atoll    Remote                0\n55    atoll    Remote                0\n56    atoll    Remote                0\n57     high    Remote                1\n58     high    Remote                1\n59     high Populated                1\n60     high Populated                1\n61     high Populated                1\n62     high Populated                1\n63    atoll    Remote                0\n64    atoll    Remote                0\n65    atoll    Remote                0\n66     high Populated                1\n67     high Populated                1\n68     high Populated                1\n69     high Populated                1\n70     high    Remote                1\n71     high    Remote                1\n72     high Populated                1\n73     high Populated                1\n74     high Populated                1\n75     high Populated                1\n76     high Populated                1\n77     high Populated                1\n78     high Populated                1\n79      low Populated                0\n80      low Populated                0\n81      low Populated                0\n82     high    Remote                1\n83     high    Remote                1\n84    atoll    Remote                0\n85    atoll    Remote                0\n86    atoll    Remote                0\n87    atoll    Remote                0\n88    atoll    Remote                0\n89    atoll    Remote                0\n90    atoll    Remote                0\n91    atoll Populated                0\n92    atoll Populated                0\n93    atoll Populated                0\n94     high Populated                1\n95     high Populated                1\n96      low Populated                0\n97      low Populated                0\n98     high    Remote                1\n99     high    Remote                1\n100    <NA>      <NA>                0\n101    high Populated                1\n102    high Populated                1\n103    high Populated                1\n104    high Populated                1\n105    high Populated                1\n106    high Populated                1\n107    high Populated                1\n108    high Populated                1\n109    high Populated                1\n110    high Populated                1\n111    high Populated                1\n112   atoll    Remote                0\n113   atoll    Remote                0\nBrowse[3]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[3]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[3]> \ndebug at #5: if (j == length(i.levels)) {\n    break\n}\nBrowse[3]> head(cats )\n  IslType     STATE atoll.high.dummy atoll.low.dummy\n1    high    Remote                1               0\n2    high Populated                1               0\n3    high Populated                1               0\n4    high    Remote                1               0\n5    high    Remote                1               0\n6    high    Remote                1               0\nBrowse[3]> \ndebug at #2: cats[, i + nvars + (j - 1)] <- 0\nBrowse[3]> \ndebug at #3: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[3]> \ndebug at #4: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[3]> \ndebug at #5: if (j == length(i.levels)) {\n    break\n}\nBrowse[3]> \ndebug at #5: break\nBrowse[3]> \nBrowse[2]> head(cats )\n  IslType     STATE atoll.high.dummy atoll.low.dummy high.NA.dummy\n1    high    Remote                1               0             0\n2    high Populated                1               0             0\n3    high Populated                1               0             0\n4    high    Remote                1               0             0\n5    high    Remote                1               0             0\n6    high    Remote                1               0             0\nBrowse[2]> \ndebug at #29: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[2]> \ndebug at #30: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #31: break\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> head(cats )\n  IslType     STATE atoll.high.dummy atoll.low.dummy high.NA.dummy\n1    high    Remote                1               0             0\n2    high Populated                1               0             0\n3    high Populated                1               0             0\n4    high    Remote                1               0             0\n5    high    Remote                1               0             0\n6    high    Remote                1               0             0\nBrowse[2]> \ndebug at #23: cats[, i + nvars] <- 0\nBrowse[2]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars = dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        cats[, i + nvars] <- 0\n        cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n                1]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j + 1], \"dummy\", sep = \".\")\n            if (j == length(i.levels)) {\n                break\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, numerics]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #10: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #11: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #12: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #15: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #16: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #18: for (i in 1:dim(cats)[2]) {\n    nvars = dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    cats[, i + nvars] <- 0\n    cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 2:length(i.levels)) {\n        cats[, i + nvars + (j - 1)] <- 0\n        cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n            1]] <- 1\n        colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j + 1], \"dummy\", sep = \".\")\n        if (j == length(i.levels)) {\n            break\n        }\n    }\n}\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #23: cats[, i + nvars] <- 0\nBrowse[2]> \ndebug at #24: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #25: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #27: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #28: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #29: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[2]> \ndebug at #30: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #28: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #29: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[2]> \ndebug at #30: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #31: break\nBrowse[2]> head(cats )\n  IslType     STATE atoll.high.dummy atoll.low.dummy high.NA.dummy\n1    high    Remote                1               0             0\n2    high Populated                1               0             0\n3    high Populated                1               0             0\n4    high    Remote                1               0             0\n5    high    Remote                1               0             0\n6    high    Remote                1               0             0\nBrowse[2]> \ndebug at #20: nvars = dim(cats)[2]\nBrowse[2]> nvars \n[1] 2\nBrowse[2]> dim(cats)\n[1] 113   5\nBrowse[2]> dim(cats)[2]\n[1] 5\nBrowse[2]> \ndebug at #21: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #23: cats[, i + nvars] <- 0\nBrowse[2]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs\n+ data<-data[complete.cases(data),]\n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ \n+ cats[, i+nvars]<-0\n+ cats[, i+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[i+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, i+nvars+(j-1)]<-0\n+ cats[, i+nvars+(j-1)][cats[,i]==i.levels[j+1]]<-1\n+ colnames(cats)[i+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", s<-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dummy\", se                        p=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,numerics]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ }\n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        cats[, i + nvars] <- 0\n        cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 2:length(i.levels)) {\n            cats[, i + nvars + (j - 1)] <- 0\n            cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n                1]] <- 1\n            colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j + 1], \"dummy\", sep = \".\")\n            if (j == length(i.levels)) {\n                break\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, numerics]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #6: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    cats[, i + nvars] <- 0\n    cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 2:length(i.levels)) {\n        cats[, i + nvars + (j - 1)] <- 0\n        cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + \n            1]] <- 1\n        colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j + 1], \"dummy\", sep = \".\")\n        if (j == length(i.levels)) {\n            break\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #25: cats[, i + nvars] <- 0\nBrowse[2]> \ndebug at #26: cats[, i + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #27: colnames(cats)[i + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #29: for (j in 2:length(i.levels)) {\n    cats[, i + nvars + (j - 1)] <- 0\n    cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\n    colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #30: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #31: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[2]> \ndebug at #32: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #33: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #30: cats[, i + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #31: cats[, i + nvars + (j - 1)][cats[, i] == i.levels[j + 1]] <- 1\nBrowse[2]> \ndebug at #32: colnames(cats)[i + nvars + (j - 1)] <- paste(i.levels[j - 1], \n    i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #33: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #33: break\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> nvars \n[1] 5\nBrowse[2]> \ndebug at #25: cats[, i + nvars] <- 0\nBrowse[2]> i.levels \n[1] \"Populated\" \"Remote\"   \nBrowse[2]> \nError in `[<-.data.frame`(`*tmp*`, , i + nvars, value = 0) : \n  new columns would leave holes after existing columns\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs\n+ data<-data[complete.cases(data),]\n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ \n+ \n+ \n+ # scale the numeric variables\n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ # scale the categorical variables\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, counter+nvars+(j-1)]<-0\n+ cats[, counter+nvars+(j-1)][cats[,counter]==i.levels[j+1]]<-1\n+ colnames(cats)[counter+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dum<ars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dumm                        y\", sep=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,numerics]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ ## bind numeric and categorical together with ID.vars\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ }\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\nError in `[.data.frame`(cats, , numerics) : undefined columns selected\n> debug(scaler)\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\ndebugging in: scaler(data = fd, ID = c(\"ID\", \"REGION\", \"ISLAND\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 2:length(i.levels)) {\n            cats[, counter + nvars + (j - 1)] <- 0\n            cats[, counter + nvars + (j - 1)][cats[, counter] == \n                i.levels[j + 1]] <- 1\n            colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j + 1], \"dummy\", sep = \".\")\n            if (j == length(i.levels)) {\n                break\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, numerics]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #6: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 2:length(i.levels)) {\n        cats[, counter + nvars + (j - 1)] <- 0\n        cats[, counter + nvars + (j - 1)][cats[, counter] == \n            i.levels[j + 1]] <- 1\n        colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j + 1], \"dummy\", sep = \".\")\n        if (j == length(i.levels)) {\n            break\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 2:length(i.levels)) {\n    cats[, counter + nvars + (j - 1)] <- 0\n    cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n        1]] <- 1\n    colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #34: break\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 2:length(i.levels)) {\n    cats[, counter + nvars + (j - 1)] <- 0\n    cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n        1]] <- 1\n    colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #34: break\nBrowse[2]> head(cats )\n  IslType     STATE atoll.high.dummy atoll.low.dummy high.NA.dummy\n1    high    Remote                1               0             0\n2    high Populated                1               0             0\n3    high Populated                1               0             0\n4    high    Remote                1               0             0\n5    high    Remote                1               0             0\n6    high    Remote                1               0             0\n  Populated.Remote.dummy Populated.NA.dummy\n1                      1                  0\n2                      0                  0\n3                      0                  0\n4                      1                  0\n5                      1                  0\n6                      1                  0\nBrowse[2]> \ndebug at #40: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #41: cats <- cats[, numerics]\nBrowse[2]> head(cats.num )\n               IslType                  STATE       atoll.high.dummy \n                 FALSE                  FALSE                   TRUE \n       atoll.low.dummy          high.NA.dummy Populated.Remote.dummy \n                  TRUE                   TRUE                   TRUE \nBrowse[2]> \nError in `[.data.frame`(cats, , numerics) : undefined columns selected\n> fd[complete.cases(fd),]\n                          ID REGION total.biomass     browser   cropper\n1               Agrihan.2011 MARIAN     193.34089  45.5041333  53.75021\n2               Aguijan.2011 MARIAN      75.25301   4.0016343  47.65524\n3               Aguijan.2014 MARIAN      74.14869   4.5893386  43.61920\n4              Alamagan.2011 MARIAN      94.48817  12.5781379  65.99270\n5              Alamagan.2014 MARIAN     144.77396  15.3922055  58.87828\n6              Asuncion.2011 MARIAN     152.59971  25.3411154  45.99461\n7              Asuncion.2014 MARIAN     112.75364  34.8369657  50.49522\n8                 Baker.2010  PRIAs      77.55157   9.3553878  38.21525\n9                 Baker.2012  PRIAs     184.81518  11.9803954  99.05277\n10                Baker.2015  PRIAs     158.72877   9.8787396  91.62266\n11  Farallon_de_Pajaros.2011 MARIAN     107.52326  49.8080860  28.33109\n12  Farallon_de_Pajaros.2014 MARIAN      87.69479  30.1532989  42.69120\n19                 Guam.2011 MARIAN     155.49457  18.3949080  30.36046\n20                 Guam.2014 MARIAN      65.36535  17.2814980  23.02189\n21               Guguan.2011 MARIAN     156.79462  24.0653052  48.98827\n22               Guguan.2014 MARIAN     162.93164  28.2842987  98.55892\n23               Hawaii.2010     HI     106.34137  16.3750308  66.13973\n24               Hawaii.2013     HI     126.84965   7.9058152  94.45441\n25               Hawaii.2015     HI     141.12402  13.5932448  94.25437\n26              Howland.2010  PRIAs      61.94215   8.8646589  28.42874\n27              Howland.2012  PRIAs     114.28801  14.6465817  59.59928\n28              Howland.2015  PRIAs      81.55077   5.2615292  56.79290\n29               Jarvis.2010  PRIAs     178.57747   1.6092601  82.36349\n30               Jarvis.2012  PRIAs     365.65109  13.3469781 171.62189\n31               Jarvis.2015  PRIAs     178.87371   4.5439369  79.61870\n32             Johnston.2010     HI     148.03044  33.4705598 166.75989\n33             Johnston.2012     HI     203.71997  32.3007004  90.57054\n34             Johnston.2015     HI     171.27691  37.7266845 114.04451\n35                Kauai.2010     HI      78.25197   5.9079386  57.00027\n36                Kauai.2013     HI     103.11234   9.1949115  57.10036\n37                Kauai.2015     HI      41.21147   0.9057344  39.21626\n38              Kingman.2010  PRIAs     200.30631   9.5530526  48.45642\n39              Kingman.2012  PRIAs     156.98850   2.2601514  30.51762\n40              Kingman.2015  PRIAs     118.38408   3.3647367  17.48968\n41                 Kure.2010     HI     180.09510  39.7773879  35.85094\n42                 Kure.2012     HI     132.50895  59.2563892  32.39509\n43                 Kure.2015     HI     284.78699  77.4526228  49.58502\n44                Lanai.2010     HI     106.15630  10.8653145  52.55582\n45                Lanai.2012     HI     120.37465  13.5728236  53.90713\n46                Lanai.2013     HI     117.38821  12.4995483  65.03439\n47                Lanai.2015     HI      93.98961  10.7661581  63.99207\n48               Laysan.2011     HI     197.70726  35.6160932  91.47501\n49               Laysan.2015     HI     277.21910  93.5223766 121.13794\n50            Lisianski.2010     HI     119.87388   5.3184264  41.74136\n51            Lisianski.2011     HI     209.40947  16.3498256  74.97924\n52            Lisianski.2012     HI     267.40733  53.6831151  93.04049\n53            Lisianski.2014     HI      99.75951  10.8551967  17.28894\n54            Lisianski.2015     HI     255.46716 105.5630802  38.98950\n57                 Maug.2011 MARIAN     140.14052  52.6031930  29.63315\n58                 Maug.2014 MARIAN     148.68473  47.0974221  41.67266\n59                 Maui.2010     HI      77.42385  14.4557865  48.96129\n60                 Maui.2012     HI     103.54815  18.9027267  51.36428\n61                 Maui.2013     HI      97.79976  14.7821370  67.70988\n62                 Maui.2015     HI      89.71962   8.5575385  54.06911\n63               Midway.2011     HI     536.87485 222.7182354 152.02783\n64               Midway.2014     HI     498.55964 249.4131600  81.71425\n65               Midway.2015     HI     361.30821 153.2623821  74.35453\n66              Molokai.2010     HI     121.80453   6.2104011  81.39639\n67              Molokai.2012     HI     124.87922  16.7457454  51.36824\n68              Molokai.2013     HI     167.51397  17.3311606 105.52430\n69              Molokai.2015     HI     114.00655  11.3443831  76.73168\n70               Necker.2011     HI     658.51026 419.1343077 234.90078\n71                Nihoa.2011     HI     199.44861  62.6218108 207.06175\n72               Niihau.2010     HI     173.33114  42.0969427  84.34822\n73               Niihau.2013     HI     197.35475  37.6395226  92.33863\n74               Niihau.2015     HI     224.15516  59.9811240 109.75498\n75                 Oahu.2010     HI      35.55195   2.8077400  29.15736\n76                 Oahu.2012     HI      40.44251   1.0236315  33.23677\n77                 Oahu.2013     HI      56.54627   7.8327982  40.84441\n78                 Oahu.2015     HI      52.73544   8.1772502  34.90199\n79         Ofu__Olosega.2010  SAMOA     132.01398   5.6662940  51.61539\n80         Ofu__Olosega.2012  SAMOA     231.16093  16.7479087  70.47692\n81         Ofu__Olosega.2015  SAMOA     219.73226   4.0412161  54.68590\n82                Pagan.2011 MARIAN     146.02888  36.1003183  56.79122\n83                Pagan.2014 MARIAN     157.99408  36.3410820  59.97933\n84              Palmyra.2010  PRIAs     189.67306  27.3879874  74.57053\n85              Palmyra.2012  PRIAs     221.75615  12.1700307  41.99371\n86              Palmyra.2015  PRIAs     124.10835  11.3960864  42.68347\n87        Pearl__Hermes.2010     HI     120.13053  37.7468310  23.13774\n88        Pearl__Hermes.2011     HI     240.62821 133.5013581  41.76988\n89        Pearl__Hermes.2012     HI      65.42313  18.0815597  31.39536\n90        Pearl__Hermes.2015     HI     297.59304 136.9281015  70.20427\n91                 Rose.2010  SAMOA     102.79691  19.6482510  38.02723\n92                 Rose.2012  SAMOA     170.92069   9.5676891  52.76257\n93                 Rose.2015  SAMOA      82.56021   3.4675162  30.55162\n94                 Rota.2011 MARIAN     102.32920  10.7600213  41.10370\n95                 Rota.2014 MARIAN     117.45500  10.0773078  22.16439\n96               Saipan.2011 MARIAN      45.19119   2.8117020  22.55067\n97               Saipan.2014 MARIAN      69.44999  14.7547015  42.19901\n98              Sarigan.2011 MARIAN     112.18177  16.5536731  50.75054\n99              Sarigan.2014 MARIAN     215.82660  40.2350404 106.38648\n101              Swains.2010  SAMOA      27.47267   0.9877970  14.25547\n102              Swains.2012  SAMOA      59.88069   9.1571997  25.96989\n103              Swains.2015  SAMOA      39.79391   5.3515304  18.45818\n104                 Tau.2010  SAMOA     110.07067   3.8451342  34.46261\n105                 Tau.2012  SAMOA     187.33161  20.8370110  56.41180\n106                 Tau.2015  SAMOA     150.05350  27.4813954  40.01298\n107              Tinian.2011 MARIAN      54.32468   6.4592237  26.52309\n108              Tinian.2014 MARIAN      37.72312   5.6220041  14.46050\n109             Tutuila.2010  SAMOA      91.20774   5.1103534  38.50490\n110             Tutuila.2012  SAMOA     124.72410   8.6923559  39.81071\n111             Tutuila.2015  SAMOA     102.75532   4.6950194  36.11188\n112                Wake.2011 MARIAN     148.88172  27.2349040  29.99907\n113                Wake.2014 MARIAN     103.74902  17.0374523  17.96660\n       excavator    scraper     coral        CCA     turf      macro       sand\n1    20.93679023  73.149750 19.062500  5.2916667 63.05208  4.4791667  6.1770833\n2     3.60929970  19.986835 21.700000  5.9916667 43.04167 21.2291667  6.0958333\n3    10.31467426  15.625471 16.750000 14.0416667 41.16667 20.2500000  6.6666667\n4     3.78691476  59.374495 30.375000  3.6666667 44.29167  7.0416667 13.9166667\n5    13.83391539  56.669563  9.138889  5.6388889 67.27778 12.5555556  4.1388889\n6    35.11861726  46.145370 17.244048  6.1633598 59.82407  4.1455026 11.6514550\n7     0.05992306  27.361528 16.583333  6.3750000 58.84722  3.2777778 13.7638889\n8     0.45678458  29.524148 32.811508 40.0004960 21.03869  1.6607143  3.9528770\n9     7.69166120  66.090361 33.377381 23.3250000 33.27063  6.9063492  1.8349206\n10    1.54282512  55.684543 26.536797 32.2424242 29.95455  4.5887446  3.2911255\n11    0.00000000  29.384080 19.812500  3.6472222 65.64722  1.8888889  9.0041667\n12    0.00000000  14.850295  5.583333  2.4722222 75.13889  1.3333333 15.4722222\n19   42.69970410  64.039498 20.439180  8.7244951 39.36002 25.1080213  4.6008158\n20   10.83352975  14.228431 11.961024  7.8539880 55.15053 15.8330285  6.3987356\n21    0.00000000  83.741043 21.541667  7.6805556 61.40972  3.9652778  4.7986111\n22    3.15783804  32.930577  9.208333 11.6166667 64.99167  3.6250000  9.9083333\n23    7.76420378  16.062401 28.298368  8.9551930 51.62762  1.5449042  9.4085405\n24    6.04431327  18.445116 22.747173 10.8482986 53.36511  5.1162206  7.4438479\n25   10.98278911  22.293619 16.422222  7.7666667 62.93111  0.7600000 12.0033333\n26    0.00000000  24.648750 33.590278 35.5694444 15.02083  0.9166667  3.5138889\n27    1.81642644  38.225713 29.348485 26.6540404 29.55976  6.2609428  3.3493266\n28    0.56923464  18.927108 23.721591 29.3191288 36.81534  2.3996212  1.9630682\n29    1.05983029  93.544885 23.547559 30.4701178 36.23561  7.3059764  2.1361953\n30    5.06104120 175.621177 20.506944 22.9097222 44.15741 10.2662037  2.1597222\n31    2.45894838  92.252123 15.836806 26.4861111 47.26910  8.4768519  1.6880787\n32    8.41596121  13.399253 20.531250 24.3437500 40.34375  4.0000000 10.7812500\n33   32.29115009  48.557578  7.472222 14.0277778 73.11111  3.3055556  1.8611111\n34   67.02520174  38.118973  6.417308 23.0730769 56.82500  5.5365385  8.1480769\n35    0.44045652  14.903311  8.808333  4.7763889 68.97639 11.8000000  5.5458333\n36    0.68597738  36.131093  6.019841  8.2943122 56.63558 18.8313492  9.0297619\n37    0.04506732   1.044405  4.097222  0.9583333 66.19444 19.5555556  8.9722222\n38   82.06769018  60.229148 28.606061 25.9116162 15.17677 10.5782828  3.7449495\n39   73.85415968  50.356572 30.998775 20.9546569 22.10907 11.0098039  4.4767157\n40   71.01298364  26.516674 21.092305 10.3903509 44.36802  2.4581340  3.3781898\n41   72.38817124  32.078601 14.613426  8.8680556 51.32639 19.5300926  5.4097222\n42   88.02884306  19.083097 13.979167  7.9166667 43.36111 27.0208333  7.7222222\n43  111.65731143  46.092042  3.500000  5.0000000 67.70833 16.5416667  6.8750000\n44   15.48332956  27.251840 28.809028  5.1493056 45.29514  8.0694444 12.6770833\n45   23.19231091  29.702378 24.934554  3.5650253 51.47580 10.0347222  9.3899411\n46   16.08530312  23.768971 18.676768  4.8585859 37.49495 27.3737374 11.5202020\n47    6.53033038  12.701051  8.569444  2.3819444 77.63194  2.8541667  8.5625000\n48   64.79179538   5.824363  9.863095 13.8720238 35.85417 31.9970238  6.3303571\n49   39.77987732  22.778906  4.166667  3.9722222 55.22222 33.5277778  2.4444444\n50   59.25752748  13.556564 26.712302 10.6984127 29.11310 22.8531746 10.6230159\n51   90.40274005  27.677663 43.361111 10.0138889 21.86111  6.5138889  8.6666667\n52   98.91609925  21.767624 41.946429  9.6309524 20.25000 18.3035714  8.4107143\n53   54.75621138  16.859166 23.534392 12.3128307 36.77646 17.6097884  9.7665344\n54   83.50247804  27.412101  9.925595  4.8154762 50.55357 17.7023810 16.9553571\n57    3.83593672  54.068247 31.287037  5.5648148 52.78981  2.2166667  6.5250000\n58   12.23239160  47.682262 23.409470  6.4559343 56.82803  3.9061869  6.7924242\n59    4.24468473   9.762085 23.998377  5.9718615 57.03084  6.4080087  6.5308442\n60   13.31738434  19.963759 23.071413  5.0489766 52.43151  8.2456140 10.6616622\n61    0.99860583  14.309139 21.850000  5.0142857 49.05714 11.4738095 11.7714286\n62   11.75610789  15.336871 20.423611  4.6296296 55.81019  9.0625000  9.7615741\n63  149.51437838  12.614405  1.607143  7.4464286 28.83631  9.0952381  3.0148810\n64  133.76871516  33.663515  1.809524  7.3280423 74.68254  7.8121693  8.3280423\n65  105.26331029  28.427992  1.408333  3.1611111 76.72222 12.8500000  5.6305556\n66    9.07128667  25.126447 37.847222  3.5694444 38.76389  5.7361111 14.0833333\n67   22.31214617  34.453091 20.976190  4.1785714 53.03571 12.5476190  8.2738095\n68   10.84029612  33.818219 18.284452  5.2052670 53.29690 11.3535354 11.5371573\n69   14.19026756  11.740226 20.944444  3.3953824 59.74037  5.2246642 10.3720169\n70    0.39789714   4.077276  4.555556  3.7222222 21.69444 13.0555556  6.8611111\n71   24.47367207   5.015676  2.666667  5.8333333 30.58333  4.2083333  6.0625000\n72    3.03853143  43.847450  3.437500  3.9930556 74.32639  5.7916667 12.4236111\n73    9.88671265  57.489884  4.333333  5.3214286 68.78869 10.0476190 11.2797619\n74    1.86926953  52.549792  2.651515  4.8216783 76.90967  7.5681818  7.0011655\n75    2.26848850   1.318356 13.119035  7.4277956 45.76193 14.8335114 18.8484687\n76    1.02199658   5.160115 12.603175  3.3174603 61.16270 13.3769841  9.1825397\n77    2.63332873   5.235735 14.090278  5.6840278 55.64583 14.0104167 10.1284722\n78    0.30359804   9.352597  5.719017  1.6196581 70.45085  7.6292735 13.7264957\n79   43.45758682  31.274705 24.772436 39.3035714 23.42143  6.0009158  5.0086996\n80   90.78050556  53.155593 23.027778 26.5000000 31.86111  8.7638889  7.3472222\n81  112.18703380  48.818103 18.084377 29.7017066 41.16508  5.1236837  4.8941086\n82   11.42488503  41.712452 15.848545  7.0162037 61.83135  4.7278439  7.9269180\n83    5.52608517  56.147582 13.213352  5.6181917 63.47035  6.3179272 10.1976346\n84   44.92480102  42.789735 27.138889 23.9079861 21.44618  8.6388889  6.7638889\n85   91.12433191  76.468082 24.747345 20.7043845 27.33864 11.5345180  6.6092048\n86   36.06945091  33.959346 21.335354 14.8848485 38.77980  6.1666667  5.8222222\n87   43.03776411  16.208191  6.583333  8.3194444 55.10000 22.5611111  7.1388889\n88   51.88937794  13.467593  5.291667  7.5625000 23.21528 11.5416667  2.3888889\n89   43.01322190   5.644559 11.745536 16.0044643 41.35268 23.1071429  7.3214286\n90   72.61065409  17.850020  2.583333 13.3944444 57.78333 16.8944444  9.0000000\n91   31.54568790  13.575741 18.133712 45.2282197 17.76420 14.4130682  2.2670455\n92   80.97883447  27.611599 17.540278 48.2958333 13.07222 17.7305556  1.7944444\n93   38.01058925  10.530492 17.871429 54.0380952 12.13175 12.3023810  2.2698413\n94   18.48097600  31.984504 16.208995  6.0006614 40.07870 30.5760582  6.2923280\n95    9.10706910  76.106228  8.357955  5.2878788 61.10038 12.3731061 11.4924242\n96    8.28107340  11.547742 19.900285  6.5086360 54.03161 11.7454594  7.3638711\n97    6.23160038   6.264671 19.429147  4.8228663 56.16948  9.5398551  8.7190016\n98    2.34221362  42.535351 16.250000  4.0000000 60.00000  9.1388889  9.5833333\n99   15.60774530  53.597340  6.158333  5.2916667 65.65833  6.4833333 15.7833333\n101   2.00094707  10.228454 39.027778 25.8333333 15.15278 18.6342593  1.5370370\n102   3.84450592  20.909096 33.086174 20.5757576 16.37405 29.3494318  0.6145833\n103   4.79083677  11.193367 33.548611 20.2291667 18.29861 25.8958333  1.1597222\n104  52.17787193  19.585057 23.814815 27.2361111 34.89815  6.0972222  5.8703704\n105  68.52396967  41.558828 18.054167 25.6250000 43.95000  5.4458333  4.5916667\n106  45.40447356  37.154649 19.566141 17.4341432 53.42171  3.8845553  5.0455385\n107  12.72200486   8.620367 22.154762  6.1269841 46.86905 16.8134921  7.4484127\n108   8.14794038   9.492672 16.767857  5.1071429 50.91071 14.8392857  9.5595238\n109  26.72847745  20.864010 23.209072 31.1996243 31.30450  4.6405149  6.8763612\n110  35.14984242  41.071184 20.387837 24.3029251 37.04388 10.8292298  6.0852273\n111  31.24362103  30.704794 19.148569 18.1815876 49.03122  7.9062245  4.8111397\n112  47.65878620  43.988964 25.553571 11.6260913 40.29821  5.3787698 12.0480159\n113  31.82054307  36.924419 28.483631  8.9428571 42.96825  8.8080357  5.0965278\n         reef    algae reefbuild.prop              ISLAND         lat      lon\n1   24.354167 67.53125     0.26504931             Agrihan  18.7691976 145.6655\n2   27.691667 64.27083     0.30111912             Aguijan  14.8505222 145.5540\n3   30.791667 61.41667     0.33393583             Aguijan  14.8505222 145.5540\n4   34.041667 51.33333     0.39873109            Alamagan  17.5976319 145.8288\n5   14.777778 79.83333     0.15619495            Alamagan  17.5976319 145.8288\n6   23.407407 63.96958     0.26788985            Asuncion  19.6901697 145.4020\n7   22.958333 62.12500     0.26983350            Asuncion  19.6901697 145.4020\n8   72.812004 22.69940     0.76233829               Baker   0.1955945 183.5275\n9   56.702381 40.17698     0.58528853               Baker   0.1955945 183.5275\n10  58.779221 34.54329     0.62985040               Baker   0.1955945 183.5275\n11  23.459722 67.53611     0.25781095 Farallon de Pajaros  20.5428660 144.8935\n12   8.055556 76.47222     0.09530069 Farallon de Pajaros  20.5428660 144.8935\n19  29.163675 64.46805     0.31147217                Guam  13.4659110 144.7789\n20  19.815012 70.98356     0.21823043                Guam  13.4659110 144.7789\n21  29.222222 65.37500     0.30891205              Guguan  17.3070377 145.8414\n22  20.825000 68.61667     0.23283332              Guguan  17.3070377 145.8414\n23  37.253561 53.17253     0.41197803              Hawaii  19.6531728 204.4824\n24  33.595472 58.48133     0.36486360              Hawaii  19.6531728 204.4824\n25  24.188889 63.69111     0.27524908              Hawaii  19.6531728 204.4824\n26  69.159722 15.93750     0.81271422             Howland   0.8071712 183.3816\n27  56.002525 35.82071     0.60989495             Howland   0.8071712 183.3816\n28  53.040720 39.21496     0.57493174             Howland   0.8071712 183.3816\n29  54.017677 43.54158     0.55369093              Jarvis  -0.3737269 200.0100\n30  43.416667 54.42361     0.44375044              Jarvis  -0.3737269 200.0100\n31  42.322917 55.74595     0.43156323              Jarvis  -0.3737269 200.0100\n32  44.875000 44.34375     0.50297723            Johnston  16.7466029 190.4940\n33  21.500000 76.41667     0.21957447            Johnston  16.7466029 190.4940\n34  29.490385 62.36154     0.32106442            Johnston  16.7466029 190.4940\n35  13.584722 80.77639     0.14396526               Kauai  22.0279771 200.4573\n36  14.314153 75.46693     0.15943396               Kauai  22.0279771 200.4573\n37   5.055556 85.75000     0.05567452               Kauai  22.0279771 200.4573\n38  54.517677 25.75505     0.67915566             Kingman   6.4022806 197.5961\n39  51.953431 33.11887     0.61069736             Kingman   6.4022806 197.5961\n40  31.482656 46.82616     0.40203209             Kingman   6.4022806 197.5961\n41  23.481481 70.85648     0.24890808                Kure  28.4157815 181.6642\n42  21.895833 70.38194     0.23728176                Kure  28.4157815 181.6642\n43   8.500000 84.25000     0.09164420                Kure  28.4157815 181.6642\n44  33.958333 53.36458     0.38888226               Lanai  20.8231091 203.0992\n45  28.499579 61.51052     0.31662645               Lanai  20.8231091 203.0992\n46  23.535354 64.86869     0.26622486               Lanai  20.8231091 203.0992\n47  10.951389 80.48611     0.11976912               Lanai  20.8231091 203.0992\n48  23.735119 67.85119     0.25915575              Laysan  25.7731509 188.2698\n49   8.138889 88.75000     0.08400229              Laysan  25.7731509 188.2698\n50  37.410714 51.96627     0.41857213           Lisianski  26.0158773 186.0650\n51  53.375000 28.37500     0.65290520           Lisianski  26.0158773 186.0650\n52  51.577381 38.55357     0.57224937           Lisianski  26.0158773 186.0650\n53  35.847222 54.38624     0.39727192           Lisianski  26.0158773 186.0650\n54  14.741071 68.25595     0.17760964           Lisianski  26.0158773 186.0650\n57  36.851852 55.00648     0.40118137                Maug  20.0227995 145.2218\n58  29.865404 60.73422     0.32964160                Maug  20.0227995 145.2218\n59  29.970238 63.43885     0.32084926                Maui  20.8274988 203.5728\n60  28.120389 60.67713     0.31667991                Maui  20.8274988 203.5728\n61  26.864286 60.53095     0.30738844                Maui  20.8274988 203.5728\n62  25.053241 64.87269     0.27859864                Maui  20.8274988 203.5728\n63   9.053571 37.93155     0.19269019              Midway  28.2335718 182.6370\n64   9.137566 82.49471     0.09971995              Midway  28.2335718 182.6370\n65   4.569444 89.57222     0.04853796              Midway  28.2335718 182.6370\n66  41.416667 44.50000     0.48205626             Molokai  21.1208920 202.9425\n67  25.154762 65.58333     0.27722383             Molokai  21.1208920 202.9425\n68  23.489719 64.65043     0.26650418             Molokai  21.1208920 202.9425\n69  24.339827 64.96503     0.27254761             Molokai  21.1208920 202.9425\n70   8.277778 34.75000     0.19238218              Necker  23.5718950 195.3019\n71   8.500000 34.79167     0.19634264               Nihoa  23.0591213 198.0764\n72   7.430556 80.11806     0.08487348              Niihau  21.9064997 199.8509\n73   9.654762 78.83631     0.10910436              Niihau  21.9064997 199.8509\n74   7.473193 84.47786     0.08127361              Niihau  21.9064997 199.8509\n75  20.546830 60.59544     0.25321981                Oahu  21.4595144 202.0297\n76  15.920635 74.53968     0.17599579                Oahu  21.4595144 202.0297\n77  19.774306 69.65625     0.22111353                Oahu  21.4595144 202.0297\n78   7.338675 78.08013     0.08591405                Oahu  21.4595144 202.0297\n79  64.076007 29.42234     0.68531697       Ofu & Olosega -14.1710267 190.3512\n80  49.527778 40.62500     0.54937606       Ofu & Olosega -14.1710267 190.3512\n81  47.786084 46.28876     0.50795814       Ofu & Olosega -14.1710267 190.3512\n82  22.864749 66.55919     0.25568934               Pagan  18.1065867 145.7598\n83  18.831544 69.78828     0.21249809               Pagan  18.1065867 145.7598\n84  51.046875 30.08507     0.62918343             Palmyra   5.8762429 197.9111\n85  45.451729 38.87316     0.53900727             Palmyra   5.8762429 197.9111\n86  36.220202 44.94646     0.44624479             Palmyra   5.8762429 197.9111\n87  14.902778 77.66111     0.16099991      Pearl & Hermes  27.8753380 184.2069\n88  12.854167 34.75694     0.26998250      Pearl & Hermes  27.8753380 184.2069\n89  27.750000 64.45982     0.30094408      Pearl & Hermes  27.8753380 184.2069\n90  15.977778 74.67778     0.17624709      Pearl & Hermes  27.8753380 184.2069\n91  63.361932 32.17727     0.66320347                Rose -14.5449209 191.8442\n92  65.836111 30.80278     0.68125898                Rose -14.5449209 191.8442\n93  71.909524 24.43413     0.74638571                Rose -14.5449209 191.8442\n94  22.209656 70.65476     0.23916217                Rota  14.1448797 145.1785\n95  13.645833 73.47348     0.15663384                Rota  14.1448797 145.1785\n96  26.408921 65.77707     0.28647435              Saipan  15.1986885 145.7474\n97  24.252013 65.70934     0.26958257              Saipan  15.1986885 145.7474\n98  20.250000 69.13889     0.22653822             Sarigan  16.7027782 145.7772\n99  11.450000 72.14167     0.13697538             Sarigan  16.7027782 145.7772\n101 64.861111 33.78704     0.65749953              Swains -11.0559939 188.9210\n102 53.661932 45.72348     0.53993769              Swains -11.0559939 188.9210\n103 53.777778 44.19444     0.54890842              Swains -11.0559939 188.9210\n104 51.050926 40.99537     0.55462227                 Tau -14.2397700 190.5350\n105 43.679167 49.39583     0.46929000                 Tau -14.2397700 190.5350\n106 37.000284 57.30627     0.39234055                 Tau -14.2397700 190.5350\n107 28.281746 63.68254     0.30752967              Tinian  15.0194841 145.6290\n108 21.875000 65.75000     0.24964337              Tinian  15.0194841 145.6290\n109 54.408697 35.94502     0.60217444             Tutuila -14.2933092 189.3257\n110 44.690762 47.87311     0.48281001             Tutuila -14.2933092 189.3257\n111 37.330156 56.93745     0.39600196             Tutuila -14.2933092 189.3257\n112 37.179663 45.67698     0.44872275                Wake  19.2988891 166.6302\n113 37.426488 51.77629     0.41956640                Wake  19.2988891 166.6302\n     min_SST     prod IslType bathymetry    distance logdistance     pop_area\n1   25.57350 299.9844    high 10.6416667  400.612133   2.6027241   0.00000000\n2   26.32422 291.7947    high  6.4043478   38.446114   1.5848524  10.71237073\n3   26.32422 291.7947    high  6.4043478   38.446114   1.5848524  10.71237073\n4   25.75800 311.1410    high  9.2229167  271.050217   2.4330498   0.00000000\n5   25.75800 311.1410    high  9.2229167  271.050217   2.4330498   0.00000000\n6   25.15698 313.2058    high  9.9447154  503.725385   2.7021938   0.00000000\n7   25.15698 313.2058    high  9.9447154  503.725385   2.7021938   0.00000000\n8   26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n9   26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n10  26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n11  24.72078 322.3268    high 10.4347826  603.500853   2.7806779   0.00000000\n12  24.72078 322.3268    high 10.4347826  603.500853   2.7806779   0.00000000\n19  26.43683 266.3871    high  6.7144013   16.524992   1.2181413 583.89940493\n20  26.43683 266.3871    high  6.7144013   16.524992   1.2181413 583.89940493\n21  25.92986 303.3385    high  7.9206349  238.973021   2.3783489   0.00000000\n22  25.92986 303.3385    high  7.9206349  238.973021   2.3783489   0.00000000\n23  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n24  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n25  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n26  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n27  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n28  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n29  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n30  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n31  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n32  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n33  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n34  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n35  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n36  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n37  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n38  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n39  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n40  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n41  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n42  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n43  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n44  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n45  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n46  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n47  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n48  21.10317 526.1613    high  0.2478261 1498.025119   3.1755191   0.00000000\n49  21.10317 526.1613    high  0.2478261 1498.025119   3.1755191   0.00000000\n50  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n51  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n52  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n53  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n54  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n57  25.10507 323.6074    high  6.9895238  542.047392   2.7340373   0.00000000\n58  25.10507 323.6074    high  6.9895238  542.047392   2.7340373   0.00000000\n59  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n60  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n61  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n62  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n63  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n64  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n65  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n66  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n67  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n68  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n69  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n70  22.37513 679.2464    high  0.4250000  746.085180   2.8727884   0.00000000\n71  22.59000 516.1087    high  0.3125000  460.539240   2.6632666   0.00000000\n72  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n73  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n74  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n75  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n76  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n77  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n78  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n79  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n80  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n81  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n82  25.67217 301.9989    high  8.5745370  327.221864   2.5148423   0.00000000\n83  25.67217 301.9989    high  8.5745370  327.221864   2.5148423   0.00000000\n84  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n85  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n86  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n87  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n88  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n89  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n90  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n91  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n92  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n93  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n94  26.40981 230.3474    high  3.2923077   88.363683   1.9462738  47.09553706\n95  26.40981 230.3474    high  3.2923077   88.363683   1.9462738  47.09553706\n96  26.24142 329.5397     low  4.7132479    8.804893   0.9447241 302.32507450\n97  26.24142 329.5397     low  4.7132479    8.804893   0.9447241 302.32507450\n98  25.77330 302.9977    high 11.3916667  171.889214   2.2352486   0.00000000\n99  25.77330 302.9977    high 11.3916667  171.889214   2.2352486   0.00000000\n101 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n102 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n103 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n104 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n105 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n106 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n107 26.30700 294.1725    high  4.8815789   18.816116   1.2745300 119.83670410\n108 26.30700 294.1725    high  4.8815789   18.816116   1.2745300 119.83670410\n109 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n110 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n111 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n112 25.11992 314.0339   atoll 15.2151111 1441.455634   3.1588013   0.00000000\n113 25.11992 314.0339   atoll 15.2151111 1441.455634   3.1588013   0.00000000\n    logpoparea     STATE    wave irradiance complexity\n1   0.00000000    Remote 21.8215    42.8050  0.6493571\n2   1.06864481 Populated 18.3557    43.5752  0.5632117\n3   1.06864481 Populated 18.3557    43.5752  0.5632117\n4   0.00000000    Remote 20.3294    43.4626  0.7122837\n5   0.00000000    Remote 20.3294    43.4626  0.7122837\n6   0.00000000    Remote 19.5548    43.1212  0.6973295\n7   0.00000000    Remote 19.5548    43.1212  0.6973295\n8   0.00000000    Remote 20.8526    48.4046  0.6250592\n9   0.00000000    Remote 20.8526    48.4046  0.6250592\n10  0.00000000    Remote 20.8526    48.4046  0.6250592\n11  0.00000000    Remote 20.9987    43.2012  0.7258871\n12  0.00000000    Remote 20.9987    43.2012  0.7258871\n19  2.76708118 Populated 15.5398    42.6369  0.5239447\n20  2.76708118 Populated 15.5398    42.6369  0.5239447\n21  0.00000000    Remote 20.1654    43.6631  0.6996211\n22  0.00000000    Remote 20.1654    43.6631  0.6996211\n23  2.49344391 Populated 26.4763    41.4614  0.7097747\n24  2.49344391 Populated 26.4763    41.4614  0.7097747\n25  2.49344391 Populated 26.4763    41.4614  0.7097747\n26  0.00000000    Remote 21.4907    47.8224  0.5752921\n27  0.00000000    Remote 21.4907    47.8224  0.5752921\n28  0.00000000    Remote 21.4907    47.8224  0.5752921\n29  0.00000000    Remote 24.8993    50.1888  0.5245300\n30  0.00000000    Remote 24.8993    50.1888  0.5245300\n31  0.00000000    Remote 24.8993    50.1888  0.5245300\n32  0.00000000    Remote 34.0338    45.5527  0.5358269\n33  0.00000000    Remote 34.0338    45.5527  0.5358269\n34  0.00000000    Remote 34.0338    45.5527  0.5358269\n35  1.88458401 Populated 34.8080    43.0076  0.4636883\n36  1.88458401 Populated 34.8080    43.0076  0.4636883\n37  1.88458401 Populated 34.8080    43.0076  0.4636883\n38  0.00000000    Remote 30.3207    39.0531  0.4997899\n39  0.00000000    Remote 30.3207    39.0531  0.4997899\n40  0.00000000    Remote 30.3207    39.0531  0.4997899\n41  0.00000000    Remote 45.5080    39.2653  0.6761911\n42  0.00000000    Remote 45.5080    39.2653  0.6761911\n43  0.00000000    Remote 45.5080    39.2653  0.6761911\n44  0.95317274 Populated 28.5566    44.9531  0.5952243\n45  0.95317274 Populated 28.5566    44.9531  0.5952243\n46  0.95317274 Populated 28.5566    44.9531  0.5952243\n47  0.95317274 Populated 28.5566    44.9531  0.5952243\n48  0.00000000    Remote 42.2588    41.4585  0.5489513\n49  0.00000000    Remote 42.2588    41.4585  0.5489513\n50  0.00000000    Remote 42.0123    41.3167  0.8175812\n51  0.00000000    Remote 42.0123    41.3167  0.8175812\n52  0.00000000    Remote 42.0123    41.3167  0.8175812\n53  0.00000000    Remote 42.0123    41.3167  0.8175812\n54  0.00000000    Remote 42.0123    41.3167  0.8175812\n57  0.00000000    Remote 19.5548    43.4783  0.6288036\n58  0.00000000    Remote 19.5548    43.4783  0.6288036\n59  1.96597588 Populated 29.7250    43.7165  0.6425458\n60  1.96597588 Populated 29.7250    43.7165  0.6425458\n61  1.96597588 Populated 29.7250    43.7165  0.6425458\n62  1.96597588 Populated 29.7250    43.7165  0.6425458\n63  0.00000000    Remote 45.8011    39.3677  0.6985207\n64  0.00000000    Remote 45.8011    39.3677  0.6985207\n65  0.00000000    Remote 45.8011    39.3677  0.6985207\n66  0.59408957 Populated 28.5566    44.3811  0.5798249\n67  0.59408957 Populated 28.5566    44.3811  0.5798249\n68  0.59408957 Populated 28.5566    44.3811  0.5798249\n69  0.59408957 Populated 28.5566    44.3811  0.5798249\n70  0.00000000    Remote 39.2032    43.5079  0.5032295\n71  0.00000000    Remote 37.1754    43.6388  0.8630030\n72  0.24677356 Populated 34.8080    43.7765  0.5872004\n73  0.24677356 Populated 34.8080    43.7765  0.5872004\n74  0.24677356 Populated 34.8080    43.7765  0.5872004\n75  2.44462918 Populated 28.5566    43.2572  0.3660559\n76  2.44462918 Populated 28.5566    43.2572  0.3660559\n77  2.44462918 Populated 28.5566    43.2572  0.3660559\n78  2.44462918 Populated 28.5566    43.2572  0.3660559\n79  1.04145185 Populated 23.4032    41.7635  0.6420069\n80  1.04145185 Populated 23.4032    41.7635  0.6420069\n81  1.04145185 Populated 23.4032    41.7635  0.6420069\n82  0.00000000    Remote 20.3294    43.1460  0.7127678\n83  0.00000000    Remote 20.3294    43.1460  0.7127678\n84  0.00000000    Remote 30.3207    39.2093  0.5463743\n85  0.00000000    Remote 30.3207    39.2093  0.5463743\n86  0.00000000    Remote 30.3207    39.2093  0.5463743\n87  0.00000000    Remote 46.0951    39.6664  0.6849650\n88  0.00000000    Remote 46.0951    39.6664  0.6849650\n89  0.00000000    Remote 46.0951    39.6664  0.6849650\n90  0.00000000    Remote 46.0951    39.6664  0.6849650\n91  0.03931332 Populated 27.1245    42.3857  0.7043106\n92  0.03931332 Populated 27.1245    42.3857  0.7043106\n93  0.03931332 Populated 27.1245    42.3857  0.7043106\n94  1.68210478 Populated 16.8906    43.6585  0.6169039\n95  1.68210478 Populated 16.8906    43.6585  0.6169039\n96  2.48190831 Populated 18.0504    43.3102  0.5103093\n97  2.48190831 Populated 18.0504    43.3102  0.5103093\n98  0.00000000    Remote 20.1654    43.1598  0.7229792\n99  0.00000000    Remote 20.1654    43.1598  0.7229792\n101 0.96397068 Populated 21.1538    42.3648  0.7442864\n102 0.96397068 Populated 21.1538    42.3648  0.7442864\n103 0.96397068 Populated 21.1538    42.3648  0.7442864\n104 1.13055832 Populated 23.4032    41.3452  0.5499830\n105 1.13055832 Populated 23.4032    41.3452  0.5499830\n106 1.13055832 Populated 23.4032    41.3452  0.5499830\n107 2.08219887 Populated 18.0504    42.8066  0.5286865\n108 2.08219887 Populated 18.0504    42.8066  0.5286865\n109 2.18379749 Populated 22.3420    41.5889  0.5810279\n110 2.18379749 Populated 22.3420    41.5889  0.5810279\n111 2.18379749 Populated 22.3420    41.5889  0.5810279\n112 0.00000000    Remote 28.0328    44.7139  0.5662124\n113 0.00000000    Remote 28.0328    44.7139  0.5662124\n> fd[complete.cases(fd),]\n                          ID REGION total.biomass     browser   cropper\n1               Agrihan.2011 MARIAN     193.34089  45.5041333  53.75021\n2               Aguijan.2011 MARIAN      75.25301   4.0016343  47.65524\n3               Aguijan.2014 MARIAN      74.14869   4.5893386  43.61920\n4              Alamagan.2011 MARIAN      94.48817  12.5781379  65.99270\n5              Alamagan.2014 MARIAN     144.77396  15.3922055  58.87828\n6              Asuncion.2011 MARIAN     152.59971  25.3411154  45.99461\n7              Asuncion.2014 MARIAN     112.75364  34.8369657  50.49522\n8                 Baker.2010  PRIAs      77.55157   9.3553878  38.21525\n9                 Baker.2012  PRIAs     184.81518  11.9803954  99.05277\n10                Baker.2015  PRIAs     158.72877   9.8787396  91.62266\n11  Farallon_de_Pajaros.2011 MARIAN     107.52326  49.8080860  28.33109\n12  Farallon_de_Pajaros.2014 MARIAN      87.69479  30.1532989  42.69120\n19                 Guam.2011 MARIAN     155.49457  18.3949080  30.36046\n20                 Guam.2014 MARIAN      65.36535  17.2814980  23.02189\n21               Guguan.2011 MARIAN     156.79462  24.0653052  48.98827\n22               Guguan.2014 MARIAN     162.93164  28.2842987  98.55892\n23               Hawaii.2010     HI     106.34137  16.3750308  66.13973\n24               Hawaii.2013     HI     126.84965   7.9058152  94.45441\n25               Hawaii.2015     HI     141.12402  13.5932448  94.25437\n26              Howland.2010  PRIAs      61.94215   8.8646589  28.42874\n27              Howland.2012  PRIAs     114.28801  14.6465817  59.59928\n28              Howland.2015  PRIAs      81.55077   5.2615292  56.79290\n29               Jarvis.2010  PRIAs     178.57747   1.6092601  82.36349\n30               Jarvis.2012  PRIAs     365.65109  13.3469781 171.62189\n31               Jarvis.2015  PRIAs     178.87371   4.5439369  79.61870\n32             Johnston.2010     HI     148.03044  33.4705598 166.75989\n33             Johnston.2012     HI     203.71997  32.3007004  90.57054\n34             Johnston.2015     HI     171.27691  37.7266845 114.04451\n35                Kauai.2010     HI      78.25197   5.9079386  57.00027\n36                Kauai.2013     HI     103.11234   9.1949115  57.10036\n37                Kauai.2015     HI      41.21147   0.9057344  39.21626\n38              Kingman.2010  PRIAs     200.30631   9.5530526  48.45642\n39              Kingman.2012  PRIAs     156.98850   2.2601514  30.51762\n40              Kingman.2015  PRIAs     118.38408   3.3647367  17.48968\n41                 Kure.2010     HI     180.09510  39.7773879  35.85094\n42                 Kure.2012     HI     132.50895  59.2563892  32.39509\n43                 Kure.2015     HI     284.78699  77.4526228  49.58502\n44                Lanai.2010     HI     106.15630  10.8653145  52.55582\n45                Lanai.2012     HI     120.37465  13.5728236  53.90713\n46                Lanai.2013     HI     117.38821  12.4995483  65.03439\n47                Lanai.2015     HI      93.98961  10.7661581  63.99207\n48               Laysan.2011     HI     197.70726  35.6160932  91.47501\n49               Laysan.2015     HI     277.21910  93.5223766 121.13794\n50            Lisianski.2010     HI     119.87388   5.3184264  41.74136\n51            Lisianski.2011     HI     209.40947  16.3498256  74.97924\n52            Lisianski.2012     HI     267.40733  53.6831151  93.04049\n53            Lisianski.2014     HI      99.75951  10.8551967  17.28894\n54            Lisianski.2015     HI     255.46716 105.5630802  38.98950\n57                 Maug.2011 MARIAN     140.14052  52.6031930  29.63315\n58                 Maug.2014 MARIAN     148.68473  47.0974221  41.67266\n59                 Maui.2010     HI      77.42385  14.4557865  48.96129\n60                 Maui.2012     HI     103.54815  18.9027267  51.36428\n61                 Maui.2013     HI      97.79976  14.7821370  67.70988\n62                 Maui.2015     HI      89.71962   8.5575385  54.06911\n63               Midway.2011     HI     536.87485 222.7182354 152.02783\n64               Midway.2014     HI     498.55964 249.4131600  81.71425\n65               Midway.2015     HI     361.30821 153.2623821  74.35453\n66              Molokai.2010     HI     121.80453   6.2104011  81.39639\n67              Molokai.2012     HI     124.87922  16.7457454  51.36824\n68              Molokai.2013     HI     167.51397  17.3311606 105.52430\n69              Molokai.2015     HI     114.00655  11.3443831  76.73168\n70               Necker.2011     HI     658.51026 419.1343077 234.90078\n71                Nihoa.2011     HI     199.44861  62.6218108 207.06175\n72               Niihau.2010     HI     173.33114  42.0969427  84.34822\n73               Niihau.2013     HI     197.35475  37.6395226  92.33863\n74               Niihau.2015     HI     224.15516  59.9811240 109.75498\n75                 Oahu.2010     HI      35.55195   2.8077400  29.15736\n76                 Oahu.2012     HI      40.44251   1.0236315  33.23677\n77                 Oahu.2013     HI      56.54627   7.8327982  40.84441\n78                 Oahu.2015     HI      52.73544   8.1772502  34.90199\n79         Ofu__Olosega.2010  SAMOA     132.01398   5.6662940  51.61539\n80         Ofu__Olosega.2012  SAMOA     231.16093  16.7479087  70.47692\n81         Ofu__Olosega.2015  SAMOA     219.73226   4.0412161  54.68590\n82                Pagan.2011 MARIAN     146.02888  36.1003183  56.79122\n83                Pagan.2014 MARIAN     157.99408  36.3410820  59.97933\n84              Palmyra.2010  PRIAs     189.67306  27.3879874  74.57053\n85              Palmyra.2012  PRIAs     221.75615  12.1700307  41.99371\n86              Palmyra.2015  PRIAs     124.10835  11.3960864  42.68347\n87        Pearl__Hermes.2010     HI     120.13053  37.7468310  23.13774\n88        Pearl__Hermes.2011     HI     240.62821 133.5013581  41.76988\n89        Pearl__Hermes.2012     HI      65.42313  18.0815597  31.39536\n90        Pearl__Hermes.2015     HI     297.59304 136.9281015  70.20427\n91                 Rose.2010  SAMOA     102.79691  19.6482510  38.02723\n92                 Rose.2012  SAMOA     170.92069   9.5676891  52.76257\n93                 Rose.2015  SAMOA      82.56021   3.4675162  30.55162\n94                 Rota.2011 MARIAN     102.32920  10.7600213  41.10370\n95                 Rota.2014 MARIAN     117.45500  10.0773078  22.16439\n96               Saipan.2011 MARIAN      45.19119   2.8117020  22.55067\n97               Saipan.2014 MARIAN      69.44999  14.7547015  42.19901\n98              Sarigan.2011 MARIAN     112.18177  16.5536731  50.75054\n99              Sarigan.2014 MARIAN     215.82660  40.2350404 106.38648\n101              Swains.2010  SAMOA      27.47267   0.9877970  14.25547\n102              Swains.2012  SAMOA      59.88069   9.1571997  25.96989\n103              Swains.2015  SAMOA      39.79391   5.3515304  18.45818\n104                 Tau.2010  SAMOA     110.07067   3.8451342  34.46261\n105                 Tau.2012  SAMOA     187.33161  20.8370110  56.41180\n106                 Tau.2015  SAMOA     150.05350  27.4813954  40.01298\n107              Tinian.2011 MARIAN      54.32468   6.4592237  26.52309\n108              Tinian.2014 MARIAN      37.72312   5.6220041  14.46050\n109             Tutuila.2010  SAMOA      91.20774   5.1103534  38.50490\n110             Tutuila.2012  SAMOA     124.72410   8.6923559  39.81071\n111             Tutuila.2015  SAMOA     102.75532   4.6950194  36.11188\n112                Wake.2011 MARIAN     148.88172  27.2349040  29.99907\n113                Wake.2014 MARIAN     103.74902  17.0374523  17.96660\n       excavator    scraper     coral        CCA     turf      macro       sand\n1    20.93679023  73.149750 19.062500  5.2916667 63.05208  4.4791667  6.1770833\n2     3.60929970  19.986835 21.700000  5.9916667 43.04167 21.2291667  6.0958333\n3    10.31467426  15.625471 16.750000 14.0416667 41.16667 20.2500000  6.6666667\n4     3.78691476  59.374495 30.375000  3.6666667 44.29167  7.0416667 13.9166667\n5    13.83391539  56.669563  9.138889  5.6388889 67.27778 12.5555556  4.1388889\n6    35.11861726  46.145370 17.244048  6.1633598 59.82407  4.1455026 11.6514550\n7     0.05992306  27.361528 16.583333  6.3750000 58.84722  3.2777778 13.7638889\n8     0.45678458  29.524148 32.811508 40.0004960 21.03869  1.6607143  3.9528770\n9     7.69166120  66.090361 33.377381 23.3250000 33.27063  6.9063492  1.8349206\n10    1.54282512  55.684543 26.536797 32.2424242 29.95455  4.5887446  3.2911255\n11    0.00000000  29.384080 19.812500  3.6472222 65.64722  1.8888889  9.0041667\n12    0.00000000  14.850295  5.583333  2.4722222 75.13889  1.3333333 15.4722222\n19   42.69970410  64.039498 20.439180  8.7244951 39.36002 25.1080213  4.6008158\n20   10.83352975  14.228431 11.961024  7.8539880 55.15053 15.8330285  6.3987356\n21    0.00000000  83.741043 21.541667  7.6805556 61.40972  3.9652778  4.7986111\n22    3.15783804  32.930577  9.208333 11.6166667 64.99167  3.6250000  9.9083333\n23    7.76420378  16.062401 28.298368  8.9551930 51.62762  1.5449042  9.4085405\n24    6.04431327  18.445116 22.747173 10.8482986 53.36511  5.1162206  7.4438479\n25   10.98278911  22.293619 16.422222  7.7666667 62.93111  0.7600000 12.0033333\n26    0.00000000  24.648750 33.590278 35.5694444 15.02083  0.9166667  3.5138889\n27    1.81642644  38.225713 29.348485 26.6540404 29.55976  6.2609428  3.3493266\n28    0.56923464  18.927108 23.721591 29.3191288 36.81534  2.3996212  1.9630682\n29    1.05983029  93.544885 23.547559 30.4701178 36.23561  7.3059764  2.1361953\n30    5.06104120 175.621177 20.506944 22.9097222 44.15741 10.2662037  2.1597222\n31    2.45894838  92.252123 15.836806 26.4861111 47.26910  8.4768519  1.6880787\n32    8.41596121  13.399253 20.531250 24.3437500 40.34375  4.0000000 10.7812500\n33   32.29115009  48.557578  7.472222 14.0277778 73.11111  3.3055556  1.8611111\n34   67.02520174  38.118973  6.417308 23.0730769 56.82500  5.5365385  8.1480769\n35    0.44045652  14.903311  8.808333  4.7763889 68.97639 11.8000000  5.5458333\n36    0.68597738  36.131093  6.019841  8.2943122 56.63558 18.8313492  9.0297619\n37    0.04506732   1.044405  4.097222  0.9583333 66.19444 19.5555556  8.9722222\n38   82.06769018  60.229148 28.606061 25.9116162 15.17677 10.5782828  3.7449495\n39   73.85415968  50.356572 30.998775 20.9546569 22.10907 11.0098039  4.4767157\n40   71.01298364  26.516674 21.092305 10.3903509 44.36802  2.4581340  3.3781898\n41   72.38817124  32.078601 14.613426  8.8680556 51.32639 19.5300926  5.4097222\n42   88.02884306  19.083097 13.979167  7.9166667 43.36111 27.0208333  7.7222222\n43  111.65731143  46.092042  3.500000  5.0000000 67.70833 16.5416667  6.8750000\n44   15.48332956  27.251840 28.809028  5.1493056 45.29514  8.0694444 12.6770833\n45   23.19231091  29.702378 24.934554  3.5650253 51.47580 10.0347222  9.3899411\n46   16.08530312  23.768971 18.676768  4.8585859 37.49495 27.3737374 11.5202020\n47    6.53033038  12.701051  8.569444  2.3819444 77.63194  2.8541667  8.5625000\n48   64.79179538   5.824363  9.863095 13.8720238 35.85417 31.9970238  6.3303571\n49   39.77987732  22.778906  4.166667  3.9722222 55.22222 33.5277778  2.4444444\n50   59.25752748  13.556564 26.712302 10.6984127 29.11310 22.8531746 10.6230159\n51   90.40274005  27.677663 43.361111 10.0138889 21.86111  6.5138889  8.6666667\n52   98.91609925  21.767624 41.946429  9.6309524 20.25000 18.3035714  8.4107143\n53   54.75621138  16.859166 23.534392 12.3128307 36.77646 17.6097884  9.7665344\n54   83.50247804  27.412101  9.925595  4.8154762 50.55357 17.7023810 16.9553571\n57    3.83593672  54.068247 31.287037  5.5648148 52.78981  2.2166667  6.5250000\n58   12.23239160  47.682262 23.409470  6.4559343 56.82803  3.9061869  6.7924242\n59    4.24468473   9.762085 23.998377  5.9718615 57.03084  6.4080087  6.5308442\n60   13.31738434  19.963759 23.071413  5.0489766 52.43151  8.2456140 10.6616622\n61    0.99860583  14.309139 21.850000  5.0142857 49.05714 11.4738095 11.7714286\n62   11.75610789  15.336871 20.423611  4.6296296 55.81019  9.0625000  9.7615741\n63  149.51437838  12.614405  1.607143  7.4464286 28.83631  9.0952381  3.0148810\n64  133.76871516  33.663515  1.809524  7.3280423 74.68254  7.8121693  8.3280423\n65  105.26331029  28.427992  1.408333  3.1611111 76.72222 12.8500000  5.6305556\n66    9.07128667  25.126447 37.847222  3.5694444 38.76389  5.7361111 14.0833333\n67   22.31214617  34.453091 20.976190  4.1785714 53.03571 12.5476190  8.2738095\n68   10.84029612  33.818219 18.284452  5.2052670 53.29690 11.3535354 11.5371573\n69   14.19026756  11.740226 20.944444  3.3953824 59.74037  5.2246642 10.3720169\n70    0.39789714   4.077276  4.555556  3.7222222 21.69444 13.0555556  6.8611111\n71   24.47367207   5.015676  2.666667  5.8333333 30.58333  4.2083333  6.0625000\n72    3.03853143  43.847450  3.437500  3.9930556 74.32639  5.7916667 12.4236111\n73    9.88671265  57.489884  4.333333  5.3214286 68.78869 10.0476190 11.2797619\n74    1.86926953  52.549792  2.651515  4.8216783 76.90967  7.5681818  7.0011655\n75    2.26848850   1.318356 13.119035  7.4277956 45.76193 14.8335114 18.8484687\n76    1.02199658   5.160115 12.603175  3.3174603 61.16270 13.3769841  9.1825397\n77    2.63332873   5.235735 14.090278  5.6840278 55.64583 14.0104167 10.1284722\n78    0.30359804   9.352597  5.719017  1.6196581 70.45085  7.6292735 13.7264957\n79   43.45758682  31.274705 24.772436 39.3035714 23.42143  6.0009158  5.0086996\n80   90.78050556  53.155593 23.027778 26.5000000 31.86111  8.7638889  7.3472222\n81  112.18703380  48.818103 18.084377 29.7017066 41.16508  5.1236837  4.8941086\n82   11.42488503  41.712452 15.848545  7.0162037 61.83135  4.7278439  7.9269180\n83    5.52608517  56.147582 13.213352  5.6181917 63.47035  6.3179272 10.1976346\n84   44.92480102  42.789735 27.138889 23.9079861 21.44618  8.6388889  6.7638889\n85   91.12433191  76.468082 24.747345 20.7043845 27.33864 11.5345180  6.6092048\n86   36.06945091  33.959346 21.335354 14.8848485 38.77980  6.1666667  5.8222222\n87   43.03776411  16.208191  6.583333  8.3194444 55.10000 22.5611111  7.1388889\n88   51.88937794  13.467593  5.291667  7.5625000 23.21528 11.5416667  2.3888889\n89   43.01322190   5.644559 11.745536 16.0044643 41.35268 23.1071429  7.3214286\n90   72.61065409  17.850020  2.583333 13.3944444 57.78333 16.8944444  9.0000000\n91   31.54568790  13.575741 18.133712 45.2282197 17.76420 14.4130682  2.2670455\n92   80.97883447  27.611599 17.540278 48.2958333 13.07222 17.7305556  1.7944444\n93   38.01058925  10.530492 17.871429 54.0380952 12.13175 12.3023810  2.2698413\n94   18.48097600  31.984504 16.208995  6.0006614 40.07870 30.5760582  6.2923280\n95    9.10706910  76.106228  8.357955  5.2878788 61.10038 12.3731061 11.4924242\n96    8.28107340  11.547742 19.900285  6.5086360 54.03161 11.7454594  7.3638711\n97    6.23160038   6.264671 19.429147  4.8228663 56.16948  9.5398551  8.7190016\n98    2.34221362  42.535351 16.250000  4.0000000 60.00000  9.1388889  9.5833333\n99   15.60774530  53.597340  6.158333  5.2916667 65.65833  6.4833333 15.7833333\n101   2.00094707  10.228454 39.027778 25.8333333 15.15278 18.6342593  1.5370370\n102   3.84450592  20.909096 33.086174 20.5757576 16.37405 29.3494318  0.6145833\n103   4.79083677  11.193367 33.548611 20.2291667 18.29861 25.8958333  1.1597222\n104  52.17787193  19.585057 23.814815 27.2361111 34.89815  6.0972222  5.8703704\n105  68.52396967  41.558828 18.054167 25.6250000 43.95000  5.4458333  4.5916667\n106  45.40447356  37.154649 19.566141 17.4341432 53.42171  3.8845553  5.0455385\n107  12.72200486   8.620367 22.154762  6.1269841 46.86905 16.8134921  7.4484127\n108   8.14794038   9.492672 16.767857  5.1071429 50.91071 14.8392857  9.5595238\n109  26.72847745  20.864010 23.209072 31.1996243 31.30450  4.6405149  6.8763612\n110  35.14984242  41.071184 20.387837 24.3029251 37.04388 10.8292298  6.0852273\n111  31.24362103  30.704794 19.148569 18.1815876 49.03122  7.9062245  4.8111397\n112  47.65878620  43.988964 25.553571 11.6260913 40.29821  5.3787698 12.0480159\n113  31.82054307  36.924419 28.483631  8.9428571 42.96825  8.8080357  5.0965278\n         reef    algae reefbuild.prop              ISLAND         lat      lon\n1   24.354167 67.53125     0.26504931             Agrihan  18.7691976 145.6655\n2   27.691667 64.27083     0.30111912             Aguijan  14.8505222 145.5540\n3   30.791667 61.41667     0.33393583             Aguijan  14.8505222 145.5540\n4   34.041667 51.33333     0.39873109            Alamagan  17.5976319 145.8288\n5   14.777778 79.83333     0.15619495            Alamagan  17.5976319 145.8288\n6   23.407407 63.96958     0.26788985            Asuncion  19.6901697 145.4020\n7   22.958333 62.12500     0.26983350            Asuncion  19.6901697 145.4020\n8   72.812004 22.69940     0.76233829               Baker   0.1955945 183.5275\n9   56.702381 40.17698     0.58528853               Baker   0.1955945 183.5275\n10  58.779221 34.54329     0.62985040               Baker   0.1955945 183.5275\n11  23.459722 67.53611     0.25781095 Farallon de Pajaros  20.5428660 144.8935\n12   8.055556 76.47222     0.09530069 Farallon de Pajaros  20.5428660 144.8935\n19  29.163675 64.46805     0.31147217                Guam  13.4659110 144.7789\n20  19.815012 70.98356     0.21823043                Guam  13.4659110 144.7789\n21  29.222222 65.37500     0.30891205              Guguan  17.3070377 145.8414\n22  20.825000 68.61667     0.23283332              Guguan  17.3070377 145.8414\n23  37.253561 53.17253     0.41197803              Hawaii  19.6531728 204.4824\n24  33.595472 58.48133     0.36486360              Hawaii  19.6531728 204.4824\n25  24.188889 63.69111     0.27524908              Hawaii  19.6531728 204.4824\n26  69.159722 15.93750     0.81271422             Howland   0.8071712 183.3816\n27  56.002525 35.82071     0.60989495             Howland   0.8071712 183.3816\n28  53.040720 39.21496     0.57493174             Howland   0.8071712 183.3816\n29  54.017677 43.54158     0.55369093              Jarvis  -0.3737269 200.0100\n30  43.416667 54.42361     0.44375044              Jarvis  -0.3737269 200.0100\n31  42.322917 55.74595     0.43156323              Jarvis  -0.3737269 200.0100\n32  44.875000 44.34375     0.50297723            Johnston  16.7466029 190.4940\n33  21.500000 76.41667     0.21957447            Johnston  16.7466029 190.4940\n34  29.490385 62.36154     0.32106442            Johnston  16.7466029 190.4940\n35  13.584722 80.77639     0.14396526               Kauai  22.0279771 200.4573\n36  14.314153 75.46693     0.15943396               Kauai  22.0279771 200.4573\n37   5.055556 85.75000     0.05567452               Kauai  22.0279771 200.4573\n38  54.517677 25.75505     0.67915566             Kingman   6.4022806 197.5961\n39  51.953431 33.11887     0.61069736             Kingman   6.4022806 197.5961\n40  31.482656 46.82616     0.40203209             Kingman   6.4022806 197.5961\n41  23.481481 70.85648     0.24890808                Kure  28.4157815 181.6642\n42  21.895833 70.38194     0.23728176                Kure  28.4157815 181.6642\n43   8.500000 84.25000     0.09164420                Kure  28.4157815 181.6642\n44  33.958333 53.36458     0.38888226               Lanai  20.8231091 203.0992\n45  28.499579 61.51052     0.31662645               Lanai  20.8231091 203.0992\n46  23.535354 64.86869     0.26622486               Lanai  20.8231091 203.0992\n47  10.951389 80.48611     0.11976912               Lanai  20.8231091 203.0992\n48  23.735119 67.85119     0.25915575              Laysan  25.7731509 188.2698\n49   8.138889 88.75000     0.08400229              Laysan  25.7731509 188.2698\n50  37.410714 51.96627     0.41857213           Lisianski  26.0158773 186.0650\n51  53.375000 28.37500     0.65290520           Lisianski  26.0158773 186.0650\n52  51.577381 38.55357     0.57224937           Lisianski  26.0158773 186.0650\n53  35.847222 54.38624     0.39727192           Lisianski  26.0158773 186.0650\n54  14.741071 68.25595     0.17760964           Lisianski  26.0158773 186.0650\n57  36.851852 55.00648     0.40118137                Maug  20.0227995 145.2218\n58  29.865404 60.73422     0.32964160                Maug  20.0227995 145.2218\n59  29.970238 63.43885     0.32084926                Maui  20.8274988 203.5728\n60  28.120389 60.67713     0.31667991                Maui  20.8274988 203.5728\n61  26.864286 60.53095     0.30738844                Maui  20.8274988 203.5728\n62  25.053241 64.87269     0.27859864                Maui  20.8274988 203.5728\n63   9.053571 37.93155     0.19269019              Midway  28.2335718 182.6370\n64   9.137566 82.49471     0.09971995              Midway  28.2335718 182.6370\n65   4.569444 89.57222     0.04853796              Midway  28.2335718 182.6370\n66  41.416667 44.50000     0.48205626             Molokai  21.1208920 202.9425\n67  25.154762 65.58333     0.27722383             Molokai  21.1208920 202.9425\n68  23.489719 64.65043     0.26650418             Molokai  21.1208920 202.9425\n69  24.339827 64.96503     0.27254761             Molokai  21.1208920 202.9425\n70   8.277778 34.75000     0.19238218              Necker  23.5718950 195.3019\n71   8.500000 34.79167     0.19634264               Nihoa  23.0591213 198.0764\n72   7.430556 80.11806     0.08487348              Niihau  21.9064997 199.8509\n73   9.654762 78.83631     0.10910436              Niihau  21.9064997 199.8509\n74   7.473193 84.47786     0.08127361              Niihau  21.9064997 199.8509\n75  20.546830 60.59544     0.25321981                Oahu  21.4595144 202.0297\n76  15.920635 74.53968     0.17599579                Oahu  21.4595144 202.0297\n77  19.774306 69.65625     0.22111353                Oahu  21.4595144 202.0297\n78   7.338675 78.08013     0.08591405                Oahu  21.4595144 202.0297\n79  64.076007 29.42234     0.68531697       Ofu & Olosega -14.1710267 190.3512\n80  49.527778 40.62500     0.54937606       Ofu & Olosega -14.1710267 190.3512\n81  47.786084 46.28876     0.50795814       Ofu & Olosega -14.1710267 190.3512\n82  22.864749 66.55919     0.25568934               Pagan  18.1065867 145.7598\n83  18.831544 69.78828     0.21249809               Pagan  18.1065867 145.7598\n84  51.046875 30.08507     0.62918343             Palmyra   5.8762429 197.9111\n85  45.451729 38.87316     0.53900727             Palmyra   5.8762429 197.9111\n86  36.220202 44.94646     0.44624479             Palmyra   5.8762429 197.9111\n87  14.902778 77.66111     0.16099991      Pearl & Hermes  27.8753380 184.2069\n88  12.854167 34.75694     0.26998250      Pearl & Hermes  27.8753380 184.2069\n89  27.750000 64.45982     0.30094408      Pearl & Hermes  27.8753380 184.2069\n90  15.977778 74.67778     0.17624709      Pearl & Hermes  27.8753380 184.2069\n91  63.361932 32.17727     0.66320347                Rose -14.5449209 191.8442\n92  65.836111 30.80278     0.68125898                Rose -14.5449209 191.8442\n93  71.909524 24.43413     0.74638571                Rose -14.5449209 191.8442\n94  22.209656 70.65476     0.23916217                Rota  14.1448797 145.1785\n95  13.645833 73.47348     0.15663384                Rota  14.1448797 145.1785\n96  26.408921 65.77707     0.28647435              Saipan  15.1986885 145.7474\n97  24.252013 65.70934     0.26958257              Saipan  15.1986885 145.7474\n98  20.250000 69.13889     0.22653822             Sarigan  16.7027782 145.7772\n99  11.450000 72.14167     0.13697538             Sarigan  16.7027782 145.7772\n101 64.861111 33.78704     0.65749953              Swains -11.0559939 188.9210\n102 53.661932 45.72348     0.53993769              Swains -11.0559939 188.9210\n103 53.777778 44.19444     0.54890842              Swains -11.0559939 188.9210\n104 51.050926 40.99537     0.55462227                 Tau -14.2397700 190.5350\n105 43.679167 49.39583     0.46929000                 Tau -14.2397700 190.5350\n106 37.000284 57.30627     0.39234055                 Tau -14.2397700 190.5350\n107 28.281746 63.68254     0.30752967              Tinian  15.0194841 145.6290\n108 21.875000 65.75000     0.24964337              Tinian  15.0194841 145.6290\n109 54.408697 35.94502     0.60217444             Tutuila -14.2933092 189.3257\n110 44.690762 47.87311     0.48281001             Tutuila -14.2933092 189.3257\n111 37.330156 56.93745     0.39600196             Tutuila -14.2933092 189.3257\n112 37.179663 45.67698     0.44872275                Wake  19.2988891 166.6302\n113 37.426488 51.77629     0.41956640                Wake  19.2988891 166.6302\n     min_SST     prod IslType bathymetry    distance logdistance     pop_area\n1   25.57350 299.9844    high 10.6416667  400.612133   2.6027241   0.00000000\n2   26.32422 291.7947    high  6.4043478   38.446114   1.5848524  10.71237073\n3   26.32422 291.7947    high  6.4043478   38.446114   1.5848524  10.71237073\n4   25.75800 311.1410    high  9.2229167  271.050217   2.4330498   0.00000000\n5   25.75800 311.1410    high  9.2229167  271.050217   2.4330498   0.00000000\n6   25.15698 313.2058    high  9.9447154  503.725385   2.7021938   0.00000000\n7   25.15698 313.2058    high  9.9447154  503.725385   2.7021938   0.00000000\n8   26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n9   26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n10  26.26940 884.9237    high 12.4688889 1077.259260   3.0323202   0.00000000\n11  24.72078 322.3268    high 10.4347826  603.500853   2.7806779   0.00000000\n12  24.72078 322.3268    high 10.4347826  603.500853   2.7806779   0.00000000\n19  26.43683 266.3871    high  6.7144013   16.524992   1.2181413 583.89940493\n20  26.43683 266.3871    high  6.7144013   16.524992   1.2181413 583.89940493\n21  25.92986 303.3385    high  7.9206349  238.973021   2.3783489   0.00000000\n22  25.92986 303.3385    high  7.9206349  238.973021   2.3783489   0.00000000\n23  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n24  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n25  23.67076 485.4578    high  5.3937294   70.712605   1.8494968 310.48985520\n26  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n27  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n28  26.28829 893.5249    high 11.3218182 1131.620635   3.0537009   0.00000000\n29  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n30  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n31  25.14811 991.0307    high  8.7224044 1937.059608   3.2871430   0.00000000\n32  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n33  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n34  24.58659 435.4276   atoll 11.4000000 1325.933307   3.1225217   0.00000000\n35  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n36  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n37  23.08571 530.9097    high  1.5936508  190.823098   2.2806309  75.66268208\n38  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n39  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n40  26.31127 653.9552   atoll 12.3355556 1673.051073   3.2235092   0.00000000\n41  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n42  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n43  18.65580 581.4208   atoll  0.9366667 2209.008205   3.3441973   0.00000000\n44  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n45  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n46  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n47  23.76280 532.6192    high  1.1995495  114.753838   2.0597672   7.97785815\n48  21.10317 526.1613    high  0.2478261 1498.025119   3.1755191   0.00000000\n49  21.10317 526.1613    high  0.2478261 1498.025119   3.1755191   0.00000000\n50  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n51  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n52  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n53  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n54  20.86566 604.0628   atoll  0.2497175 1718.264535   3.2350900   0.00000000\n57  25.10507 323.6074    high  6.9895238  542.047392   2.7340373   0.00000000\n58  25.10507 323.6074    high  6.9895238  542.047392   2.7340373   0.00000000\n59  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n60  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n61  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n62  23.47777 537.5028    high  1.0281609  152.056065   2.1820037  91.46468193\n63  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n64  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n65  18.99265 570.0078   atoll  0.9235294 2111.813557   3.3246556   0.00000000\n66  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n67  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n68  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n69  23.50479 567.6276    high  1.0276094   86.962656   1.9393328   2.92725923\n70  22.37513 679.2464    high  0.4250000  746.085180   2.8727884   0.00000000\n71  22.59000 516.1087    high  0.3125000  460.539240   2.6632666   0.00000000\n72  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n73  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n74  23.19879 474.9148    high  0.7904762  245.359338   2.3898026   0.76511726\n75  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n76  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n77  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n78  23.40212 544.8640    high  1.7455635   29.035514   1.4629295 277.37432396\n79  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n80  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n81  26.63850 315.8520     low  3.4333333  113.747661   2.0559425  10.00149874\n82  25.67217 301.9989    high  8.5745370  327.221864   2.5148423   0.00000000\n83  25.67217 301.9989    high  8.5745370  327.221864   2.5148423   0.00000000\n84  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n85  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n86  26.29784 683.4905   atoll 11.4191111 1709.359975   3.2328335   0.00000000\n87  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n88  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n89  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n90  19.22594 633.9518   atoll  1.3875000 1952.673717   3.2906297   0.00000000\n91  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n92  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n93  26.45779 374.3630   atoll 21.2192982  275.846500   2.4406675   0.09474589\n94  26.40981 230.3474    high  3.2923077   88.363683   1.9462738  47.09553706\n95  26.40981 230.3474    high  3.2923077   88.363683   1.9462738  47.09553706\n96  26.24142 329.5397     low  4.7132479    8.804893   0.9447241 302.32507450\n97  26.24142 329.5397     low  4.7132479    8.804893   0.9447241 302.32507450\n98  25.77330 302.9977    high 11.3916667  171.889214   2.2352486   0.00000000\n99  25.77330 302.9977    high 11.3916667  171.889214   2.2352486   0.00000000\n101 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n102 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n103 27.50250 350.3432    high 16.8177419  315.923159   2.4995815   8.20387442\n104 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n105 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n106 26.75778 305.7970    high  6.8637681  133.101284   2.1241822  12.50698201\n107 26.30700 294.1725    high  4.8815789   18.816116   1.2745300 119.83670410\n108 26.30700 294.1725    high  4.8815789   18.816116   1.2745300 119.83670410\n109 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n110 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n111 26.56783 406.6967    high  3.7342105   10.384414   1.0163820 151.68539425\n112 25.11992 314.0339   atoll 15.2151111 1441.455634   3.1588013   0.00000000\n113 25.11992 314.0339   atoll 15.2151111 1441.455634   3.1588013   0.00000000\n    logpoparea     STATE    wave irradiance complexity\n1   0.00000000    Remote 21.8215    42.8050  0.6493571\n2   1.06864481 Populated 18.3557    43.5752  0.5632117\n3   1.06864481 Populated 18.3557    43.5752  0.5632117\n4   0.00000000    Remote 20.3294    43.4626  0.7122837\n5   0.00000000    Remote 20.3294    43.4626  0.7122837\n6   0.00000000    Remote 19.5548    43.1212  0.6973295\n7   0.00000000    Remote 19.5548    43.1212  0.6973295\n8   0.00000000    Remote 20.8526    48.4046  0.6250592\n9   0.00000000    Remote 20.8526    48.4046  0.6250592\n10  0.00000000    Remote 20.8526    48.4046  0.6250592\n11  0.00000000    Remote 20.9987    43.2012  0.7258871\n12  0.00000000    Remote 20.9987    43.2012  0.7258871\n19  2.76708118 Populated 15.5398    42.6369  0.5239447\n20  2.76708118 Populated 15.5398    42.6369  0.5239447\n21  0.00000000    Remote 20.1654    43.6631  0.6996211\n22  0.00000000    Remote 20.1654    43.6631  0.6996211\n23  2.49344391 Populated 26.4763    41.4614  0.7097747\n24  2.49344391 Populated 26.4763    41.4614  0.7097747\n25  2.49344391 Populated 26.4763    41.4614  0.7097747\n26  0.00000000    Remote 21.4907    47.8224  0.5752921\n27  0.00000000    Remote 21.4907    47.8224  0.5752921\n28  0.00000000    Remote 21.4907    47.8224  0.5752921\n29  0.00000000    Remote 24.8993    50.1888  0.5245300\n30  0.00000000    Remote 24.8993    50.1888  0.5245300\n31  0.00000000    Remote 24.8993    50.1888  0.5245300\n32  0.00000000    Remote 34.0338    45.5527  0.5358269\n33  0.00000000    Remote 34.0338    45.5527  0.5358269\n34  0.00000000    Remote 34.0338    45.5527  0.5358269\n35  1.88458401 Populated 34.8080    43.0076  0.4636883\n36  1.88458401 Populated 34.8080    43.0076  0.4636883\n37  1.88458401 Populated 34.8080    43.0076  0.4636883\n38  0.00000000    Remote 30.3207    39.0531  0.4997899\n39  0.00000000    Remote 30.3207    39.0531  0.4997899\n40  0.00000000    Remote 30.3207    39.0531  0.4997899\n41  0.00000000    Remote 45.5080    39.2653  0.6761911\n42  0.00000000    Remote 45.5080    39.2653  0.6761911\n43  0.00000000    Remote 45.5080    39.2653  0.6761911\n44  0.95317274 Populated 28.5566    44.9531  0.5952243\n45  0.95317274 Populated 28.5566    44.9531  0.5952243\n46  0.95317274 Populated 28.5566    44.9531  0.5952243\n47  0.95317274 Populated 28.5566    44.9531  0.5952243\n48  0.00000000    Remote 42.2588    41.4585  0.5489513\n49  0.00000000    Remote 42.2588    41.4585  0.5489513\n50  0.00000000    Remote 42.0123    41.3167  0.8175812\n51  0.00000000    Remote 42.0123    41.3167  0.8175812\n52  0.00000000    Remote 42.0123    41.3167  0.8175812\n53  0.00000000    Remote 42.0123    41.3167  0.8175812\n54  0.00000000    Remote 42.0123    41.3167  0.8175812\n57  0.00000000    Remote 19.5548    43.4783  0.6288036\n58  0.00000000    Remote 19.5548    43.4783  0.6288036\n59  1.96597588 Populated 29.7250    43.7165  0.6425458\n60  1.96597588 Populated 29.7250    43.7165  0.6425458\n61  1.96597588 Populated 29.7250    43.7165  0.6425458\n62  1.96597588 Populated 29.7250    43.7165  0.6425458\n63  0.00000000    Remote 45.8011    39.3677  0.6985207\n64  0.00000000    Remote 45.8011    39.3677  0.6985207\n65  0.00000000    Remote 45.8011    39.3677  0.6985207\n66  0.59408957 Populated 28.5566    44.3811  0.5798249\n67  0.59408957 Populated 28.5566    44.3811  0.5798249\n68  0.59408957 Populated 28.5566    44.3811  0.5798249\n69  0.59408957 Populated 28.5566    44.3811  0.5798249\n70  0.00000000    Remote 39.2032    43.5079  0.5032295\n71  0.00000000    Remote 37.1754    43.6388  0.8630030\n72  0.24677356 Populated 34.8080    43.7765  0.5872004\n73  0.24677356 Populated 34.8080    43.7765  0.5872004\n74  0.24677356 Populated 34.8080    43.7765  0.5872004\n75  2.44462918 Populated 28.5566    43.2572  0.3660559\n76  2.44462918 Populated 28.5566    43.2572  0.3660559\n77  2.44462918 Populated 28.5566    43.2572  0.3660559\n78  2.44462918 Populated 28.5566    43.2572  0.3660559\n79  1.04145185 Populated 23.4032    41.7635  0.6420069\n80  1.04145185 Populated 23.4032    41.7635  0.6420069\n81  1.04145185 Populated 23.4032    41.7635  0.6420069\n82  0.00000000    Remote 20.3294    43.1460  0.7127678\n83  0.00000000    Remote 20.3294    43.1460  0.7127678\n84  0.00000000    Remote 30.3207    39.2093  0.5463743\n85  0.00000000    Remote 30.3207    39.2093  0.5463743\n86  0.00000000    Remote 30.3207    39.2093  0.5463743\n87  0.00000000    Remote 46.0951    39.6664  0.6849650\n88  0.00000000    Remote 46.0951    39.6664  0.6849650\n89  0.00000000    Remote 46.0951    39.6664  0.6849650\n90  0.00000000    Remote 46.0951    39.6664  0.6849650\n91  0.03931332 Populated 27.1245    42.3857  0.7043106\n92  0.03931332 Populated 27.1245    42.3857  0.7043106\n93  0.03931332 Populated 27.1245    42.3857  0.7043106\n94  1.68210478 Populated 16.8906    43.6585  0.6169039\n95  1.68210478 Populated 16.8906    43.6585  0.6169039\n96  2.48190831 Populated 18.0504    43.3102  0.5103093\n97  2.48190831 Populated 18.0504    43.3102  0.5103093\n98  0.00000000    Remote 20.1654    43.1598  0.7229792\n99  0.00000000    Remote 20.1654    43.1598  0.7229792\n101 0.96397068 Populated 21.1538    42.3648  0.7442864\n102 0.96397068 Populated 21.1538    42.3648  0.7442864\n103 0.96397068 Populated 21.1538    42.3648  0.7442864\n104 1.13055832 Populated 23.4032    41.3452  0.5499830\n105 1.13055832 Populated 23.4032    41.3452  0.5499830\n106 1.13055832 Populated 23.4032    41.3452  0.5499830\n107 2.08219887 Populated 18.0504    42.8066  0.5286865\n108 2.08219887 Populated 18.0504    42.8066  0.5286865\n109 2.18379749 Populated 22.3420    41.5889  0.5810279\n110 2.18379749 Populated 22.3420    41.5889  0.5810279\n111 2.18379749 Populated 22.3420    41.5889  0.5810279\n112 0.00000000    Remote 28.0328    44.7139  0.5662124\n113 0.00000000    Remote 28.0328    44.7139  0.5662124\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, counter+nvars+(j-1)]<-0\n+ cats[, counter+nvars+(j-1)][cats[,counter]==i.levels[j+1]]<-1\n+ colnames(cats)[counter+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dum<ars+(j-1)]<-paste(i.levels[j-1],i.levels[j+1],\"dumm                        y\", sep=\".\")\n+ if(j==length(i.levels)){break}\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> \n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> scaler(data=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\n                          ID REGION              ISLAND total.biomass\n1               Agrihan.2011 MARIAN             Agrihan   0.431380939\n2               Aguijan.2011 MARIAN             Aguijan  -0.761476905\n3               Aguijan.2014 MARIAN             Aguijan  -0.772632208\n4              Alamagan.2011 MARIAN            Alamagan  -0.567174114\n5              Alamagan.2014 MARIAN            Alamagan  -0.059215041\n6              Asuncion.2011 MARIAN            Asuncion   0.019836276\n7              Asuncion.2014 MARIAN            Asuncion  -0.382666514\n8                 Baker.2010  PRIAs               Baker  -0.738258191\n9                 Baker.2012  PRIAs               Baker   0.345259034\n10                Baker.2015  PRIAs               Baker   0.081748634\n11  Farallon_de_Pajaros.2011 MARIAN Farallon de Pajaros  -0.435500891\n12  Farallon_de_Pajaros.2014 MARIAN Farallon de Pajaros  -0.635797019\n19                 Guam.2011 MARIAN                Guam   0.049078576\n20                 Guam.2014 MARIAN                Guam  -0.861356531\n21               Guguan.2011 MARIAN              Guguan   0.062210924\n22               Guguan.2014 MARIAN              Guguan   0.124203644\n23               Hawaii.2010     HI              Hawaii  -0.447439668\n24               Hawaii.2013     HI              Hawaii  -0.240276449\n25               Hawaii.2015     HI              Hawaii  -0.096084717\n26              Howland.2010  PRIAs             Howland  -0.895935821\n27              Howland.2012  PRIAs             Howland  -0.367167186\n28              Howland.2015  PRIAs             Howland  -0.697860517\n29               Jarvis.2010  PRIAs              Jarvis   0.282249114\n30               Jarvis.2012  PRIAs              Jarvis   2.171962466\n31               Jarvis.2015  PRIAs              Jarvis   0.285241539\n32             Johnston.2010     HI            Johnston  -0.026319927\n33             Johnston.2012     HI            Johnston   0.536224614\n34             Johnston.2015     HI            Johnston   0.208502973\n35                Kauai.2010     HI               Kauai  -0.731183076\n36                Kauai.2013     HI               Kauai  -0.480057487\n37                Kauai.2015     HI               Kauai  -1.105345627\n38              Kingman.2010  PRIAs             Kingman   0.501741765\n39              Kingman.2012  PRIAs             Kingman   0.064169416\n40              Kingman.2015  PRIAs             Kingman  -0.325790948\n41                 Kure.2010     HI                Kure   0.297579410\n42                 Kure.2012     HI                Kure  -0.183109400\n43                 Kure.2015     HI                Kure   1.355118484\n44                Lanai.2010     HI               Lanai  -0.449309101\n45                Lanai.2012     HI               Lanai  -0.305683334\n46                Lanai.2013     HI               Lanai  -0.335850658\n47                Lanai.2015     HI               Lanai  -0.572210220\n48               Laysan.2011     HI              Laysan   0.475487613\n49               Laysan.2015     HI              Laysan   1.278671879\n50            Lisianski.2010     HI           Lisianski  -0.310741776\n51            Lisianski.2011     HI           Lisianski   0.593696803\n52            Lisianski.2012     HI           Lisianski   1.179558808\n53            Lisianski.2014     HI           Lisianski  -0.513925942\n54            Lisianski.2015     HI           Lisianski   1.058945865\n57                 Maug.2011 MARIAN                Maug  -0.106019475\n58                 Maug.2014 MARIAN                Maug  -0.019710620\n59                 Maui.2010     HI                Maui  -0.739548364\n60                 Maui.2012     HI                Maui  -0.475655179\n61                 Maui.2013     HI                Maui  -0.533722248\n62                 Maui.2015     HI                Maui  -0.615343275\n63               Midway.2011     HI              Midway   3.901569402\n64               Midway.2014     HI              Midway   3.514530501\n65               Midway.2015     HI              Midway   2.128093183\n66              Molokai.2010     HI             Molokai  -0.291239475\n67              Molokai.2012     HI             Molokai  -0.260180609\n68              Molokai.2013     HI             Molokai   0.170491865\n69              Molokai.2015     HI             Molokai  -0.370010259\n70               Necker.2011     HI              Necker   5.130262484\n71                Nihoa.2011     HI               Nihoa   0.493077729\n72               Niihau.2010     HI              Niihau   0.229253616\n73               Niihau.2013     HI              Niihau   0.471926772\n74               Niihau.2015     HI              Niihau   0.742649578\n75                 Oahu.2010     HI                Oahu  -1.162514923\n76                 Oahu.2012     HI                Oahu  -1.113113149\n77                 Oahu.2013     HI                Oahu  -0.950442024\n78                 Oahu.2015     HI                Oahu  -0.988936874\n79         Ofu__Olosega.2010  SAMOA       Ofu & Olosega  -0.188109326\n80         Ofu__Olosega.2012  SAMOA       Ofu & Olosega   0.813417928\n81         Ofu__Olosega.2015  SAMOA       Ofu & Olosega   0.697971826\n82                Pagan.2011 MARIAN               Pagan  -0.046538596\n83                Pagan.2014 MARIAN               Pagan   0.074327213\n84              Palmyra.2010  PRIAs             Palmyra   0.394330541\n85              Palmyra.2012  PRIAs             Palmyra   0.718416115\n86              Palmyra.2015  PRIAs             Palmyra  -0.267967533\n87        Pearl__Hermes.2010     HI      Pearl & Hermes  -0.308149275\n88        Pearl__Hermes.2011     HI      Pearl & Hermes   0.909051069\n89        Pearl__Hermes.2012     HI      Pearl & Hermes  -0.860772861\n90        Pearl__Hermes.2015     HI      Pearl & Hermes   1.484478082\n91                 Rose.2010  SAMOA                Rose  -0.483243856\n92                 Rose.2012  SAMOA                Rose   0.204904641\n93                 Rose.2015  SAMOA                Rose  -0.687663644\n94                 Rota.2011 MARIAN                Rota  -0.487968361\n95                 Rota.2014 MARIAN                Rota  -0.335176024\n96               Saipan.2011 MARIAN              Saipan  -1.065144714\n97               Saipan.2014 MARIAN              Saipan  -0.820095848\n98              Sarigan.2011 MARIAN             Sarigan  -0.388443167\n99              Sarigan.2014 MARIAN             Sarigan   0.658519107\n101              Swains.2010  SAMOA              Swains  -1.244127279\n102              Swains.2012  SAMOA              Swains  -0.916759526\n103              Swains.2015  SAMOA              Swains  -1.119664951\n104                 Tau.2010  SAMOA                 Tau  -0.409768320\n105                 Tau.2012  SAMOA                 Tau   0.370678564\n106                 Tau.2015  SAMOA                 Tau  -0.005884091\n107              Tinian.2011 MARIAN              Tinian  -0.972883237\n108              Tinian.2014 MARIAN              Tinian  -1.140583004\n109             Tutuila.2010  SAMOA             Tutuila  -0.600311119\n110             Tutuila.2012  SAMOA             Tutuila  -0.261747620\n111             Tutuila.2015  SAMOA             Tutuila  -0.483663982\n112                Wake.2011 MARIAN                Wake  -0.017720766\n113                Wake.2014 MARIAN                Wake  -0.473626151\n         browser      cropper   excavator     scraper        coral         CCA\n1    0.241937020 -0.167016759 -0.26079944  1.62648028  0.081690205 -0.68796943\n2   -0.501935935 -0.326114511 -0.76233806 -0.49724991  0.352964219 -0.62634146\n3   -0.491402176 -0.431467825 -0.56825316 -0.67147588 -0.156156680  0.08238020\n4   -0.348214371  0.152550410 -0.75719705  1.07619207  1.245211452 -0.83103436\n5   -0.297776231 -0.033158245 -0.46638986  0.96813657 -0.938980061 -0.65740000\n6   -0.119456247 -0.369462331  0.14968897  0.54772044 -0.105342545 -0.61122560\n7    0.050743293 -0.251982245 -0.86507362 -0.20264873 -0.173298798 -0.59259281\n8   -0.405977558 -0.572527901 -0.85358659 -0.11625727  1.495812889  2.36779444\n9   -0.358928051  1.015521284 -0.64417542  1.34447473  1.554014460  0.89968448\n10  -0.396597225  0.821572394 -0.82215150  0.92878738  0.850441836  1.68477413\n11   0.319079219 -0.830535213 -0.86680808 -0.12185265  0.158829735 -0.83274625\n12  -0.033204738 -0.455691660 -0.86680808 -0.70244232 -1.304678575 -0.93619320\n19  -0.243957082 -0.777562297  0.36912108  1.26254769  0.223285475 -0.38574336\n20  -0.263913366 -0.969121850 -0.55323505 -0.72728425 -0.648715775 -0.46238276\n21  -0.142323321 -0.291318328 -0.86680808  2.04957688  0.336679207 -0.47765175\n22  -0.066703895  1.002630433 -0.77540547  0.01982135 -0.931837512 -0.13111669\n23  -0.280160494  0.156388395 -0.64207570 -0.65402160  1.031624260 -0.36543273\n24  -0.431959074  0.895489739 -0.69185738 -0.55883787  0.460668791 -0.19876379\n25  -0.330020030  0.890268138 -0.54891479 -0.40509947 -0.189869512 -0.47007053\n26  -0.414773171 -0.827986255 -0.86680808 -0.31101768  1.575911475  1.97768485\n27  -0.311140473 -0.014337779 -0.81423220  0.23134927  1.139631590  1.19277305\n28  -0.479354120 -0.087593296 -0.85033176 -0.53958347  0.560890317  1.42740732\n29  -0.544815821  0.579879162 -0.83613163  2.44121672  0.542990656  1.52874035\n30  -0.334434010  2.909802002 -0.72031787  5.71996659  0.230255226  0.86312344\n31  -0.492215935  0.508231421 -0.79563461  2.38957401 -0.250081201  1.17798857\n32   0.026252421  2.782888530 -0.62321079 -0.76040794  0.232755118  0.98937518\n33   0.005284363  0.794108670  0.06784884  0.64408235 -1.110401239  0.08115743\n34   0.102537370  1.406852623  1.07321476  0.22708524 -1.218902055  0.87750518\n35  -0.467768156 -0.082180209 -0.85405920 -0.70032444 -0.972978595 -0.73333446\n36  -0.408853867 -0.079567453 -0.84695268  0.14767425 -1.259782552 -0.42361664\n37  -0.557425513 -0.546398349 -0.86550362 -1.25395431 -1.457529126 -1.06947591\n38  -0.402434700 -0.305201315  1.50861474  1.11033343  1.063271247  1.12741005\n39  -0.533149527 -0.773460036  1.27087675  0.71594782  1.309368349  0.69099957\n40  -0.513351413 -1.113529834  1.18863982 -0.23639859  0.290461105 -0.23908148\n41   0.139293297 -0.634243623  1.22844418 -0.01421304 -0.375909108 -0.37310430\n42   0.488426544 -0.724452159  1.68115838 -0.53335206 -0.441144389 -0.45686454\n43   0.814568016 -0.275741453  2.36507677  0.54559015 -1.518955048 -0.71364775\n44  -0.378914281 -0.198194188 -0.41864810 -0.20703049  1.084146970 -0.70050289\n45  -0.330386052 -0.162920661 -0.19551412 -0.10913742  0.685646841 -0.83998286\n46  -0.349622976  0.127535373 -0.40122417 -0.34616272  0.042016591 -0.72609784\n47  -0.380691518  0.100327758 -0.67778977 -0.78829941 -0.997548964 -0.94414125\n48   0.064708040  0.817718195  1.00856953 -1.06300652 -0.864493478  0.06744485\n49   1.102595376  1.592013332  0.28460764 -0.38571342 -1.450386576 -0.80413326\n50  -0.478334318 -0.480485255  0.84838194 -0.75412371  0.868493006 -0.21195974\n51  -0.280612261  0.387127158  1.74987006 -0.19001991  2.580868133 -0.27222518\n52   0.388533575  0.858582085  1.99628650 -0.42611168  2.435364204 -0.30593890\n53  -0.379095628 -1.118769948  0.71809279 -0.62219276  0.541636354 -0.06982644\n54   1.318407773 -0.552317527  1.55014421 -0.20062847 -0.858065184 -0.72989322\n57   0.369177516 -0.796547540 -0.75577813  0.86422027  1.339016930 -0.66392148\n58   0.270494444 -0.482278677 -0.51274545  0.60911557  0.528787805 -0.58546735\n59  -0.314560203 -0.292022640 -0.74394705 -0.90570402  0.589358477 -0.62808511\n60  -0.234855158 -0.229297000 -0.48134068 -0.49817175  0.494017708 -0.70933585\n61  -0.308710838  0.197374047 -0.83790375 -0.72406018  0.368392125 -0.71239003\n62  -0.420277867 -0.158692687 -0.52653133 -0.68300475  0.221684167 -0.74625514\n63   3.418246424  2.398335829  3.46083736 -0.79176072 -1.713640529 -0.49826428\n64   3.896714779  0.562931774  3.00508422  0.04910045 -1.692825100 -0.50868700\n65   2.173349559  0.370820200  2.18000447 -0.16004607 -1.734088626 -0.87554345\n66  -0.462346947  0.554634801 -0.60424261 -0.29193481  2.013749735 -0.83959380\n67  -0.273515965 -0.229193698 -0.22099020  0.08064210  0.278518450 -0.78596628\n68  -0.263023235  1.184448484 -0.55303920  0.05528051  0.001665827 -0.69557605\n69  -0.370327661  0.432871161 -0.45607536 -0.82668206  0.275253285 -0.85491821\n70   6.938723688  4.561578548 -0.85529107 -1.13279843 -1.410388301 -0.82614325\n71   0.548746915  3.834893076 -0.15842554 -1.09531158 -1.604665637 -0.64028112\n72   0.180868001  0.631686581 -0.77885876  0.45592409 -1.525383342 -0.80229909\n73   0.100975118  0.840261479 -0.58064037  1.00090642 -1.433244459 -0.68534919\n74   0.501416380  1.294882465 -0.81270267  0.80356165 -1.606224011 -0.72934718\n75  -0.523334782 -0.808966943 -0.80114741 -1.24301063 -0.529611270 -0.49990473\n76  -0.555312377 -0.702481657 -0.83722672 -1.08954163 -0.582668898 -0.86177847\n77  -0.433267800 -0.503898671 -0.79058723 -1.08652079 -0.429716311 -0.65342597\n78  -0.427093989 -0.659014149 -0.85802053 -0.92206207 -1.290723133 -1.01125290\n79  -0.472099290 -0.222742350  0.39105775 -0.04632675  0.668972568  2.30643723\n80  -0.273477191  0.269602585  1.76080436  0.82776196  0.489529758  1.17921134\n81  -0.501226488 -0.142592359  2.38040942  0.65448970 -0.018912366  1.46108946\n82   0.073387082 -0.087636963 -0.53611847  0.37063609 -0.248873770 -0.53614126\n83   0.077702427 -0.004417336 -0.70685732  0.94728468 -0.519910500 -0.65922217\n84  -0.082768993  0.376458531  0.43352579  0.41367093  0.912368664  0.95101055\n85  -0.355529108 -0.473898233  1.77075631  1.75903964  0.666391878  0.66896560\n86  -0.369400953 -0.455893402  0.17721054  0.06091819  0.315459343  0.15661389\n87   0.102898469 -0.966097847  0.37890612 -0.64819764 -1.201825868 -0.42140400\n88   1.819161458 -0.479740938  0.63511322 -0.75767790 -1.334677281 -0.48804536\n89  -0.249573403 -0.750548229  0.37819575 -1.07018924 -0.670879379  0.25518482\n90   1.880580934  0.262485446  1.23488388 -0.58261053 -1.613236696  0.02539879\n91  -0.221492701 -0.577435829  0.04627168 -0.75335765 -0.013838143  2.82804301\n92  -0.402172361 -0.192797340  1.47709816 -0.19265899 -0.074874472  3.09811559\n93  -0.511509238 -0.772572602  0.23339616 -0.87500801 -0.040814716  3.60366408\n94  -0.380801510 -0.497130279 -0.33188219 -0.01797199 -0.211800539 -0.62554956\n95  -0.393038173 -0.991505384 -0.60320690  1.74458444 -1.019301272 -0.68830291\n96  -0.523263770 -0.981422300 -0.62711508 -0.83437133  0.167858649 -0.58082749\n97  -0.309202580 -0.468539168 -0.68643641 -1.04541727  0.119400793 -0.72924259\n98  -0.276958586 -0.245317749 -0.79901346  0.40350892 -0.207583034 -0.80168771\n99   0.147496064  1.206954068 -0.41504692  0.84540869 -1.245538268 -0.68796943\n101 -0.555954658 -1.197952838 -0.80889131 -0.88707369  2.135173069  1.12051804\n102 -0.409529796 -0.892169972 -0.75553009 -0.46040780  1.524063062  0.65764129\n103 -0.477740977 -1.088249062 -0.72813885 -0.84852773  1.571625946  0.62712744\n104 -0.504740976 -0.670483440  0.64346359 -0.51329998  0.570478648  1.24401853\n105 -0.200185878 -0.097541034  1.11659612  0.36449915 -0.022019608  1.10217638\n106 -0.081094788 -0.525601380  0.44740976  0.18856286  0.133491039  0.38105370\n107 -0.457887158 -0.877729823 -0.49857375 -0.95131287  0.399737712 -0.61442811\n108 -0.472893123 -1.192600999 -0.63096857 -0.91646643 -0.154320025 -0.70421490\n109 -0.482063730 -0.564966990 -0.09316092 -0.46220889  0.508176404  1.59296607\n110 -0.417861456 -0.530881259  0.15059277  0.34501898  0.218004672  0.98578096\n111 -0.489507998 -0.627432324  0.03752845 -0.06909330  0.090542604  0.44685866\n112 -0.085512793 -0.786995879  0.51266011  0.46157725  0.749314472 -0.13028695\n113 -0.268287535 -1.101080705  0.05422728  0.17936571  1.050679026 -0.36651877\n           turf       macro         sand         reef       algae\n1    0.97488303 -0.85300783 -0.329108785 -0.404712639  0.59434138\n2   -0.19942619  1.35568932 -0.350543857 -0.212302323  0.40329791\n3   -0.30946037  1.22657393 -0.199948736 -0.033584126  0.23605859\n4   -0.12607007 -0.51511013  1.712719227  0.153781726 -0.35477232\n5    1.22286746  0.21196513 -0.866817642 -0.956801335  1.31517950\n6    0.78544764 -0.89700561  1.115119540 -0.459294287  0.38564584\n7    0.72812119 -1.01142599  1.672413964 -0.485183871  0.27756324\n8   -1.49066855 -1.22465605 -0.915890609  2.388931653 -2.03257165\n9   -0.77283817 -0.53295343 -1.474641955  1.460195273 -1.00847637\n10  -0.96744253 -0.83855861 -1.090471407  1.579927231 -1.33858155\n11   1.12717848 -1.19456838  0.416721797 -0.456278284  0.59462621\n12   1.68419595 -1.26782533  2.123100093 -1.344344378  1.11823586\n19  -0.41548301  1.86716484 -0.744953816 -0.127439517  0.41485350\n20   0.51118147  0.64414096 -0.270633302 -0.666399559  0.79662898\n21   0.87850123 -0.92077051 -0.692772186 -0.124064216  0.46799634\n22   1.08870727 -0.96564040  0.655255675 -0.608172737  0.65794115\n23   0.30443973 -1.23992707  0.523402203  0.338950761 -0.24700516\n24   0.40640373 -0.76900430  0.005084322  0.128058116  0.06406288\n25   0.96778378 -1.34342651  1.207950763 -0.414241074  0.36932921\n26  -1.84382587 -1.32276805 -1.031702811  2.178373844 -2.42878411\n27  -0.99061022 -0.61805835 -1.075117021  1.419847871 -1.26373156\n28  -0.56481747 -1.12722193 -1.440834547  1.249096726 -1.06484586\n29  -0.59883915 -0.48025758 -1.395160800  1.305419309 -0.81132840\n30  -0.13394906 -0.08991457 -1.388954011  0.694260144 -0.17369811\n31   0.04866013 -0.32586300 -1.513381246  0.631204328 -0.09621598\n32  -0.35775315 -0.91619195  0.885545295  0.778334564 -0.76432556\n33   1.56519602 -1.00776315 -1.467732481 -0.569258291  1.11498059\n34   0.60944729 -0.71358013  0.190871394 -0.108604378  0.29142316\n35   1.32255028  0.11233567 -0.495642806 -1.025582218  1.37043765\n36   0.59833131  1.03950707  0.423474237 -0.983529756  1.05933103\n37   1.15929216  1.13500274  0.408294333 -1.517297472  1.66186540\n38  -1.83467488 -0.04876303 -0.970745264  1.334244824 -1.85352670\n39  -1.42785352  0.00813843 -0.777693436  1.186413433 -1.42204501\n40  -0.12158915 -1.11950629 -1.067502441  0.006252093 -0.61886946\n41   0.28676187  1.13164513 -0.531551132 -0.455023840  0.78918265\n42  -0.18067963  2.11939305  0.078523995 -0.546438091  0.76137725\n43   1.24813457  0.73758377 -0.144987013 -1.318721698  1.57397320\n44  -0.06718141 -0.37958477  1.385696975  0.148977473 -0.23575163\n45   0.29553003 -0.12043830  0.518495364 -0.165725336  0.24155802\n46  -0.52493471  2.16592787  1.080492861 -0.451918061  0.43832902\n47   1.83050065 -1.06728442  0.300202944 -1.177396600  1.35342888\n48  -0.62122388  2.77556605 -0.288672660 -0.440401373  0.61308823\n49   0.51538844  2.97741512 -1.313839657 -1.339540125  1.83764980\n50  -1.01682295  1.56983509  0.843800558  0.348010795 -0.31768553\n51  -1.44240488 -0.58470424  0.327683806  1.268368330 -1.70001128\n52  -1.53695277  0.96991297  0.260159403  1.164733738 -1.10359992\n53  -0.56709948  0.87842898  0.617846807  0.257873866 -0.17588766\n54   0.24140916  0.89063848  2.514375217 -0.958917494  0.63680517\n57   0.37264287 -1.15134677 -0.237322707  0.315791800 -0.13954493\n58   0.60962512 -0.92856239 -0.166771841 -0.086984121  0.19607060\n59   0.62152723 -0.59866587 -0.235780924 -0.080940330  0.35454818\n60   0.35161587 -0.35635460  0.853996079 -0.187586031  0.19272532\n61   0.15359140  0.06932338  1.146770513 -0.260001688  0.18416034\n62   0.54989299 -0.24863797  0.616538195 -0.364410298  0.43856330\n63  -1.03306609 -0.24432104 -1.163349224 -1.286807734 -1.14004728\n64   1.65741514 -0.41350972  0.238349196 -1.281965352  1.47112227\n65   1.77711370  0.25079131 -0.473291705 -1.545322279  1.88582775\n66  -0.45046713 -0.68726397  1.756688606  0.578958081 -0.75517012\n67   0.38707345  0.21091860  0.224041699 -0.358557498  0.48020359\n68   0.40240097  0.05346372  1.084965937 -0.454548961  0.42554047\n69   0.78053552 -0.75470465  0.777582937 -0.405539345  0.44397452\n70  -1.45218570  0.27789639 -0.148651127 -1.331533038 -1.32646942\n71  -0.93054218 -0.88872060 -0.359337733 -1.318721698 -1.32402797\n72   1.63651447 -0.67993828  1.318826879 -1.380376273  1.33186274\n73   1.31153522 -0.11873769  1.017060847 -1.252148483  1.25675908\n74   1.78811427 -0.44568252 -0.111702501 -1.377918153  1.58732434\n75  -0.03978781  0.51234212  3.013808837 -0.624209497  0.18793907\n76   0.86400467  0.32028077  0.463779501 -0.890914442  1.00499908\n77   0.54024802  0.40380678  0.713331896 -0.668746356  0.71885533\n78   1.40907915 -0.43762682  1.662549039 -1.385673269  1.21245079\n79  -1.35083781 -0.65234617 -0.637347415  1.885292438 -1.63864235\n80  -0.85555593 -0.28801358 -0.020407107  1.046572002 -0.98222497\n81  -0.30955360 -0.76802019 -0.667578403  0.946161552 -0.65035798\n82   0.90324437 -0.82021662  0.132526069 -0.490579123  0.53738390\n83   0.99942924 -0.61054424  0.731578059 -0.723097547  0.72659172\n84  -1.46675504 -0.30449639 -0.174299932  1.134149523 -1.59981010\n85  -1.12095645  0.07732854 -0.215108113  0.811583604 -1.08487358\n86  -0.44953351 -0.63048984 -0.422726920  0.279376536 -0.72900961\n87   0.50821584  1.53132286 -0.075368830 -0.949594956  1.18789857\n88  -1.36293575  0.07827119 -1.328496116 -1.067699499 -1.32606252\n89  -0.29854428  1.60332398 -0.027211892 -0.208939346  0.41437163\n90   0.66568698  0.78410194  0.415622563 -0.887620097  1.01309075\n91  -1.68283142  0.45690142 -1.360640397  1.844125249 -1.47721787\n92  -1.95817991  0.89435365 -1.485320233  1.986764236 -1.55775612\n93  -2.01337166  0.17858089 -1.359902815  2.336902742 -1.93092595\n94  -0.37330736  2.58819395 -0.298705356 -0.528345886  0.77736293\n95   0.86034745  0.18790688  1.073164632 -1.022059099  0.94252544\n96   0.44551726  0.10514381 -0.016014867 -0.286253937  0.49155529\n97   0.57097844 -0.18569272  0.341490616 -0.410601910  0.48758691\n98   0.79577183 -0.23856513  0.569515387 -0.641322080  0.68854066\n99   1.12783053 -0.58873337  2.205176266 -1.148651155  0.86448782\n101 -1.83608272  1.01351830 -1.553228495  1.930554481 -1.38289405\n102 -1.76441231  2.42644791 -1.796586791  1.284910245 -0.68348027\n103 -1.65146982  1.97104772 -1.652770282  1.291588884 -0.77307409\n104 -0.67732772 -0.63964695 -0.410024655  1.134383063 -0.96052319\n105 -0.14612074 -0.72554073 -0.747367497  0.709393540 -0.46829974\n106  0.40972561 -0.93141479 -0.627628722  0.324349076 -0.00478952\n107  0.02518326  0.77342735  0.006288587 -0.178283639  0.36882696\n108  0.26236805  0.51310353  0.563234048 -0.547639154  0.48996939\n109 -0.88822045 -0.83173205 -0.144627913  1.327962012 -1.25644763\n110 -0.55140589 -0.01567253 -0.353341908  0.767713041 -0.55752364\n111  0.15207033 -0.40110736 -0.689466941  0.343366543 -0.02640033\n112 -0.36042541 -0.73438389  1.219738744  0.334690433 -0.68620497\n113 -0.20373441 -0.28219227 -0.614176922  0.348920172 -0.32881738\n    reefbuild.prop         lat         lon    min_SST        prod  bathymetry\n1      -0.46125567  0.40838708 -1.64783250  0.5182057 -1.05697679  0.83025580\n2      -0.26544455  0.11531114 -1.65296227  0.8297201 -1.10141207  0.04935654\n3      -0.08729336  0.11531114 -1.65296227  0.8297201 -1.10141207  0.04935654\n4       0.26445882  0.32076622 -1.64031568  0.5947648 -0.99644382  0.56879310\n5      -1.05219029  0.32076622 -1.64031568  0.5947648 -0.99644382  0.56879310\n6      -0.44583532  0.47726616 -1.65996087  0.3453667 -0.98524047  0.70181404\n7      -0.43528391  0.47726616 -1.65996087  0.3453667 -0.98524047  0.70181404\n8       2.23836300 -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621\n9       1.27721794 -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621\n10      1.51912972 -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621\n11     -0.50055037  0.54103893 -1.68336318  0.1643661 -0.93575230  0.79212896\n12     -1.38276525  0.54103893 -1.68336318  0.1643661 -0.93575230  0.79212896\n19     -0.20924122  0.01175670 -1.68863777  0.8764491 -1.23926680  0.10649657\n20     -0.71542001  0.01175670 -1.68863777  0.8764491 -1.23926680  0.10649657\n21     -0.22313925  0.29903281 -1.63973631  0.6660781 -1.03877830  0.32879444\n22     -0.63614574  0.29903281 -1.63973631  0.6660781 -1.03877830  0.32879444\n23      0.33637210  0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123\n24      0.08060332  0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123\n25     -0.40588450  0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123\n26      2.51183737 -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153\n27      1.41079810 -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153\n28      1.22099434 -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153\n29      1.10568494 -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325\n30      0.50885412 -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325\n31      0.44269375 -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325\n32      0.83037693  0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973\n33     -0.70812369  0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973\n34     -0.15716803  0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973\n35     -1.11858125  0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110\n36     -1.03460680  0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110\n37     -1.59788273  0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110\n38      1.78679178 -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410\n39      1.41515415 -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410\n40      0.28237889 -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410\n41     -0.54888112  1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729\n42     -0.61199662  1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729\n43     -1.40261511  1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729\n44      0.21099277  0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037\n45     -0.18126030  0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037\n46     -0.45487400  0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037\n47     -1.24993417  0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037\n48     -0.49324988  0.93220954  0.31300697 -1.3367801  0.17020187 -1.08523433\n49     -1.44410054  0.93220954  0.31300697 -1.3367801  0.17020187 -1.08523433\n50      0.37216930  0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576\n51      1.64428666  0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576\n52      1.20643264  0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576\n53      0.25653748  0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576\n54     -0.93593697  0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576\n57      0.27776058  0.50214339 -1.66825502  0.3238290 -0.92880436  0.15719914\n58     -0.11060535  0.50214339 -1.66825502  0.3238290 -0.92880436  0.15719914\n59     -0.15833605  0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573\n60     -0.18097010  0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573\n61     -0.23141046  0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573\n62     -0.38770082  0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573\n63     -0.85406962  1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836\n64     -1.35877452  1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836\n65     -1.63662477  1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836\n66      0.71680381  0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737\n67     -0.39516424  0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737\n68     -0.45335769  0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737\n69     -0.42054987  0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737\n70     -0.85574168  0.76757862  0.63665606 -0.8089768  1.00080294 -1.05258279\n71     -0.83424167  0.72922851  0.76435120 -0.7198134  0.11565890 -1.07331552\n72     -1.43937113  0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886\n73     -1.30782964  0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886\n74     -1.45891368  0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886\n75     -0.52547418  0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496\n76     -0.94469804  0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496\n77     -0.69976864  0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496\n78     -1.43372225  0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496\n79      1.82023954 -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437\n80      1.08226093 -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437\n81      0.85741665 -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437\n82     -0.51206790  0.35883072 -1.64349170  0.5591480 -1.04604635  0.44930264\n83     -0.74653902  0.35883072 -1.64349170  0.5591480 -1.04604635  0.44930264\n84      1.51550895 -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173\n85      1.02597217 -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173\n86      0.52239510 -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173\n87     -1.02610574  1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281\n88     -0.43447504  1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281\n89     -0.26639476  1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281\n90     -0.94333381  1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281\n91      1.70019258 -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695\n92      1.79821004 -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695\n93      2.15176166 -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695\n94     -0.60178846  0.06253646 -1.67024792  0.8652360 -1.43480942 -0.52416411\n95     -1.04980770  0.06253646 -1.67024792  0.8652360 -1.43480942 -0.52416411\n96     -0.34494616  0.14135034 -1.64406494  0.7953639 -0.89661693 -0.26229778\n97     -0.43664610  0.14135034 -1.64406494  0.7953639 -0.89661693 -0.26229778\n98     -0.67031975  0.25384052 -1.64269098  0.6011139 -1.04062722  0.96847397\n99     -1.15652705  0.25384052 -1.64269098  0.6011139 -1.04062722  0.96847397\n101     1.66922778 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021\n102     1.03102309 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021\n103     1.07972227 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021\n104     1.11074089 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352\n105     0.64749999 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352\n106     0.22976670 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352\n107    -0.23064378  0.12794772 -1.64951022  0.8225753 -1.08851043 -0.23127589\n108    -0.54488950  0.12794772 -1.64951022  0.8225753 -1.08851043 -0.23127589\n109     1.36888599 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544\n110     0.72089568 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544\n111     0.24964328 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544\n112     0.53584716  0.44800247 -0.68294489  0.3299904 -0.98074739  1.67309995\n113     0.37756687  0.44800247 -0.68294489  0.3299904 -0.98074739  1.67309995\n       distance logdistance    pop_area logpoparea        wave   irradiance\n1   -0.42116789  0.19010783 -0.45138989 -0.7616792 -0.74726535 -0.074382214\n2   -0.90176742 -1.28581453 -0.35747905  0.3830905 -1.14244773  0.236437648\n3   -0.90176742 -1.28581453 -0.35747905  0.3830905 -1.14244773  0.236437648\n4   -0.59309842 -0.05592137 -0.45138989 -0.7616792 -0.91739970  0.190997092\n5   -0.59309842 -0.05592137 -0.45138989 -0.7616792 -0.91739970  0.190997092\n6   -0.28433512  0.33433978 -0.45138989 -0.7616792 -1.00572224  0.053222616\n7   -0.28433512  0.33433978 -0.45138989 -0.7616792 -1.00572224  0.053222616\n8    0.47675260  0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457\n9    0.47675260  0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457\n10   0.47675260  0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457\n11  -0.15193164  0.44814230 -0.45138989 -0.7616792 -0.84108382  0.085507203\n12  -0.15193164  0.44814230 -0.45138989 -0.7616792 -0.84108382  0.085507203\n19  -0.93085706 -1.81754879  4.66741026  2.2025149 -1.46352630 -0.142220203\n20  -0.93085706 -1.81754879  4.66741026  2.2025149 -1.46352630 -0.142220203\n21  -0.63566532 -0.13523811 -0.45138989 -0.7616792 -0.93609954  0.271910338\n22  -0.63566532 -0.13523811 -0.45138989 -0.7616792 -0.93609954  0.271910338\n23  -0.85894932 -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854\n24  -0.85894932 -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854\n25  -0.85894932 -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854\n26   0.54889093  0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375\n27   0.54889093  0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375\n28   0.54889093  0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375\n29   1.61772005  1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460\n30   1.61772005  1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460\n31   1.61772005  1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460\n32   0.80674664  0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284\n33   0.80674664  0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284\n34   0.80674664  0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284\n35  -0.69956097 -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503\n36  -0.69956097 -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503\n37  -0.69956097 -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503\n38   1.26737692  1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991\n39   1.26737692  1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991\n40   1.26737692  1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991\n41   1.97859976  1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124\n42   1.97859976  1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124\n43   1.97859976  1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124\n44  -0.80050597 -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304\n45  -0.80050597 -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304\n46  -0.80050597 -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304\n47  -0.80050597 -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304\n48   1.03511496  1.02066533 -0.45138989 -0.7616792  1.58306560 -0.617772170\n49   1.03511496  1.02066533 -0.45138989 -0.7616792  1.58306560 -0.617772170\n50   1.32737584  1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601\n51   1.32737584  1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601\n52   1.32737584  1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601\n53   1.32737584  1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601\n54   1.32737584  1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601\n57  -0.23348127  0.38051300 -0.45138989 -0.7616792 -1.00572224  0.197332942\n58  -0.23348127  0.38051300 -0.45138989 -0.7616792 -1.00572224  0.197332942\n59  -0.75100538 -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300\n60  -0.75100538 -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300\n61  -0.75100538 -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300\n62  -0.75100538 -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300\n63   1.84962106  1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853\n64   1.84962106  1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853\n65   1.84962106  1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853\n66  -0.83738527 -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507\n67  -0.83738527 -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507\n68  -0.83738527 -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507\n69  -0.83738527 -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507\n70   0.03727982  0.58170333 -0.45138989 -0.7616792  1.23465563  0.209278239\n71  -0.34164376  0.27789502 -0.45138989 -0.7616792  1.00343892  0.262103895\n72  -0.62719059 -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740\n73  -0.62719059 -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740\n74  -0.62719059 -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740\n75  -0.91425542 -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414\n76  -0.91425542 -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414\n77  -0.91425542 -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414\n78  -0.91425542 -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414\n79  -0.80184118 -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182\n80  -0.80184118 -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182\n81  -0.80184118 -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182\n82  -0.51855784  0.06267851 -0.45138989 -0.7616792 -0.91739970  0.063230838\n83  -0.51855784  0.06267851 -0.45138989 -0.7616792 -0.91739970  0.063230838\n84   1.31555936  1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335\n85   1.31555936  1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335\n86   1.31555936  1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335\n87   1.63844020  1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276\n88   1.63844020  1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276\n89   1.63844020  1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276\n90   1.63844020  1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276\n91  -0.58673369 -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806\n92  -0.58673369 -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806\n93  -0.58673369 -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806\n94  -0.83552609 -0.76175055 -0.03852315  1.0402503 -1.30950345  0.270053974\n95  -0.83552609 -0.76175055 -0.03852315  1.0402503 -1.30950345  0.270053974\n96  -0.94110175 -2.21400595  2.19896670  1.8970278 -1.17725908  0.129494953\n97  -0.94110175 -2.21400595  2.19896670  1.8970278 -1.17725908  0.129494953\n98  -0.72468650 -0.34273466 -0.45138989 -0.7616792 -0.93609954  0.068799930\n99  -0.72468650 -0.34273466 -0.45138989 -0.7616792 -0.93609954  0.068799930\n101 -0.53355138  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154\n102 -0.53355138  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154\n103 -0.53355138  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154\n104 -0.77615865 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216\n105 -0.77615865 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216\n106 -0.77615865 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216\n107 -0.92781671 -1.73578467  0.59916802  1.4688450 -1.17725908 -0.073736522\n108 -0.92781671 -1.73578467  0.59916802  1.4688450 -1.17725908 -0.073736522\n109 -0.93900570 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293\n110 -0.93900570 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293\n111 -0.93900570 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293\n112  0.96004644  0.99642436 -0.45138989 -0.7616792 -0.03903164  0.695968389\n113  0.96004644  0.99642436 -0.45138989 -0.7616792 -0.03903164  0.695968389\n     complexity atoll.high.dummy atoll.low.dummy high.NA.dummy\n1    0.32548086        0.3269231     -0.04807692             0\n2   -0.52028066        0.3269231     -0.04807692             0\n3   -0.52028066        0.3269231     -0.04807692             0\n4    0.94328324        0.3269231     -0.04807692             0\n5    0.94328324        0.3269231     -0.04807692             0\n6    0.79646564        0.3269231     -0.04807692             0\n7    0.79646564        0.3269231     -0.04807692             0\n8    0.08692826        0.3269231     -0.04807692             0\n9    0.08692826        0.3269231     -0.04807692             0\n10   0.08692826        0.3269231     -0.04807692             0\n11   1.07683887        0.3269231     -0.04807692             0\n12   1.07683887        0.3269231     -0.04807692             0\n19  -0.90579642        0.3269231     -0.04807692             0\n20  -0.90579642        0.3269231     -0.04807692             0\n21   0.81896451        0.3269231     -0.04807692             0\n22   0.81896451        0.3269231     -0.04807692             0\n23   0.91865054        0.3269231     -0.04807692             0\n24   0.91865054        0.3269231     -0.04807692             0\n25   0.91865054        0.3269231     -0.04807692             0\n26  -0.40167650        0.3269231     -0.04807692             0\n27  -0.40167650        0.3269231     -0.04807692             0\n28  -0.40167650        0.3269231     -0.04807692             0\n29  -0.90005070        0.3269231     -0.04807692             0\n30  -0.90005070        0.3269231     -0.04807692             0\n31  -0.90005070        0.3269231     -0.04807692             0\n32  -0.78913919       -0.6730769     -0.04807692             0\n33  -0.78913919       -0.6730769     -0.04807692             0\n34  -0.78913919       -0.6730769     -0.04807692             0\n35  -1.49738374        0.3269231     -0.04807692             0\n36  -1.49738374        0.3269231     -0.04807692             0\n37  -1.49738374        0.3269231     -0.04807692             0\n38  -1.14294413       -0.6730769     -0.04807692             0\n39  -1.14294413       -0.6730769     -0.04807692             0\n40  -1.14294413       -0.6730769     -0.04807692             0\n41   0.58893219       -0.6730769     -0.04807692             0\n42   0.58893219       -0.6730769     -0.04807692             0\n43   0.58893219       -0.6730769     -0.04807692             0\n44  -0.20598591        0.3269231     -0.04807692             0\n45  -0.20598591        0.3269231     -0.04807692             0\n46  -0.20598591        0.3269231     -0.04807692             0\n47  -0.20598591        0.3269231     -0.04807692             0\n48  -0.66028633        0.3269231     -0.04807692             0\n49  -0.66028633        0.3269231     -0.04807692             0\n50   1.97707616       -0.6730769     -0.04807692             0\n51   1.97707616       -0.6730769     -0.04807692             0\n52   1.97707616       -0.6730769     -0.04807692             0\n53   1.97707616       -0.6730769     -0.04807692             0\n54   1.97707616       -0.6730769     -0.04807692             0\n57   0.12368988        0.3269231     -0.04807692             0\n58   0.12368988        0.3269231     -0.04807692             0\n59   0.25860832        0.3269231     -0.04807692             0\n60   0.25860832        0.3269231     -0.04807692             0\n61   0.25860832        0.3269231     -0.04807692             0\n62   0.25860832        0.3269231     -0.04807692             0\n63   0.80816097       -0.6730769     -0.04807692             0\n64   0.80816097       -0.6730769     -0.04807692             0\n65   0.80816097       -0.6730769     -0.04807692             0\n66  -0.35717472        0.3269231     -0.04807692             0\n67  -0.35717472        0.3269231     -0.04807692             0\n68  -0.35717472        0.3269231     -0.04807692             0\n69  -0.35717472        0.3269231     -0.04807692             0\n70  -1.10917569        0.3269231     -0.04807692             0\n71   2.42301934        0.3269231     -0.04807692             0\n72  -0.28476280        0.3269231     -0.04807692             0\n73  -0.28476280        0.3269231     -0.04807692             0\n74  -0.28476280        0.3269231     -0.04807692             0\n75  -2.45592241        0.3269231     -0.04807692             0\n76  -2.45592241        0.3269231     -0.04807692             0\n77  -2.45592241        0.3269231     -0.04807692             0\n78  -2.45592241        0.3269231     -0.04807692             0\n79   0.25331815       -0.6730769      0.95192308             0\n80   0.25331815       -0.6730769      0.95192308             0\n81   0.25331815       -0.6730769      0.95192308             0\n82   0.94803633        0.3269231     -0.04807692             0\n83   0.94803633        0.3269231     -0.04807692             0\n84  -0.68558734       -0.6730769     -0.04807692             0\n85  -0.68558734       -0.6730769     -0.04807692             0\n86  -0.68558734       -0.6730769     -0.04807692             0\n87   0.67507313       -0.6730769     -0.04807692             0\n88   0.67507313       -0.6730769     -0.04807692             0\n89   0.67507313       -0.6730769     -0.04807692             0\n90   0.67507313       -0.6730769     -0.04807692             0\n91   0.86500430       -0.6730769     -0.04807692             0\n92   0.86500430       -0.6730769     -0.04807692             0\n93   0.86500430       -0.6730769     -0.04807692             0\n94   0.00686074        0.3269231     -0.04807692             0\n95   0.00686074        0.3269231     -0.04807692             0\n96  -1.03966702       -0.6730769      0.95192308             0\n97  -1.03966702       -0.6730769      0.95192308             0\n98   1.04828977        0.3269231     -0.04807692             0\n99   1.04828977        0.3269231     -0.04807692             0\n101  1.25748063        0.3269231     -0.04807692             0\n102  1.25748063        0.3269231     -0.04807692             0\n103  1.25748063        0.3269231     -0.04807692             0\n104 -0.65015727        0.3269231     -0.04807692             0\n105 -0.65015727        0.3269231     -0.04807692             0\n106 -0.65015727        0.3269231     -0.04807692             0\n107 -0.85924231        0.3269231     -0.04807692             0\n108 -0.85924231        0.3269231     -0.04807692             0\n109 -0.34536366        0.3269231     -0.04807692             0\n110 -0.34536366        0.3269231     -0.04807692             0\n111 -0.34536366        0.3269231     -0.04807692             0\n112 -0.49082028       -0.6730769     -0.04807692             0\n113 -0.49082028       -0.6730769     -0.04807692             0\n    Populated.Remote.dummy Populated.NA.dummy\n1                0.4807692                  0\n2               -0.5192308                  0\n3               -0.5192308                  0\n4                0.4807692                  0\n5                0.4807692                  0\n6                0.4807692                  0\n7                0.4807692                  0\n8                0.4807692                  0\n9                0.4807692                  0\n10               0.4807692                  0\n11               0.4807692                  0\n12               0.4807692                  0\n19              -0.5192308                  0\n20              -0.5192308                  0\n21               0.4807692                  0\n22               0.4807692                  0\n23              -0.5192308                  0\n24              -0.5192308                  0\n25              -0.5192308                  0\n26               0.4807692                  0\n27               0.4807692                  0\n28               0.4807692                  0\n29               0.4807692                  0\n30               0.4807692                  0\n31               0.4807692                  0\n32               0.4807692                  0\n33               0.4807692                  0\n34               0.4807692                  0\n35              -0.5192308                  0\n36              -0.5192308                  0\n37              -0.5192308                  0\n38               0.4807692                  0\n39               0.4807692                  0\n40               0.4807692                  0\n41               0.4807692                  0\n42               0.4807692                  0\n43               0.4807692                  0\n44              -0.5192308                  0\n45              -0.5192308                  0\n46              -0.5192308                  0\n47              -0.5192308                  0\n48               0.4807692                  0\n49               0.4807692                  0\n50               0.4807692                  0\n51               0.4807692                  0\n52               0.4807692                  0\n53               0.4807692                  0\n54               0.4807692                  0\n57               0.4807692                  0\n58               0.4807692                  0\n59              -0.5192308                  0\n60              -0.5192308                  0\n61              -0.5192308                  0\n62              -0.5192308                  0\n63               0.4807692                  0\n64               0.4807692                  0\n65               0.4807692                  0\n66              -0.5192308                  0\n67              -0.5192308                  0\n68              -0.5192308                  0\n69              -0.5192308                  0\n70               0.4807692                  0\n71               0.4807692                  0\n72              -0.5192308                  0\n73              -0.5192308                  0\n74              -0.5192308                  0\n75              -0.5192308                  0\n76              -0.5192308                  0\n77              -0.5192308                  0\n78              -0.5192308                  0\n79              -0.5192308                  0\n80              -0.5192308                  0\n81              -0.5192308                  0\n82               0.4807692                  0\n83               0.4807692                  0\n84               0.4807692                  0\n85               0.4807692                  0\n86               0.4807692                  0\n87               0.4807692                  0\n88               0.4807692                  0\n89               0.4807692                  0\n90               0.4807692                  0\n91              -0.5192308                  0\n92              -0.5192308                  0\n93              -0.5192308                  0\n94              -0.5192308                  0\n95              -0.5192308                  0\n96              -0.5192308                  0\n97              -0.5192308                  0\n98               0.4807692                  0\n99               0.4807692                  0\n101             -0.5192308                  0\n102             -0.5192308                  0\n103             -0.5192308                  0\n104             -0.5192308                  0\n105             -0.5192308                  0\n106             -0.5192308                  0\n107             -0.5192308                  0\n108             -0.5192308                  0\n109             -0.5192308                  0\n110             -0.5192308                  0\n111             -0.5192308                  0\n112              0.4807692                  0\n113              0.4807692                  0\n> ############################################################\n> # 1. Remote benthic communities. ENV and FISH drivers.\n> ####################################################################\n> remote<-fd[fd$STATE==\"Remote\",]\n> \n> \n> ### add dummy variables\n> levels(remote$REGION)\n[1] \"HI\"     \"MARIAN\" \"PRIAs\"  \"SAMOA\" \n> remote$div_HW.MAR<-0\n> remote$div_HW.PRIA<-0\n> remote$div_HW.SAM<-0\n> \n> remote$div_HW.MAR[remote$REGION==\"MARIAN\"]<-1\n> remote$div_HW.PRIA[remote$REGION==\"PRIA\"]<-1\n> \n> \n> remote$isltype_at.high<-0\n> remote$isltype_at.high[remote$IslType==\"high\"]<-1\n> \n> \n> \n> ## scale continuous variables\n> \n> remote_cont_scaled<-scale(remote[, c(\"min_SST\",\"prod\", \"bathymetry\",\"wave\",<(remote[, c(\"min_SST\",\"prod\", \"bathymetry\",\"wave\",                         \"irradiance\", \"cropper\", <d\", \"bathymetry\",\"wave\", \"irradiance\", \"cropper\", \"                        scraper\", \"excavator\", \"b<irradiance\", \"cropper\", \"scraper\", \"excavator\", \"br                        owser\")], center=T, scale<craper\", \"excavator\", \"browser\")], center=T, scale=                        T)\n> \n> \n> ### center categorical variables\n> \n> remote_cat_scaled<-remote[,c(\"ID\",\"REGION\",\"div_HW.MAR\",\"div_HW.PRIA\", \"isl<[,c(\"ID\",\"REGION\",\"div_HW.MAR\",\"div_HW.PRIA\", \"islt                        ype_at.high\")]\n> remote_cat_scaled$div_HW.MAR<-remote_cat_scaled$div_HW.MAR - mean(remote_ca<MAR<-remote_cat_scaled$div_HW.MAR - mean(remote_cat                        _scaled$div_HW.MAR)\n> remote_cat_scaled$div_HW.PRIA<-remote_cat_scaled$div_HW.PRIA - mean(remote_<PRIA<-remote_cat_scaled$div_HW.PRIA - mean(remote_c                        at_scaled$div_HW.PRIA)\n> remote_cat_scaled$isltype_at.high<-remote_cat_scaled$isltype_at.high - mean<_at.high<-remote_cat_scaled$isltype_at.high - mean(                        remote_cat_scaled$isltype<d$isltype_at.high - mean(remote_cat_scaled$isltype_                        at.high)\n> # remote_cat_scaled$isltype_at.low<-remote_cat_scaled$isltype_at.low - mean<pe_at.low<-remote_cat_scaled$isltype_at.low - mean(                        remote_cat_scaled$isltype<ed$isltype_at.low - mean(remote_cat_scaled$isltype_                        at.low)\n> \n> #j#o#i#n# #a#l#l# #p#r#e#d#i#c#t#o#r#s#\nError: unexpected symbol in \"join all\"\n> remote_scaled<-cbind(remote_cont_scaled, remote_cat_scaled)\n> \n> \n> scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND\"))\n                          ID REGION              ISLAND total.biomass\n1               Agrihan.2011 MARIAN             Agrihan    0.01859816\n4              Alamagan.2011 MARIAN            Alamagan   -0.84404060\n5              Alamagan.2014 MARIAN            Alamagan   -0.40522134\n6              Asuncion.2011 MARIAN            Asuncion   -0.33692994\n7              Asuncion.2014 MARIAN            Asuncion   -0.68464688\n8                 Baker.2010  PRIAs               Baker   -0.99183791\n9                 Baker.2012  PRIAs               Baker   -0.05580144\n10                Baker.2015  PRIAs               Baker   -0.28344466\n11  Farallon_de_Pajaros.2011 MARIAN Farallon de Pajaros   -0.73028981\n12  Farallon_de_Pajaros.2014 MARIAN Farallon de Pajaros   -0.90332303\n21               Guguan.2011 MARIAN              Guguan   -0.30032303\n22               Guguan.2014 MARIAN              Guguan   -0.24676832\n26              Howland.2010  PRIAs             Howland   -1.12805357\n27              Howland.2012  PRIAs             Howland   -0.67125721\n28              Howland.2015  PRIAs             Howland   -0.95693888\n29               Jarvis.2010  PRIAs              Jarvis   -0.11023489\n30               Jarvis.2012  PRIAs              Jarvis    1.52226395\n31               Jarvis.2015  PRIAs              Jarvis   -0.10764977\n32             Johnston.2010     HI            Johnston   -0.37680368\n33             Johnston.2012     HI            Johnston    0.10917125\n34             Johnston.2015     HI            Johnston   -0.17394323\n38              Kingman.2010  PRIAs             Kingman    0.07938196\n39              Kingman.2012  PRIAs             Kingman   -0.29863111\n40              Kingman.2015  PRIAs             Kingman   -0.63551281\n41                 Kure.2010     HI                Kure   -0.09699125\n42                 Kure.2012     HI                Kure   -0.51225207\n43                 Kure.2015     HI                Kure    0.81660304\n48               Laysan.2011     HI              Laysan    0.05670134\n49               Laysan.2015     HI              Laysan    0.75056181\n50            Lisianski.2010     HI           Lisianski   -0.62251203\n51            Lisianski.2011     HI           Lisianski    0.15882073\n52            Lisianski.2012     HI           Lisianski    0.66493931\n53            Lisianski.2014     HI           Lisianski   -0.79804019\n54            Lisianski.2015     HI           Lisianski    0.56074335\n57                 Maug.2011 MARIAN                Maug   -0.44565509\n58                 Maug.2014 MARIAN                Maug   -0.37109399\n63               Midway.2011     HI              Midway    3.01644894\n64               Midway.2014     HI              Midway    2.68209106\n65               Midway.2015     HI              Midway    1.48436585\n70               Necker.2011     HI              Necker    4.07790095\n71                Nihoa.2011     HI               Nihoa    0.07189721\n82                Pagan.2011 MARIAN               Pagan   -0.39427033\n83                Pagan.2014 MARIAN               Pagan   -0.28985592\n84              Palmyra.2010  PRIAs             Palmyra   -0.01340920\n85              Palmyra.2012  PRIAs             Palmyra    0.26656412\n86              Palmyra.2015  PRIAs             Palmyra   -0.58555991\n87        Pearl__Hermes.2010     HI      Pearl & Hermes   -0.62027240\n88        Pearl__Hermes.2011     HI      Pearl & Hermes    0.43125118\n89        Pearl__Hermes.2012     HI      Pearl & Hermes   -1.09767674\n90        Pearl__Hermes.2015     HI      Pearl & Hermes    0.92835511\n98              Sarigan.2011 MARIAN             Sarigan   -0.68963725\n99              Sarigan.2014 MARIAN             Sarigan    0.21481987\n112                Wake.2011 MARIAN                Wake   -0.36937498\n113                Wake.2014 MARIAN                Wake   -0.76322573\n         browser     cropper   excavator     scraper       coral         CCA\n1   -0.067072010 -0.33033137 -0.46356924  1.15067238  0.10677658 -0.82045301\n4   -0.522478908 -0.06779203 -0.89649319  0.67377306  1.13964711 -0.98930991\n5   -0.483556901 -0.22036035 -0.64287110  0.58012833 -0.79928356 -0.78437247\n6   -0.345951276 -0.49664985 -0.10556941  0.21578076 -0.05925443 -0.72987368\n7   -0.214612021 -0.40013448 -0.99057574 -0.43451583 -0.11957994 -0.70788174\n8   -0.567053494 -0.66347769 -0.98055754 -0.35964592  1.36210874  2.78620880\n9   -0.530746420  0.64117881 -0.79792348  0.90627635  1.41377491  1.05342565\n10  -0.559814896  0.48184075 -0.95314201  0.54602692  0.78920581  1.98005251\n11  -0.007543065 -0.87544274 -0.99208841 -0.36449507  0.17525419 -0.99133042\n12  -0.279392876 -0.56749127 -0.99208841 -0.86765471 -1.12391813 -1.11342695\n21  -0.363597296 -0.43245091 -0.99208841  1.51734293  0.33313311 -0.57221893\n22  -0.305243442  0.63058837 -0.91237333 -0.24171535 -0.79294304 -0.16320998\n26  -0.573840876 -0.87334865 -0.99208841 -0.52843221  1.43321313  2.32576963\n27  -0.493869794 -0.20489846 -0.94623533 -0.05839773  1.04592271  1.39935270\n28  -0.623676580 -0.26508129 -0.97771890 -0.72651545  0.53216776  1.67628721\n29  -0.674191940  0.28327848 -0.96533452  1.85675193  0.51627804  1.79588871\n30  -0.511844905  2.19741880 -0.86432970  4.69823310  0.23865938  1.01027333\n31  -0.633601760  0.22441652 -0.93001579  1.81199652 -0.18774052  1.38190284\n32  -0.233511089  2.09315346 -0.77963957 -0.91788978  0.24087856  1.15928594\n33  -0.249691681  0.45927802 -0.17694475  0.29929142 -0.95145602  0.08733325\n34  -0.174643666  0.96267576  0.69986644 -0.06209309 -1.04777337  1.02724784\n38  -0.564319548 -0.44385643  1.07959243  0.70336117  0.97813680  1.32220596\n39  -0.665189316 -0.82855282  0.87225366  0.36157259  1.19659989  0.80711870\n40  -0.649911545 -1.10793602  0.80053226 -0.46376465  0.29210479 -0.29063884\n41  -0.146279922 -0.71418004  0.83524689 -0.27121076 -0.29943932 -0.44882350\n42   0.123138555 -0.78829056  1.23007316 -0.72111508 -0.35734940 -0.54768416\n43   0.374814783 -0.41965378  1.82653988  0.21393458 -1.31413370 -0.85076066\n48  -0.203835731  0.47867434  0.64348731 -1.18013246 -0.73316101  0.07114855\n49   0.597079186  1.11479393  0.01209740 -0.59316619 -1.25326471 -0.95755904\n50  -0.622889621 -0.58786036  0.50378267 -0.91244364  0.80523003 -0.25862754\n51  -0.470311841  0.12492372  1.28999878 -0.42357124  2.32532414 -0.32975773\n52   0.046053339  0.51224594  1.50490629 -0.62817676  2.19615871 -0.36954941\n53  -0.546309297 -1.11224102  0.39015342 -0.79810760  0.51507581 -0.09087023\n54   0.763616884 -0.64687393  1.11581159 -0.43276499 -0.72745454 -0.86993488\n57   0.031116692 -0.84752028 -0.89525570  0.49007077  1.22291926 -0.79206965\n58  -0.045034872 -0.58933374 -0.68329927  0.26898797  0.50367001 -0.69947169\n63   2.384016363  1.77722548  2.78218710 -0.94506121 -1.48695812 -0.59654752\n64   2.753239908  0.26935541  2.38471047 -0.21634104 -1.46848004 -0.60884926\n65   1.423356728  0.11152679  1.66513251 -0.39759485 -1.50511012 -1.04184317\n70   5.100691532  3.55443031 -0.98204407 -1.24061662 -1.21775781 -0.98353703\n71   0.169686463  2.95742428 -0.37428575 -1.20812918 -1.39021992 -0.76416737\n82  -0.197138304 -0.26511716 -0.70368361  0.06231317 -0.18666867 -0.64125302\n83  -0.193808247 -0.19674835 -0.85259033  0.56205734 -0.42727093 -0.78652316\n84  -0.317640526  0.11615894  0.14197360  0.09960869  0.84417893  1.11400487\n85  -0.528123531 -0.58244882  1.30821433  1.26555304  0.62582265  0.78111241\n86  -0.538828129 -0.56765701 -0.08156698 -0.20609936  0.31429600  0.17639313\n87  -0.174365014 -0.98681376  0.09433807 -0.82064434 -1.03261466 -0.50583074\n88   1.150037531 -0.58724887  0.31778433 -0.91552383 -1.15054831 -0.58448631\n89  -0.446359835 -0.80972970  0.09371853 -1.18635727 -0.56128766  0.29273458\n90   1.197433595  0.02252473  0.84086315 -0.76380423 -1.39782854  0.02152235\n98  -0.467492380 -0.39465928 -0.93296259  0.09080194 -0.15001443 -0.95467260\n99  -0.139950027  0.79844977 -0.59809332  0.47376798 -1.07141863 -0.82045301\n112 -0.319757857 -0.83967314  0.21098912  0.14112602  0.69943394 -0.16223066\n113 -0.460801120 -1.09770848 -0.18882455 -0.10344854  0.96695855 -0.44105072\n           turf       macro        sand        reef       algae reefbuild.prop\n1    1.00418175 -0.69323816 -0.21045754 -0.38225184  0.65605807     -0.4748191\n4   -0.07156120 -0.36489157  1.80475096  0.16829253 -0.22202667      0.2243961\n5    1.24648773  0.34163198 -0.74115624 -0.92648172  1.32295072     -1.0441759\n6    0.81908415 -0.73599228  1.21494223 -0.43605654  0.46298071     -0.4599618\n7    0.76307039 -0.84717843  1.76497116 -0.46157759  0.36298670     -0.4497957\n8   -1.40491245 -1.05438127 -0.78958944  2.37162577 -1.77426430      2.1262237\n9   -0.70351929 -0.38223051 -1.34105628  1.45610967 -0.82680939      1.2001746\n10  -0.89366751 -0.67919736 -0.96189421  1.57413728 -1.13221044      1.4332531\n11   1.15298987 -1.02514406  0.52564957 -0.43308347  0.65632158     -0.5126789\n12   1.69725249 -1.09633031  2.20978165 -1.30850821  1.14074578     -1.3626800\n21   0.91000696 -0.75908544 -0.56937983 -0.10559836  0.53916833     -0.2453974\n22   1.11539960 -0.80268702  0.76107366 -0.58281575  0.71489821     -0.6433231\n26  -1.74998301 -1.14972000 -0.90389178  2.16406519 -2.14082535      2.3897123\n27  -0.91630470 -0.46492983 -0.94674000  1.41633660 -1.06296201      1.3288772\n28  -0.50026195 -0.95970124 -1.30768963  1.24801605 -0.87896034      1.1460040\n29  -0.53350458 -0.33102417 -1.26261133  1.30353690 -0.64441541      1.0349051\n30  -0.07925977  0.04828530 -1.25648546  0.70107740 -0.05450354      0.4598674\n31   0.09916795 -0.18099375 -1.37929053  0.63891916  0.01718005      0.3961229\n32  -0.29793908 -0.75463630  0.98836097  0.78395505 -0.60093012      0.7696499\n33   1.58097748 -0.84361912 -1.33423689 -0.54445524  1.13773413     -0.7126728\n34   0.64711394 -0.55775156  0.30274360 -0.09035859  0.37580938     -0.1818351\n38  -1.74104156  0.08827364 -0.84372894  1.33195209 -1.60861856      1.6911415\n39  -1.34353579  0.14356670 -0.65319395  1.18622503 -1.20942773      1.3330741\n40  -0.06718288 -0.95220370 -0.93922469  0.02286293 -0.46635954      0.2416619\n41   0.33181752  1.23531606 -0.41026063 -0.43184688  0.83631798     -0.5592449\n42  -0.12492028  2.19514403  0.19186089 -0.52195988  0.81059345     -0.6200558\n43   1.27117625  0.85239334 -0.02873618 -1.28325026  1.56237704     -1.3818050\n48  -0.55537674  2.83276946 -0.17054859 -0.41743256  0.67340195     -0.5056450\n49   0.55520890  3.02891301 -1.18235038 -1.30377234  1.80632084     -1.4217756\n50  -0.94191719  1.66112002  0.94716046  0.35975680 -0.18771536      0.3281736\n51  -1.35775395 -0.43251851  0.43777238  1.26701333 -1.46659180      1.5538399\n52  -1.45013683  1.07815546  0.37112830  1.16485394 -0.91481416      1.1319740\n53  -0.50249171  0.98925739  0.72415250  0.27090295 -0.05652924      0.2167640\n54   0.28750332  1.00112176  2.59595568 -0.92856776  0.69534399     -0.9321675\n57   0.41573198 -0.98314417 -0.11986809  0.32799644 -0.02290629      0.2372122\n58   0.64728770 -0.76665707 -0.05023700 -0.06904609  0.28759273     -0.1369727\n63  -0.95778839 -0.10175667 -1.03382191 -1.25179058 -0.94853390     -0.8532895\n64   1.67108493 -0.26616302  0.34960243 -1.24701713  1.46722318     -1.3395653\n65   1.78804257  0.37936070 -0.35276074 -1.50662525  1.85089329     -1.6072699\n70  -1.36731080  0.40569961 -0.03235253 -1.29587923 -1.12100475     -0.8549005\n71  -0.85761212 -0.72794146 -0.24029239 -1.28325026 -1.11874601     -0.8341856\n82   0.93418351 -0.66137384  0.24515893 -0.46689604  0.60336312     -0.5237759\n83   1.02816590 -0.45762812  0.83640102 -0.69610464  0.77841117     -0.7496854\n84  -1.38154652 -0.16023110 -0.05766695  1.13470509 -1.37388939      1.4297645\n85  -1.04366619  0.21080107 -0.09794311  0.81673079 -0.89748925      0.9581030\n86  -0.38761782 -0.47700992 -0.30285517  0.29209953 -0.56825712      0.4729140\n87   0.54820054  1.62369639  0.03997438 -0.91937792  1.20519513     -1.0190438\n88  -1.28010454  0.21171707 -1.19681576 -1.03580129 -1.12062829     -0.4490163\n89  -0.24008601  1.69366230  0.08750349 -0.18926532  0.48955674     -0.2870735\n90   0.70206583  0.89759661  0.52456467 -0.85828526  1.04346943     -0.9392943\n98   0.82917193 -0.09616347  0.67645118 -0.61549322  0.74320774     -0.6762492\n99   1.15362700 -0.43643375  2.29078778 -1.11560062  0.90598752     -1.1447028\n112 -0.30055015 -0.57796728  1.31819751  0.34662605 -0.52865586      0.4858748\n113 -0.14744714 -0.13855742 -0.49180922  0.36065324 -0.19801413      0.3333741\n            lat        lon    min_SST        prod  bathymetry    distance\n1    0.18230040 -1.4970141  0.6756473 -1.20726270  0.68890265 -1.30976416\n4    0.06408604 -1.4889596  0.7410839 -1.15520415  0.40817297 -1.50433075\n5    0.06408604 -1.4889596  0.7410839 -1.15520415  0.40817297 -1.50433075\n6    0.27522916 -1.5100100  0.5279184 -1.14556923  0.55099611 -1.15491623\n7    0.27522916 -1.5100100  0.5279184 -1.14556923  0.55099611 -1.15491623\n8   -1.69182994  0.3702184  0.9224625  1.52215780  1.05045719 -0.29362507\n9   -1.69182994  0.3702184  0.9224625  1.52215780  1.05045719 -0.29362507\n10  -1.69182994  0.3702184  0.9224625  1.52215780  1.05045719 -0.29362507\n11   0.36126868 -1.5350864  0.3732136 -1.10300924  0.64796626 -1.00508074\n12   0.36126868 -1.5350864  0.3732136 -1.10300924  0.64796626 -1.00508074\n21   0.03476424 -1.4883387  0.8020368 -1.19161194  0.15048899 -1.55250194\n22   0.03476424 -1.4883387  0.8020368 -1.19161194  0.15048899 -1.55250194\n26  -1.63012008  0.3630241  0.9291627  1.56229222  0.82348500 -0.21198914\n27  -1.63012008  0.3630241  0.9291627  1.56229222  0.82348500 -0.21198914\n28  -1.63012008  0.3630241  0.9291627  1.56229222  0.82348500 -0.21198914\n29  -1.74927611  1.1830826  0.5247756  2.01726992  0.30913603  0.99756010\n30  -1.74927611  1.1830826  0.5247756  2.01726992  0.30913603  0.99756010\n31  -1.74927611  1.1830826  0.5247756  2.01726992  0.30913603  0.99756010\n32  -0.02178525  0.7137847  0.3256187 -0.57526295  0.83895493  0.07981539\n33  -0.02178525  0.7137847  0.3256187 -0.57526295  0.83895493  0.07981539\n34  -0.02178525  0.7137847  0.3256187 -0.57526295  0.83895493  0.07981539\n38  -1.06555733  1.0640362  0.9373115  0.44442188  1.02407437  0.60109142\n39  -1.06555733  1.0640362  0.9373115  0.44442188  1.02407437  0.60109142\n40  -1.06555733  1.0640362  0.9373115  0.44442188  1.02407437  0.60109142\n41   1.15566866  0.2783275 -1.7778575  0.10596484 -1.23143677  1.40595258\n42   1.15566866  0.2783275 -1.7778575  0.10596484 -1.23143677  1.40595258\n43   1.15566866  0.2783275 -1.7778575  0.10596484 -1.23143677  1.40595258\n48   0.88901958  0.6040924 -0.9098460 -0.15188502 -1.36773845  0.33825027\n49   0.88901958  0.6040924 -0.9098460 -0.15188502 -1.36773845  0.33825027\n50   0.91351138  0.4953611 -0.9940846  0.21161604 -1.36736419  0.66898969\n51   0.91351138  0.4953611 -0.9940846  0.21161604 -1.36736419  0.66898969\n52   0.91351138  0.4953611 -0.9940846  0.21161604 -1.36736419  0.66898969\n53   0.91351138  0.4953611 -0.9940846  0.21161604 -1.36736419  0.66898969\n54   0.91351138  0.4953611 -0.9940846  0.21161604 -1.36736419  0.66898969\n57   0.30879247 -1.5188975  0.5095097 -1.09703399 -0.03375103 -1.09736705\n58   0.30879247 -1.5188975  0.5095097 -1.09703399 -0.03375103 -1.09736705\n63   1.13728317  0.3263006 -1.6583876  0.05271004 -1.23403626  1.25999278\n64   1.13728317  0.3263006 -1.6583876  0.05271004 -1.23403626  1.25999278\n65   1.13728317  0.3263006 -1.6583876  0.05271004 -1.23403626  1.25999278\n70   0.66690649  0.9508934 -0.4587220  0.56243464 -1.33268084 -0.79095805\n71   0.61516613  1.0877231 -0.3825123 -0.19879215 -1.35494134 -1.21977002\n82   0.11544105 -1.4923628  0.7106415 -1.19786249  0.27987735 -1.41997629\n83   0.11544105 -1.4923628  0.7106415 -1.19786249  0.27987735 -1.41997629\n84  -1.11863606  1.0795720  0.9325494  0.58223813  0.84273647  0.65561747\n85  -1.11863606  1.0795720  0.9325494  0.58223813  0.84273647  0.65561747\n86  -1.11863606  1.0795720  0.9325494  0.58223813  0.84273647  0.65561747\n87   1.10113635  0.4037241 -1.5756463  0.35108273 -1.14222987  1.02100823\n88   1.10113635  0.4037241 -1.5756463  0.35108273 -1.14222987  1.02100823\n89   1.10113635  0.4037241 -1.5756463  0.35108273 -1.14222987  1.02100823\n90   1.10113635  0.4037241 -1.5756463  0.35108273 -1.14222987  1.02100823\n98  -0.02620729 -1.4915048  0.7465106 -1.19320202  0.83730600 -1.65324348\n99  -0.02620729 -1.4915048  0.7465106 -1.19320202  0.83730600 -1.65324348\n112  0.23574782 -0.4631041  0.5147759 -1.14170517  1.59385532  0.25329836\n113  0.23574782 -0.4631041  0.5147759 -1.14170517  1.59385532  0.25329836\n    logdistance pop_area logpoparea        wave  irradiance  complexity\n1   -1.23603390      NaN        NaN -0.89185103 -0.05133485  0.02789681\n4   -1.75039461      NaN        NaN -1.03651296  0.14829074  0.67055062\n5   -1.75039461      NaN        NaN -1.03651296  0.14829074  0.67055062\n6   -0.93449551      NaN        NaN -1.11161190  0.04465300  0.51782720\n7   -0.93449551      NaN        NaN -1.11161190  0.04465300  0.51782720\n8    0.06626896      NaN        NaN -0.98578772  1.64851833 -0.22025168\n9    0.06626896      NaN        NaN -0.98578772  1.64851833 -0.22025168\n10   0.06626896      NaN        NaN -0.98578772  1.64851833 -0.22025168\n11  -0.69657437      NaN        NaN -0.97162305  0.06893835  0.80947859\n12  -0.69657437      NaN        NaN -0.97162305  0.06893835  0.80947859\n21  -1.91621808      NaN        NaN -1.05241307  0.20915590  0.54123110\n22  -1.91621808      NaN        NaN -1.05241307  0.20915590  0.54123110\n26   0.13108342      NaN        NaN -0.92392272  1.47178168 -0.72851082\n27   0.13108342      NaN        NaN -0.92392272  1.47178168 -0.72851082\n28   0.13108342      NaN        NaN -0.92392272  1.47178168 -0.72851082\n29   0.83875354      NaN        NaN -0.59345246  2.19014238 -1.24693237\n30   0.83875354      NaN        NaN -0.59345246  2.19014238 -1.24693237\n31   0.83875354      NaN        NaN -0.59345246  2.19014238 -1.24693237\n32   0.33971089      NaN        NaN  0.29215468  0.78277590 -1.13155939\n33   0.33971089      NaN        NaN  0.29215468  0.78277590 -1.13155939\n34   0.33971089      NaN        NaN  0.29215468  0.78277590 -1.13155939\n38   0.64585036      NaN        NaN -0.06783743 -1.19028747 -1.49959631\n39   0.64585036      NaN        NaN -0.06783743 -1.19028747 -1.49959631\n40   0.64585036      NaN        NaN -0.06783743 -1.19028747 -1.49959631\n41   1.01171141      NaN        NaN  1.40460019 -1.12587058  0.30194562\n42   1.01171141      NaN        NaN  1.40460019 -1.12587058  0.30194562\n43   1.01171141      NaN        NaN  1.40460019 -1.12587058  0.30194562\n48   0.50037035      NaN        NaN  1.08958407 -0.46008767 -0.99752336\n49   0.50037035      NaN        NaN  1.08958407 -0.46008767 -0.99752336\n50   0.68095716      NaN        NaN  1.06568543 -0.50313346  1.74592838\n51   0.68095716      NaN        NaN  1.06568543 -0.50313346  1.74592838\n52   0.68095716      NaN        NaN  1.06568543 -0.50313346  1.74592838\n53   0.68095716      NaN        NaN  1.06568543 -0.50313346  1.74592838\n54   0.68095716      NaN        NaN  1.06568543 -0.50313346  1.74592838\n57  -0.83796350      NaN        NaN -1.11161190  0.15305674 -0.18201130\n58  -0.83796350      NaN        NaN -1.11161190  0.15305674 -0.18201130\n63   0.95247139      NaN        NaN  1.43301679 -1.09478533  0.52999298\n64   0.95247139      NaN        NaN  1.43301679 -1.09478533  0.52999298\n65   0.95247139      NaN        NaN  1.43301679 -1.09478533  0.52999298\n70  -0.41734514      NaN        NaN  0.79333784  0.16204232 -1.46446952\n71  -1.05250170      NaN        NaN  0.59673877  0.20177923  2.20980985\n82  -1.50244388      NaN        NaN -1.03651296  0.05218146  0.67549490\n83  -1.50244388      NaN        NaN -1.03651296  0.05218146  0.67549490\n84   0.67411668      NaN        NaN -0.06783743 -1.14287033 -1.02384211\n85   0.67411668      NaN        NaN -0.06783743 -1.14287033 -1.02384211\n86   0.67411668      NaN        NaN -0.06783743 -1.14287033 -1.02384211\n87   0.84932331      NaN        NaN  1.46152065 -1.00410990  0.39155161\n88   0.84932331      NaN        NaN  1.46152065 -1.00410990  0.39155161\n89   0.84932331      NaN        NaN  1.46152065 -1.00410990  0.39155161\n90   0.84932331      NaN        NaN  1.46152065 -1.00410990  0.39155161\n98  -2.35002053      NaN        NaN -1.05241307  0.05637069  0.77978109\n99  -2.35002053      NaN        NaN -1.05241307  0.05637069  0.77978109\n112  0.44969099      NaN        NaN -0.28965368  0.52814399 -0.82124045\n113  0.44969099      NaN        NaN -0.28965368  0.52814399 -0.82124045\n    atoll.high.dummy atoll.NA.dummy .NA.dummy Remote.NA.dummy\n1          0.4814815              0         0               0\n4          0.4814815              0         0               0\n5          0.4814815              0         0               0\n6          0.4814815              0         0               0\n7          0.4814815              0         0               0\n8          0.4814815              0         0               0\n9          0.4814815              0         0               0\n10         0.4814815              0         0               0\n11         0.4814815              0         0               0\n12         0.4814815              0         0               0\n21         0.4814815              0         0               0\n22         0.4814815              0         0               0\n26         0.4814815              0         0               0\n27         0.4814815              0         0               0\n28         0.4814815              0         0               0\n29         0.4814815              0         0               0\n30         0.4814815              0         0               0\n31         0.4814815              0         0               0\n32        -0.5185185              0         0               0\n33        -0.5185185              0         0               0\n34        -0.5185185              0         0               0\n38        -0.5185185              0         0               0\n39        -0.5185185              0         0               0\n40        -0.5185185              0         0               0\n41        -0.5185185              0         0               0\n42        -0.5185185              0         0               0\n43        -0.5185185              0         0               0\n48         0.4814815              0         0               0\n49         0.4814815              0         0               0\n50        -0.5185185              0         0               0\n51        -0.5185185              0         0               0\n52        -0.5185185              0         0               0\n53        -0.5185185              0         0               0\n54        -0.5185185              0         0               0\n57         0.4814815              0         0               0\n58         0.4814815              0         0               0\n63        -0.5185185              0         0               0\n64        -0.5185185              0         0               0\n65        -0.5185185              0         0               0\n70         0.4814815              0         0               0\n71         0.4814815              0         0               0\n82         0.4814815              0         0               0\n83         0.4814815              0         0               0\n84        -0.5185185              0         0               0\n85        -0.5185185              0         0               0\n86        -0.5185185              0         0               0\n87        -0.5185185              0         0               0\n88        -0.5185185              0         0               0\n89        -0.5185185              0         0               0\n90        -0.5185185              0         0               0\n98         0.4814815              0         0               0\n99         0.4814815              0         0               0\n112       -0.5185185              0         0               0\n113       -0.5185185              0         0               0\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy atoll.NA.dummy .NA.dummy\n1 -0.05133485  0.02789681        0.4814815              0         0\n4  0.14829074  0.67055062        0.4814815              0         0\n5  0.14829074  0.67055062        0.4814815              0         0\n6  0.04465300  0.51782720        0.4814815              0         0\n7  0.04465300  0.51782720        0.4814815              0         0\n8  1.64851833 -0.22025168        0.4814815              0         0\n  Remote.NA.dummy\n1               0\n4               0\n5               0\n6               0\n7               0\n8               0\n> head(remote_scaled)\n    min_SST      prod bathymetry       wave  irradiance     cropper    scraper\n1 0.7875175 -1.305609  0.8271004 -0.8918510 -0.05133485 -0.35803949  1.2821227\n4 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.08488042  0.8001843\n5 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.24362014  0.7055501\n6 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.53108556  0.3373527\n7 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.43066614 -0.3198152\n8 1.0457691  1.611770  1.1822774 -0.9857877  1.64851833 -0.70466159 -0.2441542\n   excavator     browser            ID REGION div_HW.MAR div_HW.PRIA\n1 -0.4910736 -0.02104648  Agrihan.2011 MARIAN  0.7301587           0\n4 -0.9346921 -0.50302362 Alamagan.2011 MARIAN  0.7301587           0\n5 -0.6748048 -0.46183075 Alamagan.2014 MARIAN  0.7301587           0\n6 -0.1242301 -0.31619667 Asuncion.2011 MARIAN  0.7301587           0\n7 -1.0310988 -0.17719456 Asuncion.2014 MARIAN  0.7301587           0\n8 -1.0208331 -0.55019887    Baker.2010  PRIAs -0.2698413           0\n  isltype_at.high\n1       0.5555556\n4       0.5555556\n5       0.5555556\n6       0.5555556\n7       0.5555556\n8       0.5555556\n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 2:length(i.levels)) {\n            cats[, counter + nvars + (j - 1)] <- 0\n            cats[, counter + nvars + (j - 1)][cats[, counter] == \n                i.levels[j + 1]] <- 1\n            colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n                1], i.levels[j + 1], \"dummy\", sep = \".\")\n            if (j == length(i.levels)) {\n                break\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 2:length(i.levels)) {\n        cats[, counter + nvars + (j - 1)] <- 0\n        cats[, counter + nvars + (j - 1)][cats[, counter] == \n            i.levels[j + 1]] <- 1\n        colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n            1], i.levels[j + 1], \"dummy\", sep = \".\")\n        if (j == length(i.levels)) {\n            break\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 2:length(i.levels)) {\n    cats[, counter + nvars + (j - 1)] <- 0\n    cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n        1]] <- 1\n    colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #34: break\nBrowse[2]> head(cats )\n  IslType  STATE atoll.high.dummy atoll.NA.dummy\n1    high Remote                1              0\n4    high Remote                1              0\n5    high Remote                1              0\n6    high Remote                1              0\n7    high Remote                1              0\n8    high Remote                1              0\nBrowse[2]> i.levels\n[1] \"atoll\" \"high\" \nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 2:length(i.levels)) {\n    cats[, counter + nvars + (j - 1)] <- 0\n    cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n        1]] <- 1\n    colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n        1], i.levels[j + 1], \"dummy\", sep = \".\")\n    if (j == length(i.levels)) {\n        break\n    }\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 1)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 1)][cats[, counter] == i.levels[j + \n    1]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 1)] <- paste(i.levels[j - \n    1], i.levels[j + 1], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: if (j == length(i.levels)) {\n    break\n}\nBrowse[2]> \ndebug at #34: break\nBrowse[2]> \ndebug at #40: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #41: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #44: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \ndebug at #45: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #45: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #45: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #45: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #49: scaled.data <- cbind(ID.vars, scaled_cont, cats)\nBrowse[2]> \ndebug at #50: return(scaled.data)\nBrowse[2]> \nexiting from: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 2:length(i.levels)){\n+ cats[, counter+nvars+(j-1)]<-0\n+ cats[, counter+nvars+(j-1)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy<ars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\"                        , sep=\".\")\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy atoll.high.dummy.1 .Remote.dummy\n1 -0.05133485  0.02789681        0.4814815          0.4814815             0\n4  0.14829074  0.67055062        0.4814815          0.4814815             0\n5  0.14829074  0.67055062        0.4814815          0.4814815             0\n6  0.04465300  0.51782720        0.4814815          0.4814815             0\n7  0.04465300  0.51782720        0.4814815          0.4814815             0\n8  1.64851833 -0.22025168        0.4814815          0.4814815             0\n  Remote.NA.dummy\n1               0\n4               0\n5               0\n6               0\n7               0\n8               0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-1)]<-0\n+ cats[, counter+nvars+(j-1)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy<ars+(j-1)]<-paste(i.levels[j-1],i.levels[j],\"dummy\"                        , sep=\".\")\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\nError in `[<-.data.frame`(`*tmp*`, , counter + nvars + (j - 1), value = 0) : \n  new columns would leave holes after existing columns\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-1],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-1],i.levels[j],\"dummy\"                        , sep=\".\")\n+ }\n+ }\n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy .Remote.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815             0               0\n4  0.14829074  0.67055062        0.4814815             0               0\n5  0.14829074  0.67055062        0.4814815             0               0\n6  0.04465300  0.51782720        0.4814815             0               0\n7  0.04465300  0.51782720        0.4814815             0               0\n8  1.64851833 -0.22025168        0.4814815             0               0\n  NA.NA.dummy\n1           0\n4           0\n5           0\n6           0\n7           0\n8           0\n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        for (j in 3:length(i.levels)) {\n            cats[, counter + nvars + (j - 2)] <- 0\n            cats[, counter + nvars + (j - 2)][cats[, counter] == \n                i.levels[j]] <- 1\n            colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                1], i.levels[j], \"dummy\", sep = \".\")\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, counter] == \n            i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n            1], i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 3:length(i.levels)) {\n    cats[, counter + nvars + (j - 2)] <- 0\n    cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\n    colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n        1], i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n    1], i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n    1], i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> head(cats )\n  IslType  STATE atoll.high.dummy high.NA.dummy\n1    high Remote                1             0\n4    high Remote                1             0\n5    high Remote                1             0\n6    high Remote                1             0\n7    high Remote                1             0\n8    high Remote                1             0\nBrowse[2]> }i.levels\nError: unexpected '}' in \"}\"\nBrowse[2]> i.levels\n[1] \"atoll\" \"high\" \nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #30: for (j in 3:length(i.levels)) {\n    cats[, counter + nvars + (j - 2)] <- 0\n    cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\n    colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n        1], i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n    1], i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n    1], i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #32: cats[, counter + nvars + (j - 2)][cats[, counter] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #33: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n    1], i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #39: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #40: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #43: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \ndebug at #44: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #44: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #44: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #44: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #48: scaled.data <- cbind(ID.vars, scaled_cont, cats)\nBrowse[2]> \ndebug at #49: return(scaled.data)\nBrowse[2]> \nexiting from: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy .Remote.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815             0               0\n4  0.14829074  0.67055062        0.4814815             0               0\n5  0.14829074  0.67055062        0.4814815             0               0\n6  0.04465300  0.51782720        0.4814815             0               0\n7  0.04465300  0.51782720        0.4814815             0               0\n8  1.64851833 -0.22025168        0.4814815             0               0\n  NA.NA.dummy\n1           0\n4           0\n5           0\n6           0\n7           0\n8           0\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    if (length(i.levels) > 2) {\n        for (j in 3:length(i.levels)) {\n            cats[, counter + nvars + (j - 2)] <- 0\n            cats[, counter + nvars + (j - 2)][cats[, counter] == \n                i.levels[j]] <- 1\n            colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                2], i.levels[j], \"dummy\", sep = \".\")\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: if (length(i.levels) > 2) {\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, counter] == \n            i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n            2], i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> \ndebug at #22: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #24: counter <- 1\nBrowse[2]> \ndebug at #26: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #27: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #28: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #31: if (length(i.levels) > 2) {\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, counter] == \n            i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n            2], i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> head(cats )\n  IslType  STATE atoll.high.dummy Remote.NA.dummy\n1    high Remote                1               0\n4    high Remote                1               0\n5    high Remote                1               0\n6    high Remote                1               0\n7    high Remote                1               0\n8    high Remote                1               0\nBrowse[2]> i.levels \n[1] \"Remote\"\nBrowse[2]> \ndebug at #44: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #45: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #48: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \ndebug at #49: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #49: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #53: scaled.data <- cbind(ID.vars, scaled_cont, cats)\nBrowse[2]> \ndebug at #54: return(scaled.data)\nBrowse[2]> \nexiting from: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\"))\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815               0\n4  0.14829074  0.67055062        0.4814815               0\n5  0.14829074  0.67055062        0.4814815               0\n6  0.04465300  0.51782720        0.4814815               0\n7  0.04465300  0.51782720        0.4814815               0\n8  1.64851833 -0.22025168        0.4814815               0\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }\n+ else\n+ {\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\nError in if (dim(cats)[2] == 1) { : argument is of length zero\n> \n> \n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    if (dim(cats)[2] == 1) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: if (dim(cats)[2] == 1) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \nError in if (dim(cats)[2] == 1) { : argument is of length zero\n> \n> \n> \n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    if (dim(cats)[2] == 1) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: if (dim(cats)[2] == 1) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \nError in if (dim(cats)[2] == 1) { : argument is of length zero\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    if (dim(cats)[2] == 1) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: if (dim(cats)[2] == 1) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \nError in if (dim(cats)[2] == 1) { : argument is of length zero\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    if (dim(cats)[2] == 1) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: if (dim(cats)[2] == 1) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> dim(cats)\nNULL\nBrowse[2]> head(cats)\n[1] high high high high high high\nLevels: atoll high\nBrowse[2]> class(cats)\n[1] \"factor\"\nBrowse[2]> numerics \n            ID         REGION  total.biomass        browser        cropper \n         FALSE          FALSE           TRUE           TRUE           TRUE \n     excavator        scraper          coral            CCA           turf \n          TRUE           TRUE           TRUE           TRUE           TRUE \n         macro           sand           reef          algae reefbuild.prop \n          TRUE           TRUE           TRUE           TRUE           TRUE \n        ISLAND            lat            lon        min_SST           prod \n         FALSE           TRUE           TRUE           TRUE           TRUE \n       IslType     bathymetry       distance    logdistance       pop_area \n         FALSE           TRUE           TRUE           TRUE           TRUE \n    logpoparea          STATE           wave     irradiance     complexity \n          TRUE          FALSE           TRUE           TRUE           TRUE \nBrowse[2]> length(cats)\n[1] 54\nBrowse[2]> \nError in if (dim(cats)[2] == 1) { : argument is of length zero\n> \n> \n> \n> \n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE, length.cats=0){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ if(length.cats==1){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }\n+ else\n+ {\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> \n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\nError in NextMethod(\"[\") : object 'i' not found\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE, length.cats=0){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ if(length.cats==1){\n+ \n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }\n+ else\n+ {\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\nError in `[<-.factor`(`*tmp*`, , 2, value = 0) : \n  incorrect number of subscripts on matrix\nIn addition: Warning message:\nIn `[<-.factor`(`*tmp*`, , 2, value = 0) :\n  invalid factor level, NA generated\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE, length.cats=0){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ if(length.cats==1){\n+ \n+ cats<-as.data.frame(cats)\n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }\n+ else\n+ {\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"), length.cats = 1)\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    if (length.cats == 1) {\n        cats <- as.data.frame(cats)\n        i.levels <- levels(cats)\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #20: if (length.cats == 1) {\n    cats <- as.data.frame(cats)\n    i.levels <- levels(cats)\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats)\nBrowse[2]> head(cats )\n  cats\n1 high\n2 high\n3 high\n4 high\n5 high\n6 high\nBrowse[2]> \ndebug at #24: cats[, 2] <- 0\nBrowse[2]> \ndebug at #25: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> head(cats )\n  cats V2\n1 high  0\n2 high  0\n3 high  0\n4 high  0\n5 high  0\n6 high  0\nBrowse[2]> \ndebug at #26: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #55: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #56: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #59: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE, length.cats=0){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ \n+ if(length.cats==1){\n+ \n+ cats<-as.data.frame(cats)\n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =0)\nError in 1:dim(cats)[2] : argument of length 0\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"), length.cat<D=c(\"ID\", \"REGION\", \"ISLAND\", \"STATE\"), length.cats                        =1)\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> \n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> \n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815               0\n4  0.14829074  0.67055062        0.4814815               0\n5  0.14829074  0.67055062        0.4814815               0\n6  0.04465300  0.51782720        0.4814815               0\n7  0.04465300  0.51782720        0.4814815               0\n8  1.64851833 -0.22025168        0.4814815               0\n> head(remote_scaled)\n    min_SST      prod bathymetry       wave  irradiance     cropper    scraper\n1 0.7875175 -1.305609  0.8271004 -0.8918510 -0.05133485 -0.35803949  1.2821227\n4 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.08488042  0.8001843\n5 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.24362014  0.7055501\n6 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.53108556  0.3373527\n7 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.43066614 -0.3198152\n8 1.0457691  1.611770  1.1822774 -0.9857877  1.64851833 -0.70466159 -0.2441542\n   excavator     browser            ID REGION div_HW.MAR div_HW.PRIA\n1 -0.4910736 -0.02104648  Agrihan.2011 MARIAN  0.7301587           0\n4 -0.9346921 -0.50302362 Alamagan.2011 MARIAN  0.7301587           0\n5 -0.6748048 -0.46183075 Alamagan.2014 MARIAN  0.7301587           0\n6 -0.1242301 -0.31619667 Asuncion.2011 MARIAN  0.7301587           0\n7 -1.0310988 -0.17719456 Asuncion.2014 MARIAN  0.7301587           0\n8 -1.0208331 -0.55019887    Baker.2010  PRIAs -0.2698413           0\n  isltype_at.high\n1       0.5555556\n4       0.5555556\n5       0.5555556\n6       0.5555556\n7       0.5555556\n8       0.5555556\n> \n> debug(scaler)\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(data, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ data<-data[complete.cases(data),]\n+ data<-droplevels(data)\n+ \n+ ## extract ID variables\n+ ID.vars<-data[,colnames(data)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(data, is.numeric)\n+ dat_cont<-data[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-data[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.data<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.data)\n+ \n+ ## END\n+ }\n> \n> \n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815               0\n4  0.14829074  0.67055062        0.4814815               0\n5  0.14829074  0.67055062        0.4814815               0\n6  0.04465300  0.51782720        0.4814815               0\n7  0.04465300  0.51782720        0.4814815               0\n8  1.64851833 -0.22025168        0.4814815               0\n> head(remote_test)\n             ID REGION   ISLAND total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity atoll.high.dummy Remote.NA.dummy\n1 -0.05133485  0.02789681        0.4814815               0\n4  0.14829074  0.67055062        0.4814815               0\n5  0.14829074  0.67055062        0.4814815               0\n6  0.04465300  0.51782720        0.4814815               0\n7  0.04465300  0.51782720        0.4814815               0\n8  1.64851833 -0.22025168        0.4814815               0\n> debug(scaler)\n> remote_test<-scaler(data=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISL<fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLA                        ND\", \"STATE\"))\ndebugging in: scaler(data = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    data <- data[complete.cases(data), ]\n    data <- droplevels(data)\n    ID.vars <- data[, colnames(data) %in% ID]\n    numerics <- sapply(data, is.numeric)\n    dat_cont <- data[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- data[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats)\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.data <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.data)\n}\nBrowse[2]> \ndebug at #4: data <- data[complete.cases(data), ]\nBrowse[2]> \ndebug at #5: data <- droplevels(data)\nBrowse[2]> \ndebug at #8: ID.vars <- data[, colnames(data) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(data, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- data[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- data[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #21: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats)\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats)\nBrowse[2]> \ndebug at #24: cats[, 2] <- 0\nBrowse[2]> \ndebug at #25: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #26: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #54: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #55: cats <- cats[, cats.num]\nBrowse[2]> head(cats )\n  cats ..dummy\n1 high       0\n2 high       0\n3 high       0\n4 high       0\n5 high       0\n6 high       0\nWarning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\nBrowse[2]> cats<-data[,!numerics]\nBrowse[2]> cats<-cats[,!colnames(cats)%in%ID]\nBrowse[2]> cats<-as.data.frame(cats)\nBrowse[2]> \nError in `[.data.frame`(cats, , cats.num) : undefined columns selected\n> cats<-data[,!numerics]\nError: object 'numerics' not found\n> numerics<-sapply(data, is.numeric)\n> cats<-data[,!numerics]\nError in data[, !numerics] : object of type 'closure' is not subsettable\n> head(data)\n                                                                     \n1 function (..., list = character(), package = NULL, lib.loc = NULL, \n2     verbose = getOption(\"verbose\"), envir = .GlobalEnv)            \n3 {                                                                  \n4     fileExt <- function(x) {                                       \n5         db <- grepl(\"\\\\\\\\.[^.]+\\\\\\\\.(gz|bz2|xz)$\", x)              \n6         ans <- sub(\".*\\\\\\\\.\", \"\", x)                               \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.df.frame(cats)\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> \n> \n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\",  : \n  could not find function \"as.df.frame\"\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats)\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\nIn addition: Warning message:\nIn is.na(e2) : is.na() applied to non-(list or vector) of type 'NULL'\n> debug(scaler)\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\ndebugging in: scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats)\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> ]\nError: unexpected ']' in \"]\"\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> head(cats )\n  Sex Bwt Hwt\n1   F 2.0 7.0\n2   F 2.0 7.4\n3   F 2.0 9.5\n4   F 2.1 7.2\n5   F 2.1 7.3\n6   F 2.1 7.6\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> head(cats )\n             ID REGION   ISLAND IslType  STATE\n1  Agrihan.2011 MARIAN  Agrihan    high Remote\n4 Alamagan.2011 MARIAN Alamagan    high Remote\n5 Alamagan.2014 MARIAN Alamagan    high Remote\n6 Asuncion.2011 MARIAN Asuncion    high Remote\n7 Asuncion.2014 MARIAN Asuncion    high Remote\n8    Baker.2010  PRIAs    Baker    high Remote\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #21: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats)\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> head(cats )\n  cats\n1 high\n2 high\n3 high\n4 high\n5 high\n6 high\nBrowse[2]> dim(cats)[2]\n[1] 1\nBrowse[2]> \ndebug at #23: i.levels <- levels(cats)\nBrowse[2]> i.levels \nError: object 'i.levels' not found\nBrowse[2]> \ndebug at #24: cats[, 2] <- 0\nBrowse[2]> i.levels\nNULL\nBrowse[2]> i.levels<-levels(cats[,1])\nBrowse[2]> cats[, 2]<-0\nBrowse[2]> cats[, 2][cats[,1]==i.levels[2]]<-1\nBrowse[2]> colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\nBrowse[2]> head(cats)\n  cats atoll.high.dummy\n1 high                1\n2 high                1\n3 high                1\n4 high                1\n5 high                1\n6 high                1\nBrowse[2]> \ndebug at #25: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #26: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #54: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #55: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #58: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ }else {\n+ \n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more dummy variable<e than 2 levels we need to add more dummy variables                        \n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else {\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE, ...){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else if (dim(cats)[2]>1){\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ \n+ ## center categorical dummy variables\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> debug(scaler)\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\ndebugging in: scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats[, 1])\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else if (dim(cats)[2] > 1) {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats[, 1])\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #24: i.levels <- levels(cats[, 1])\nBrowse[2]> \ndebug at #25: cats[, 2] <- 0\nBrowse[2]> \ndebug at #26: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #27: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #56: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #57: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #60: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> head(ctas )\nError in head(ctas) : object 'ctas' not found\nBrowse[2]> head(cats )\n[1] 1 1 1 1 1 1\nBrowse[2]> tail(cats )\n[1] 0 0 1 1 0 0\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\ndebugging in: scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats[, 1])\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else if (dim(cats)[2] > 1) {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats[, 1])\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #24: i.levels <- levels(cats[, 1])\nBrowse[2]> \ndebug at #25: cats[, 2] <- 0\nBrowse[2]> \ndebug at #26: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #27: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> head(cats)\n  cats V2\n1 high  1\n2 high  1\n3 high  1\n4 high  1\n5 high  1\n6 high  1\nBrowse[2]> \ndebug at #56: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #57: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #60: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\ndebugging in: scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats[, 1])\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else if (dim(cats)[2] > 1) {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats[, 1])\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #24: i.levels <- levels(cats[, 1])\nBrowse[2]> \ndebug at #25: cats[, 2] <- 0\nBrowse[2]> \ndebug at #26: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #27: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #56: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> head(cats )\n  cats atoll.high.dummy\n1 high                1\n2 high                1\n3 high                1\n4 high                1\n5 high                1\n6 high                1\nBrowse[2]> \ndebug at #57: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #60: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> head(cats )\n[1] 1 1 1 1 1 1\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\n> \n> \n> \n> \n> \n> \n> \n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE, ...){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else if (dim(cats)[2]>1){\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ #--------------------center categorical dummy variables--------------------\n+ \n+ if(dim(cats)[2]==1){\n+ cats[,2]<-cats[,2] - mean(cats[,2])} else if(dim(cats)[2]>1){\n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ ## center each scaled categorical\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }}\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\nError in 1:dim(cats)[2] : argument of length 0\n> debug(scaler)\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\ndebugging in: scaler(df = fd[fd$STATE == \"Remote\", ], ID = c(\"ID\", \"REGION\", \n    \"ISLAND\", \"STATE\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats[, 1])\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else if (dim(cats)[2] > 1) {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, counter] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                    2], i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    if (dim(cats)[2] == 1) {\n        cats[, 2] <- cats[, 2] - mean(cats[, 2])\n    }\n    else if (dim(cats)[2] > 1) {\n        cats.num <- sapply(cats, is.numeric)\n        cats <- cats[, cats.num]\n        for (i in 1:dim(cats)[2]) {\n            cats[, i] <- cats[, i] - mean(cats[, i])\n        }\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats[, 1])\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, counter] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[j - \n                  2], i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #24: i.levels <- levels(cats[, 1])\nBrowse[2]> \ndebug at #25: cats[, 2] <- 0\nBrowse[2]> \ndebug at #26: cats[, 2][cats[, 1] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #27: colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n    sep = \".\")\nBrowse[2]> \ndebug at #57: if (dim(cats)[2] == 1) {\n    cats[, 2] <- cats[, 2] - mean(cats[, 2])\n} else if (dim(cats)[2] > 1) {\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n}\nBrowse[2]> \ndebug at #57: if (dim(cats)[2] > 1) {\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n}\nBrowse[2]> \ndebug at #61: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #62: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #64: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \nError in 1:dim(cats)[2] : argument of length 0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE, ...){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else if (dim(cats)[2]>1){\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy<ars+(j-2)]<-paste(i.levels[j-2],i.levels[j],\"dummy\"                        , sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ #--------------------center categorical dummy variables--------------------\n+ \n+ if(dim(cats)[2]==2){\n+ cats[,2]<-cats[,2] - mean(cats[,2])} else if(dim(cats)[2]>2){\n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ ## center each scaled categorical\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }}\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \", \"STATE\"))\n> head(remote_test)\n             ID REGION   ISLAND  STATE total.biomass     browser     cropper\n1  Agrihan.2011 MARIAN  Agrihan Remote    0.01859816 -0.06707201 -0.33033137\n4 Alamagan.2011 MARIAN Alamagan Remote   -0.84404060 -0.52247891 -0.06779203\n5 Alamagan.2014 MARIAN Alamagan Remote   -0.40522134 -0.48355690 -0.22036035\n6 Asuncion.2011 MARIAN Asuncion Remote   -0.33692994 -0.34595128 -0.49664985\n7 Asuncion.2014 MARIAN Asuncion Remote   -0.68464688 -0.21461202 -0.40013448\n8    Baker.2010  PRIAs    Baker Remote   -0.99183791 -0.56705349 -0.66347769\n   excavator    scraper       coral        CCA       turf      macro       sand\n1 -0.4635692  1.1506724  0.10677658 -0.8204530  1.0041818 -0.6932382 -0.2104575\n4 -0.8964932  0.6737731  1.13964711 -0.9893099 -0.0715612 -0.3648916  1.8047510\n5 -0.6428711  0.5801283 -0.79928356 -0.7843725  1.2464877  0.3416320 -0.7411562\n6 -0.1055694  0.2157808 -0.05925443 -0.7298737  0.8190841 -0.7359923  1.2149422\n7 -0.9905757 -0.4345158 -0.11957994 -0.7078817  0.7630704 -0.8471784  1.7649712\n8 -0.9805575 -0.3596459  1.36210874  2.7862088 -1.4049125 -1.0543813 -0.7895894\n        reef      algae reefbuild.prop         lat        lon   min_SST\n1 -0.3822518  0.6560581     -0.4748191  0.18230040 -1.4970141 0.6756473\n4  0.1682925 -0.2220267      0.2243961  0.06408604 -1.4889596 0.7410839\n5 -0.9264817  1.3229507     -1.0441759  0.06408604 -1.4889596 0.7410839\n6 -0.4360565  0.4629807     -0.4599618  0.27522916 -1.5100100 0.5279184\n7 -0.4615776  0.3629867     -0.4497957  0.27522916 -1.5100100 0.5279184\n8  2.3716258 -1.7742643      2.1262237 -1.69182994  0.3702184 0.9224625\n       prod bathymetry   distance logdistance pop_area logpoparea       wave\n1 -1.207263  0.6889026 -1.3097642 -1.23603390      NaN        NaN -0.8918510\n4 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n5 -1.155204  0.4081730 -1.5043308 -1.75039461      NaN        NaN -1.0365130\n6 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n7 -1.145569  0.5509961 -1.1549162 -0.93449551      NaN        NaN -1.1116119\n8  1.522158  1.0504572 -0.2936251  0.06626896      NaN        NaN -0.9857877\n   irradiance  complexity cats atoll.high.dummy\n1 -0.05133485  0.02789681 high        0.4814815\n4  0.14829074  0.67055062 high        0.4814815\n5  0.14829074  0.67055062 high        0.4814815\n6  0.04465300  0.51782720 high        0.4814815\n7  0.04465300  0.51782720 high        0.4814815\n8  1.64851833 -0.22025168 high        0.4814815\n> head(remote_scaled)\n    min_SST      prod bathymetry       wave  irradiance     cropper    scraper\n1 0.7875175 -1.305609  0.8271004 -0.8918510 -0.05133485 -0.35803949  1.2821227\n4 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.08488042  0.8001843\n5 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.24362014  0.7055501\n6 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.53108556  0.3373527\n7 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.43066614 -0.3198152\n8 1.0457691  1.611770  1.1822774 -0.9857877  1.64851833 -0.70466159 -0.2441542\n   excavator     browser            ID REGION div_HW.MAR div_HW.PRIA\n1 -0.4910736 -0.02104648  Agrihan.2011 MARIAN  0.7301587           0\n4 -0.9346921 -0.50302362 Alamagan.2011 MARIAN  0.7301587           0\n5 -0.6748048 -0.46183075 Alamagan.2014 MARIAN  0.7301587           0\n6 -0.1242301 -0.31619667 Asuncion.2011 MARIAN  0.7301587           0\n7 -1.0310988 -0.17719456 Asuncion.2014 MARIAN  0.7301587           0\n8 -1.0208331 -0.55019887    Baker.2010  PRIAs -0.2698413           0\n  isltype_at.high\n1       0.5555556\n4       0.5555556\n5       0.5555556\n6       0.5555556\n7       0.5555556\n8       0.5555556\n> remote_test<-scaler(df=fd[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAN<[fd$STATE==\"Remote\",], ID=c(\"ID\", \"REGION\", \"ISLAND                        \"))\n> head(remote_scaled)\n    min_SST      prod bathymetry       wave  irradiance     cropper    scraper\n1 0.7875175 -1.305609  0.8271004 -0.8918510 -0.05133485 -0.35803949  1.2821227\n4 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.08488042  0.8001843\n5 0.8559862 -1.249965  0.5513227 -1.0365130  0.14829074 -0.24362014  0.7055501\n6 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.53108556  0.3373527\n7 0.6329435 -1.239667  0.6916265 -1.1116119  0.04465300 -0.43066614 -0.3198152\n8 1.0457691  1.611770  1.1822774 -0.9857877  1.64851833 -0.70466159 -0.2441542\n   excavator     browser            ID REGION div_HW.MAR div_HW.PRIA\n1 -0.4910736 -0.02104648  Agrihan.2011 MARIAN  0.7301587           0\n4 -0.9346921 -0.50302362 Alamagan.2011 MARIAN  0.7301587           0\n5 -0.6748048 -0.46183075 Alamagan.2014 MARIAN  0.7301587           0\n6 -0.1242301 -0.31619667 Asuncion.2011 MARIAN  0.7301587           0\n7 -1.0310988 -0.17719456 Asuncion.2014 MARIAN  0.7301587           0\n8 -1.0208331 -0.55019887    Baker.2010  PRIAs -0.2698413           0\n  isltype_at.high\n1       0.5555556\n4       0.5555556\n5       0.5555556\n6       0.5555556\n7       0.5555556\n8       0.5555556\n> tail(remote_scaled)\n       min_SST       prod bathymetry       wave  irradiance      cropper\n90  -1.5680915  0.3600502 -0.9717319  1.4615207 -1.00410990  0.009089659\n98   0.8616644 -1.2905798  0.9728860 -1.0524131  0.05637069 -0.424969470\n99   0.8616644 -1.2905798  0.9728860 -1.0524131  0.05637069  0.816400900\nNA          NA         NA         NA         NA          NA           NA\n112  0.6191920 -1.2355367  1.7160902 -0.2896537  0.52814399 -0.887984156\n113  0.6191920 -1.2355367  1.7160902 -0.2896537  0.52814399 -1.156457036\n        scraper  excavator     browser                 ID REGION div_HW.MAR\n90  -0.65258301  0.8455823  1.31723541 Pearl__Hermes.2015     HI -0.2698413\n98   0.21105327 -0.9720624 -0.44482896       Sarigan.2011 MARIAN  0.7301587\n99   0.59806589 -0.6289208 -0.09817649       Sarigan.2014 MARIAN  0.7301587\nNA           NA         NA          NA               <NA>   <NA> -0.2698413\n112  0.26190910  0.2001484 -0.28847502          Wake.2011 MARIAN  0.7301587\n113  0.01475027 -0.2095419 -0.43774731          Wake.2014 MARIAN  0.7301587\n    div_HW.PRIA isltype_at.high\n90            0      -0.4444444\n98            0       0.5555556\n99            0       0.5555556\nNA            0      -0.4444444\n112           0      -0.4444444\n113           0      -0.4444444\n> tail(remote_test)\n                    ID REGION         ISLAND total.biomass    browser\n89  Pearl__Hermes.2012     HI Pearl & Hermes    -1.0976767 -0.4463598\n90  Pearl__Hermes.2015     HI Pearl & Hermes     0.9283551  1.1974336\n98        Sarigan.2011 MARIAN        Sarigan    -0.6896373 -0.4674924\n99        Sarigan.2014 MARIAN        Sarigan     0.2148199 -0.1399500\n112          Wake.2011 MARIAN           Wake    -0.3693750 -0.3197579\n113          Wake.2014 MARIAN           Wake    -0.7632257 -0.4608011\n        cropper   excavator     scraper      coral         CCA       turf\n89  -0.80972970  0.09371853 -1.18635727 -0.5612877  0.29273458 -0.2400860\n90   0.02252473  0.84086315 -0.76380423 -1.3978285  0.02152235  0.7020658\n98  -0.39465928 -0.93296259  0.09080194 -0.1500144 -0.95467260  0.8291719\n99   0.79844977 -0.59809332  0.47376798 -1.0714186 -0.82045301  1.1536270\n112 -0.83967314  0.21098912  0.14112602  0.6994339 -0.16223066 -0.3005502\n113 -1.09770848 -0.18882455 -0.10344854  0.9669585 -0.44105072 -0.1474471\n          macro        sand       reef      algae reefbuild.prop         lat\n89   1.69366230  0.08750349 -0.1892653  0.4895567     -0.2870735  1.10113635\n90   0.89759661  0.52456467 -0.8582853  1.0434694     -0.9392943  1.10113635\n98  -0.09616347  0.67645118 -0.6154932  0.7432077     -0.6762492 -0.02620729\n99  -0.43643375  2.29078778 -1.1156006  0.9059875     -1.1447028 -0.02620729\n112 -0.57796728  1.31819751  0.3466261 -0.5286559      0.4858748  0.23574782\n113 -0.13855742 -0.49180922  0.3606532 -0.1980141      0.3333741  0.23574782\n           lon    min_SST       prod bathymetry   distance logdistance pop_area\n89   0.4037241 -1.5756463  0.3510827  -1.142230  1.0210082   0.8493233      NaN\n90   0.4037241 -1.5756463  0.3510827  -1.142230  1.0210082   0.8493233      NaN\n98  -1.4915048  0.7465106 -1.1932020   0.837306 -1.6532435  -2.3500205      NaN\n99  -1.4915048  0.7465106 -1.1932020   0.837306 -1.6532435  -2.3500205      NaN\n112 -0.4631041  0.5147759 -1.1417052   1.593855  0.2532984   0.4496910      NaN\n113 -0.4631041  0.5147759 -1.1417052   1.593855  0.2532984   0.4496910      NaN\n    logpoparea       wave  irradiance complexity atoll.high.dummy\n89         NaN  1.4615207 -1.00410990  0.3915516       -0.5185185\n90         NaN  1.4615207 -1.00410990  0.3915516       -0.5185185\n98         NaN -1.0524131  0.05637069  0.7797811        0.4814815\n99         NaN -1.0524131  0.05637069  0.7797811        0.4814815\n112        NaN -0.2896537  0.52814399 -0.8212404       -0.5185185\n113        NaN -0.2896537  0.52814399 -0.8212404       -0.5185185\n    Remote.NA.dummy\n89                0\n90                0\n98                0\n99                0\n112               0\n113               0\n> remote_test<-scaler(df=fd, ID=c(\"ID\", \"REGION\", \"ISLAND\"))\n> tail(remote_test)\n              ID REGION  ISLAND total.biomass     browser    cropper\n108  Tinian.2014 MARIAN  Tinian   -1.14058300 -0.47289312 -1.1926010\n109 Tutuila.2010  SAMOA Tutuila   -0.60031112 -0.48206373 -0.5649670\n110 Tutuila.2012  SAMOA Tutuila   -0.26174762 -0.41786146 -0.5308813\n111 Tutuila.2015  SAMOA Tutuila   -0.48366398 -0.48950800 -0.6274323\n112    Wake.2011 MARIAN    Wake   -0.01772077 -0.08551279 -0.7869959\n113    Wake.2014 MARIAN    Wake   -0.47362615 -0.26828754 -1.1010807\n      excavator    scraper      coral        CCA       turf       macro\n108 -0.63096857 -0.9164664 -0.1543200 -0.7042149  0.2623680  0.51310353\n109 -0.09316092 -0.4622089  0.5081764  1.5929661 -0.8882205 -0.83173205\n110  0.15059277  0.3450190  0.2180047  0.9857810 -0.5514059 -0.01567253\n111  0.03752845 -0.0690933  0.0905426  0.4468587  0.1520703 -0.40110736\n112  0.51266011  0.4615773  0.7493145 -0.1302870 -0.3604254 -0.73438389\n113  0.05422728  0.1793657  1.0506790 -0.3665188 -0.2037344 -0.28219227\n          sand       reef       algae reefbuild.prop        lat        lon\n108  0.5632340 -0.5476392  0.48996939     -0.5448895  0.1279477 -1.6495102\n109 -0.1446279  1.3279620 -1.25644763      1.3688860 -2.0643427  0.3616065\n110 -0.3533419  0.7677130 -0.55752364      0.7208957 -2.0643427  0.3616065\n111 -0.6894669  0.3433665 -0.02640033      0.2496433 -2.0643427  0.3616065\n112  1.2197387  0.3346904 -0.68620497      0.5358472  0.4480025 -0.6829449\n113 -0.6141769  0.3489202 -0.32881738      0.3775669  0.4480025 -0.6829449\n      min_SST       prod bathymetry   distance logdistance   pop_area\n108 0.8225753 -1.0885104 -0.2312759 -0.9278167  -1.7357847  0.5991680\n109 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n110 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n111 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n112 0.3299904 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899\n113 0.3299904 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899\n    logpoparea        wave  irradiance complexity atoll.high.dummy\n108  1.4688450 -1.17725908 -0.07373652 -0.8592423        0.3269231\n109  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n110  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n111  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n112 -0.7616792 -0.03903164  0.69596839 -0.4908203       -0.6730769\n113 -0.7616792 -0.03903164  0.69596839 -0.4908203       -0.6730769\n    atoll.low.dummy Populated.Remote.dummy\n108     -0.04807692             -0.5192308\n109     -0.04807692             -0.5192308\n110     -0.04807692             -0.5192308\n111     -0.04807692             -0.5192308\n112     -0.04807692              0.4807692\n113     -0.04807692              0.4807692\n> colMeans(fd)\nError in base::colMeans(x, na.rm = na.rm, dims = dims, ...) : \n  'x' must be numeric\n> dim(fd)\n[1] 113  30\n> dim(remote_test)\n[1] 104  31\n> colMeans(fd[4:31])\nError in colMeans(fd[4:31]) : \n  error in evaluating the argument 'x' in selecting a method for function 'colMeans': Error in `[.data.frame`(fd, 4:31) : undefined columns selected\n> colMeans(fd[,4:31])\nError in colMeans(fd[, 4:31]) : \n  error in evaluating the argument 'x' in selecting a method for function 'colMeans': Error in `[.data.frame`(fd, , 4:31) : undefined columns selected\n> colMeans(remote_test[,4:31])\n         total.biomass                browser                cropper \n         -2.582903e-17          -6.327571e-17          -9.841220e-18 \n             excavator                scraper                  coral \n         -6.278365e-17          -6.291709e-17           4.154162e-17 \n                   CCA                   turf                  macro \n          5.584475e-17          -2.017617e-16           2.085004e-18 \n                  sand                   reef                  algae \n         -5.632847e-17          -8.355863e-17           1.118480e-16 \n        reefbuild.prop                    lat                    lon \n          9.634387e-17          -4.800514e-17          -2.753040e-16 \n               min_SST                   prod             bathymetry \n          6.361098e-16          -1.192956e-16          -4.536969e-17 \n              distance            logdistance               pop_area \n          7.339215e-17           1.829466e-16           2.321861e-17 \n            logpoparea                   wave             irradiance \n         -2.668805e-17           6.672013e-18          -1.109172e-15 \n            complexity       atoll.high.dummy        atoll.low.dummy \n          5.182153e-16          -5.124106e-17          -5.004010e-18 \nPopulated.Remote.dummy \n         -4.270089e-17 \n> tail(remote_test)\n              ID REGION  ISLAND total.biomass     browser    cropper\n108  Tinian.2014 MARIAN  Tinian   -1.14058300 -0.47289312 -1.1926010\n109 Tutuila.2010  SAMOA Tutuila   -0.60031112 -0.48206373 -0.5649670\n110 Tutuila.2012  SAMOA Tutuila   -0.26174762 -0.41786146 -0.5308813\n111 Tutuila.2015  SAMOA Tutuila   -0.48366398 -0.48950800 -0.6274323\n112    Wake.2011 MARIAN    Wake   -0.01772077 -0.08551279 -0.7869959\n113    Wake.2014 MARIAN    Wake   -0.47362615 -0.26828754 -1.1010807\n      excavator    scraper      coral        CCA       turf       macro\n108 -0.63096857 -0.9164664 -0.1543200 -0.7042149  0.2623680  0.51310353\n109 -0.09316092 -0.4622089  0.5081764  1.5929661 -0.8882205 -0.83173205\n110  0.15059277  0.3450190  0.2180047  0.9857810 -0.5514059 -0.01567253\n111  0.03752845 -0.0690933  0.0905426  0.4468587  0.1520703 -0.40110736\n112  0.51266011  0.4615773  0.7493145 -0.1302870 -0.3604254 -0.73438389\n113  0.05422728  0.1793657  1.0506790 -0.3665188 -0.2037344 -0.28219227\n          sand       reef       algae reefbuild.prop        lat        lon\n108  0.5632340 -0.5476392  0.48996939     -0.5448895  0.1279477 -1.6495102\n109 -0.1446279  1.3279620 -1.25644763      1.3688860 -2.0643427  0.3616065\n110 -0.3533419  0.7677130 -0.55752364      0.7208957 -2.0643427  0.3616065\n111 -0.6894669  0.3433665 -0.02640033      0.2496433 -2.0643427  0.3616065\n112  1.2197387  0.3346904 -0.68620497      0.5358472  0.4480025 -0.6829449\n113 -0.6141769  0.3489202 -0.32881738      0.3775669  0.4480025 -0.6829449\n      min_SST       prod bathymetry   distance logdistance   pop_area\n108 0.8225753 -1.0885104 -0.2312759 -0.9278167  -1.7357847  0.5991680\n109 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n110 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n111 0.9308068 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721\n112 0.3299904 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899\n113 0.3299904 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899\n    logpoparea        wave  irradiance complexity atoll.high.dummy\n108  1.4688450 -1.17725908 -0.07373652 -0.8592423        0.3269231\n109  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n110  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n111  1.5776810 -0.68791615 -0.56514829 -0.3453637        0.3269231\n112 -0.7616792 -0.03903164  0.69596839 -0.4908203       -0.6730769\n113 -0.7616792 -0.03903164  0.69596839 -0.4908203       -0.6730769\n    atoll.low.dummy Populated.Remote.dummy\n108     -0.04807692             -0.5192308\n109     -0.04807692             -0.5192308\n110     -0.04807692             -0.5192308\n111     -0.04807692             -0.5192308\n112     -0.04807692              0.4807692\n113     -0.04807692              0.4807692\n> remote_test<-scaler(df=fd, ID=c(\"ID\",  \"ISLAND\"))\n> tail(remote_test)\n              ID  ISLAND total.biomass     browser    cropper   excavator\n108  Tinian.2014  Tinian   -1.14058300 -0.47289312 -1.1926010 -0.63096857\n109 Tutuila.2010 Tutuila   -0.60031112 -0.48206373 -0.5649670 -0.09316092\n110 Tutuila.2012 Tutuila   -0.26174762 -0.41786146 -0.5308813  0.15059277\n111 Tutuila.2015 Tutuila   -0.48366398 -0.48950800 -0.6274323  0.03752845\n112    Wake.2011    Wake   -0.01772077 -0.08551279 -0.7869959  0.51266011\n113    Wake.2014    Wake   -0.47362615 -0.26828754 -1.1010807  0.05422728\n       scraper      coral        CCA       turf       macro       sand\n108 -0.9164664 -0.1543200 -0.7042149  0.2623680  0.51310353  0.5632340\n109 -0.4622089  0.5081764  1.5929661 -0.8882205 -0.83173205 -0.1446279\n110  0.3450190  0.2180047  0.9857810 -0.5514059 -0.01567253 -0.3533419\n111 -0.0690933  0.0905426  0.4468587  0.1520703 -0.40110736 -0.6894669\n112  0.4615773  0.7493145 -0.1302870 -0.3604254 -0.73438389  1.2197387\n113  0.1793657  1.0506790 -0.3665188 -0.2037344 -0.28219227 -0.6141769\n          reef       algae reefbuild.prop        lat        lon   min_SST\n108 -0.5476392  0.48996939     -0.5448895  0.1279477 -1.6495102 0.8225753\n109  1.3279620 -1.25644763      1.3688860 -2.0643427  0.3616065 0.9308068\n110  0.7677130 -0.55752364      0.7208957 -2.0643427  0.3616065 0.9308068\n111  0.3433665 -0.02640033      0.2496433 -2.0643427  0.3616065 0.9308068\n112  0.3346904 -0.68620497      0.5358472  0.4480025 -0.6829449 0.3299904\n113  0.3489202 -0.32881738      0.3775669  0.4480025 -0.6829449 0.3299904\n          prod bathymetry   distance logdistance   pop_area logpoparea\n108 -1.0885104 -0.2312759 -0.9278167  -1.7357847  0.5991680  1.4688450\n109 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n110 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n111 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n112 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899 -0.7616792\n113 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899 -0.7616792\n           wave  irradiance complexity HI.MARIAN.dummy HI.PRIAs.dummy\n108 -1.17725908 -0.07373652 -0.8592423       0.7403846     -0.1442308\n109 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n110 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n111 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n112 -0.03903164  0.69596839 -0.4908203       0.7403846     -0.1442308\n113 -0.03903164  0.69596839 -0.4908203       0.7403846     -0.1442308\n    MARIAN.SAMOA.dummy atoll.high.dummy atoll.low.dummy Populated.Remote.dummy\n108         -0.1442308        0.3269231               0             -0.5192308\n109          0.8557692        0.3269231               0             -0.5192308\n110          0.8557692        0.3269231               0             -0.5192308\n111          0.8557692        0.3269231               0             -0.5192308\n112         -0.1442308       -0.6730769               0              0.4807692\n113         -0.1442308       -0.6730769               0              0.4807692\n> haed(remote_test)\nError: could not find function \"haed\"\n> head(remote_test)\n             ID   ISLAND total.biomass    browser     cropper  excavator\n1  Agrihan.2011  Agrihan    0.43138094  0.2419370 -0.16701676 -0.2607994\n2  Aguijan.2011  Aguijan   -0.76147691 -0.5019359 -0.32611451 -0.7623381\n3  Aguijan.2014  Aguijan   -0.77263221 -0.4914022 -0.43146782 -0.5682532\n4 Alamagan.2011 Alamagan   -0.56717411 -0.3482144  0.15255041 -0.7571971\n5 Alamagan.2014 Alamagan   -0.05921504 -0.2977762 -0.03315825 -0.4663899\n6 Asuncion.2011 Asuncion    0.01983628 -0.1194562 -0.36946233  0.1496890\n     scraper      coral        CCA       turf      macro       sand        reef\n1  1.6264803  0.0816902 -0.6879694  0.9748830 -0.8530078 -0.3291088 -0.40471264\n2 -0.4972499  0.3529642 -0.6263415 -0.1994262  1.3556893 -0.3505439 -0.21230232\n3 -0.6714759 -0.1561567  0.0823802 -0.3094604  1.2265739 -0.1999487 -0.03358413\n4  1.0761921  1.2452115 -0.8310344 -0.1260701 -0.5151101  1.7127192  0.15378173\n5  0.9681366 -0.9389801 -0.6574000  1.2228675  0.2119651 -0.8668176 -0.95680133\n6  0.5477204 -0.1053425 -0.6112256  0.7854476 -0.8970056  1.1151195 -0.45929429\n       algae reefbuild.prop       lat       lon   min_SST       prod bathymetry\n1  0.5943414    -0.46125567 0.4083871 -1.647832 0.5182057 -1.0569768 0.83025580\n2  0.4032979    -0.26544455 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n3  0.2360586    -0.08729336 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n4 -0.3547723     0.26445882 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n5  1.3151795    -1.05219029 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n6  0.3856458    -0.44583532 0.4772662 -1.659961 0.3453667 -0.9852405 0.70181404\n    distance logdistance   pop_area logpoparea       wave  irradiance\n1 -0.4211679  0.19010783 -0.4513899 -0.7616792 -0.7472653 -0.07438221\n2 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n3 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n4 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n5 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n6 -0.2843351  0.33433978 -0.4513899 -0.7616792 -1.0057222  0.05322262\n  complexity HI.MARIAN.dummy HI.PRIAs.dummy MARIAN.SAMOA.dummy atoll.high.dummy\n1  0.3254809       0.7403846     -0.1442308         -0.1442308        0.3269231\n2 -0.5202807       0.7403846     -0.1442308         -0.1442308        0.3269231\n3 -0.5202807       0.7403846     -0.1442308         -0.1442308        0.3269231\n4  0.9432832       0.7403846     -0.1442308         -0.1442308        0.3269231\n5  0.9432832       0.7403846     -0.1442308         -0.1442308        0.3269231\n6  0.7964656       0.7403846     -0.1442308         -0.1442308        0.3269231\n  atoll.low.dummy Populated.Remote.dummy\n1               0              0.4807692\n2               0             -0.5192308\n3               0             -0.5192308\n4               0              0.4807692\n5               0              0.4807692\n6               0              0.4807692\n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE, ...){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else if (dim(cats)[2]>1){\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,counter]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[1],i.levels[j],\"dummy\",<ars+(j-2)]<-paste(i.levels[1],i.levels[j],\"dummy\",                         sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ #--------------------center categorical dummy variables--------------------\n+ \n+ if(dim(cats)[2]==2){\n+ cats[,2]<-cats[,2] - mean(cats[,2])} else if(dim(cats)[2]>2){\n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ ## center each scaled categorical\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }}\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> \n> \n> remote_test<-scaler(df=fd, ID=c(\"ID\",  \"ISLAND\"))\n> head(remote_test)\n             ID   ISLAND total.biomass    browser     cropper  excavator\n1  Agrihan.2011  Agrihan    0.43138094  0.2419370 -0.16701676 -0.2607994\n2  Aguijan.2011  Aguijan   -0.76147691 -0.5019359 -0.32611451 -0.7623381\n3  Aguijan.2014  Aguijan   -0.77263221 -0.4914022 -0.43146782 -0.5682532\n4 Alamagan.2011 Alamagan   -0.56717411 -0.3482144  0.15255041 -0.7571971\n5 Alamagan.2014 Alamagan   -0.05921504 -0.2977762 -0.03315825 -0.4663899\n6 Asuncion.2011 Asuncion    0.01983628 -0.1194562 -0.36946233  0.1496890\n     scraper      coral        CCA       turf      macro       sand        reef\n1  1.6264803  0.0816902 -0.6879694  0.9748830 -0.8530078 -0.3291088 -0.40471264\n2 -0.4972499  0.3529642 -0.6263415 -0.1994262  1.3556893 -0.3505439 -0.21230232\n3 -0.6714759 -0.1561567  0.0823802 -0.3094604  1.2265739 -0.1999487 -0.03358413\n4  1.0761921  1.2452115 -0.8310344 -0.1260701 -0.5151101  1.7127192  0.15378173\n5  0.9681366 -0.9389801 -0.6574000  1.2228675  0.2119651 -0.8668176 -0.95680133\n6  0.5477204 -0.1053425 -0.6112256  0.7854476 -0.8970056  1.1151195 -0.45929429\n       algae reefbuild.prop       lat       lon   min_SST       prod bathymetry\n1  0.5943414    -0.46125567 0.4083871 -1.647832 0.5182057 -1.0569768 0.83025580\n2  0.4032979    -0.26544455 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n3  0.2360586    -0.08729336 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n4 -0.3547723     0.26445882 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n5  1.3151795    -1.05219029 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n6  0.3856458    -0.44583532 0.4772662 -1.659961 0.3453667 -0.9852405 0.70181404\n    distance logdistance   pop_area logpoparea       wave  irradiance\n1 -0.4211679  0.19010783 -0.4513899 -0.7616792 -0.7472653 -0.07438221\n2 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n3 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n4 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n5 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n6 -0.2843351  0.33433978 -0.4513899 -0.7616792 -1.0057222  0.05322262\n  complexity HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy\n1  0.3254809       0.7403846     -0.1442308     -0.1442308        0.3269231\n2 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n3 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n4  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n5  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n6  0.7964656       0.7403846     -0.1442308     -0.1442308        0.3269231\n  atoll.low.dummy Populated.Remote.dummy\n1               0              0.4807692\n2               0             -0.5192308\n3               0             -0.5192308\n4               0              0.4807692\n5               0              0.4807692\n6               0              0.4807692\n> (remote_test)\n                          ID              ISLAND total.biomass      browser\n1               Agrihan.2011             Agrihan   0.431380939  0.241937020\n2               Aguijan.2011             Aguijan  -0.761476905 -0.501935935\n3               Aguijan.2014             Aguijan  -0.772632208 -0.491402176\n4              Alamagan.2011            Alamagan  -0.567174114 -0.348214371\n5              Alamagan.2014            Alamagan  -0.059215041 -0.297776231\n6              Asuncion.2011            Asuncion   0.019836276 -0.119456247\n7              Asuncion.2014            Asuncion  -0.382666514  0.050743293\n8                 Baker.2010               Baker  -0.738258191 -0.405977558\n9                 Baker.2012               Baker   0.345259034 -0.358928051\n10                Baker.2015               Baker   0.081748634 -0.396597225\n11  Farallon_de_Pajaros.2011 Farallon de Pajaros  -0.435500891  0.319079219\n12  Farallon_de_Pajaros.2014 Farallon de Pajaros  -0.635797019 -0.033204738\n19                 Guam.2011                Guam   0.049078576 -0.243957082\n20                 Guam.2014                Guam  -0.861356531 -0.263913366\n21               Guguan.2011              Guguan   0.062210924 -0.142323321\n22               Guguan.2014              Guguan   0.124203644 -0.066703895\n23               Hawaii.2010              Hawaii  -0.447439668 -0.280160494\n24               Hawaii.2013              Hawaii  -0.240276449 -0.431959074\n25               Hawaii.2015              Hawaii  -0.096084717 -0.330020030\n26              Howland.2010             Howland  -0.895935821 -0.414773171\n27              Howland.2012             Howland  -0.367167186 -0.311140473\n28              Howland.2015             Howland  -0.697860517 -0.479354120\n29               Jarvis.2010              Jarvis   0.282249114 -0.544815821\n30               Jarvis.2012              Jarvis   2.171962466 -0.334434010\n31               Jarvis.2015              Jarvis   0.285241539 -0.492215935\n32             Johnston.2010            Johnston  -0.026319927  0.026252421\n33             Johnston.2012            Johnston   0.536224614  0.005284363\n34             Johnston.2015            Johnston   0.208502973  0.102537370\n35                Kauai.2010               Kauai  -0.731183076 -0.467768156\n36                Kauai.2013               Kauai  -0.480057487 -0.408853867\n37                Kauai.2015               Kauai  -1.105345627 -0.557425513\n38              Kingman.2010             Kingman   0.501741765 -0.402434700\n39              Kingman.2012             Kingman   0.064169416 -0.533149527\n40              Kingman.2015             Kingman  -0.325790948 -0.513351413\n41                 Kure.2010                Kure   0.297579410  0.139293297\n42                 Kure.2012                Kure  -0.183109400  0.488426544\n43                 Kure.2015                Kure   1.355118484  0.814568016\n44                Lanai.2010               Lanai  -0.449309101 -0.378914281\n45                Lanai.2012               Lanai  -0.305683334 -0.330386052\n46                Lanai.2013               Lanai  -0.335850658 -0.349622976\n47                Lanai.2015               Lanai  -0.572210220 -0.380691518\n48               Laysan.2011              Laysan   0.475487613  0.064708040\n49               Laysan.2015              Laysan   1.278671879  1.102595376\n50            Lisianski.2010           Lisianski  -0.310741776 -0.478334318\n51            Lisianski.2011           Lisianski   0.593696803 -0.280612261\n52            Lisianski.2012           Lisianski   1.179558808  0.388533575\n53            Lisianski.2014           Lisianski  -0.513925942 -0.379095628\n54            Lisianski.2015           Lisianski   1.058945865  1.318407773\n57                 Maug.2011                Maug  -0.106019475  0.369177516\n58                 Maug.2014                Maug  -0.019710620  0.270494444\n59                 Maui.2010                Maui  -0.739548364 -0.314560203\n60                 Maui.2012                Maui  -0.475655179 -0.234855158\n61                 Maui.2013                Maui  -0.533722248 -0.308710838\n62                 Maui.2015                Maui  -0.615343275 -0.420277867\n63               Midway.2011              Midway   3.901569402  3.418246424\n64               Midway.2014              Midway   3.514530501  3.896714779\n65               Midway.2015              Midway   2.128093183  2.173349559\n66              Molokai.2010             Molokai  -0.291239475 -0.462346947\n67              Molokai.2012             Molokai  -0.260180609 -0.273515965\n68              Molokai.2013             Molokai   0.170491865 -0.263023235\n69              Molokai.2015             Molokai  -0.370010259 -0.370327661\n70               Necker.2011              Necker   5.130262484  6.938723688\n71                Nihoa.2011               Nihoa   0.493077729  0.548746915\n72               Niihau.2010              Niihau   0.229253616  0.180868001\n73               Niihau.2013              Niihau   0.471926772  0.100975118\n74               Niihau.2015              Niihau   0.742649578  0.501416380\n75                 Oahu.2010                Oahu  -1.162514923 -0.523334782\n76                 Oahu.2012                Oahu  -1.113113149 -0.555312377\n77                 Oahu.2013                Oahu  -0.950442024 -0.433267800\n78                 Oahu.2015                Oahu  -0.988936874 -0.427093989\n79         Ofu__Olosega.2010       Ofu & Olosega  -0.188109326 -0.472099290\n80         Ofu__Olosega.2012       Ofu & Olosega   0.813417928 -0.273477191\n81         Ofu__Olosega.2015       Ofu & Olosega   0.697971826 -0.501226488\n82                Pagan.2011               Pagan  -0.046538596  0.073387082\n83                Pagan.2014               Pagan   0.074327213  0.077702427\n84              Palmyra.2010             Palmyra   0.394330541 -0.082768993\n85              Palmyra.2012             Palmyra   0.718416115 -0.355529108\n86              Palmyra.2015             Palmyra  -0.267967533 -0.369400953\n87        Pearl__Hermes.2010      Pearl & Hermes  -0.308149275  0.102898469\n88        Pearl__Hermes.2011      Pearl & Hermes   0.909051069  1.819161458\n89        Pearl__Hermes.2012      Pearl & Hermes  -0.860772861 -0.249573403\n90        Pearl__Hermes.2015      Pearl & Hermes   1.484478082  1.880580934\n91                 Rose.2010                Rose  -0.483243856 -0.221492701\n92                 Rose.2012                Rose   0.204904641 -0.402172361\n93                 Rose.2015                Rose  -0.687663644 -0.511509238\n94                 Rota.2011                Rota  -0.487968361 -0.380801510\n95                 Rota.2014                Rota  -0.335176024 -0.393038173\n96               Saipan.2011              Saipan  -1.065144714 -0.523263770\n97               Saipan.2014              Saipan  -0.820095848 -0.309202580\n98              Sarigan.2011             Sarigan  -0.388443167 -0.276958586\n99              Sarigan.2014             Sarigan   0.658519107  0.147496064\n101              Swains.2010              Swains  -1.244127279 -0.555954658\n102              Swains.2012              Swains  -0.916759526 -0.409529796\n103              Swains.2015              Swains  -1.119664951 -0.477740977\n104                 Tau.2010                 Tau  -0.409768320 -0.504740976\n105                 Tau.2012                 Tau   0.370678564 -0.200185878\n106                 Tau.2015                 Tau  -0.005884091 -0.081094788\n107              Tinian.2011              Tinian  -0.972883237 -0.457887158\n108              Tinian.2014              Tinian  -1.140583004 -0.472893123\n109             Tutuila.2010             Tutuila  -0.600311119 -0.482063730\n110             Tutuila.2012             Tutuila  -0.261747620 -0.417861456\n111             Tutuila.2015             Tutuila  -0.483663982 -0.489507998\n112                Wake.2011                Wake  -0.017720766 -0.085512793\n113                Wake.2014                Wake  -0.473626151 -0.268287535\n         cropper   excavator     scraper        coral         CCA        turf\n1   -0.167016759 -0.26079944  1.62648028  0.081690205 -0.68796943  0.97488303\n2   -0.326114511 -0.76233806 -0.49724991  0.352964219 -0.62634146 -0.19942619\n3   -0.431467825 -0.56825316 -0.67147588 -0.156156680  0.08238020 -0.30946037\n4    0.152550410 -0.75719705  1.07619207  1.245211452 -0.83103436 -0.12607007\n5   -0.033158245 -0.46638986  0.96813657 -0.938980061 -0.65740000  1.22286746\n6   -0.369462331  0.14968897  0.54772044 -0.105342545 -0.61122560  0.78544764\n7   -0.251982245 -0.86507362 -0.20264873 -0.173298798 -0.59259281  0.72812119\n8   -0.572527901 -0.85358659 -0.11625727  1.495812889  2.36779444 -1.49066855\n9    1.015521284 -0.64417542  1.34447473  1.554014460  0.89968448 -0.77283817\n10   0.821572394 -0.82215150  0.92878738  0.850441836  1.68477413 -0.96744253\n11  -0.830535213 -0.86680808 -0.12185265  0.158829735 -0.83274625  1.12717848\n12  -0.455691660 -0.86680808 -0.70244232 -1.304678575 -0.93619320  1.68419595\n19  -0.777562297  0.36912108  1.26254769  0.223285475 -0.38574336 -0.41548301\n20  -0.969121850 -0.55323505 -0.72728425 -0.648715775 -0.46238276  0.51118147\n21  -0.291318328 -0.86680808  2.04957688  0.336679207 -0.47765175  0.87850123\n22   1.002630433 -0.77540547  0.01982135 -0.931837512 -0.13111669  1.08870727\n23   0.156388395 -0.64207570 -0.65402160  1.031624260 -0.36543273  0.30443973\n24   0.895489739 -0.69185738 -0.55883787  0.460668791 -0.19876379  0.40640373\n25   0.890268138 -0.54891479 -0.40509947 -0.189869512 -0.47007053  0.96778378\n26  -0.827986255 -0.86680808 -0.31101768  1.575911475  1.97768485 -1.84382587\n27  -0.014337779 -0.81423220  0.23134927  1.139631590  1.19277305 -0.99061022\n28  -0.087593296 -0.85033176 -0.53958347  0.560890317  1.42740732 -0.56481747\n29   0.579879162 -0.83613163  2.44121672  0.542990656  1.52874035 -0.59883915\n30   2.909802002 -0.72031787  5.71996659  0.230255226  0.86312344 -0.13394906\n31   0.508231421 -0.79563461  2.38957401 -0.250081201  1.17798857  0.04866013\n32   2.782888530 -0.62321079 -0.76040794  0.232755118  0.98937518 -0.35775315\n33   0.794108670  0.06784884  0.64408235 -1.110401239  0.08115743  1.56519602\n34   1.406852623  1.07321476  0.22708524 -1.218902055  0.87750518  0.60944729\n35  -0.082180209 -0.85405920 -0.70032444 -0.972978595 -0.73333446  1.32255028\n36  -0.079567453 -0.84695268  0.14767425 -1.259782552 -0.42361664  0.59833131\n37  -0.546398349 -0.86550362 -1.25395431 -1.457529126 -1.06947591  1.15929216\n38  -0.305201315  1.50861474  1.11033343  1.063271247  1.12741005 -1.83467488\n39  -0.773460036  1.27087675  0.71594782  1.309368349  0.69099957 -1.42785352\n40  -1.113529834  1.18863982 -0.23639859  0.290461105 -0.23908148 -0.12158915\n41  -0.634243623  1.22844418 -0.01421304 -0.375909108 -0.37310430  0.28676187\n42  -0.724452159  1.68115838 -0.53335206 -0.441144389 -0.45686454 -0.18067963\n43  -0.275741453  2.36507677  0.54559015 -1.518955048 -0.71364775  1.24813457\n44  -0.198194188 -0.41864810 -0.20703049  1.084146970 -0.70050289 -0.06718141\n45  -0.162920661 -0.19551412 -0.10913742  0.685646841 -0.83998286  0.29553003\n46   0.127535373 -0.40122417 -0.34616272  0.042016591 -0.72609784 -0.52493471\n47   0.100327758 -0.67778977 -0.78829941 -0.997548964 -0.94414125  1.83050065\n48   0.817718195  1.00856953 -1.06300652 -0.864493478  0.06744485 -0.62122388\n49   1.592013332  0.28460764 -0.38571342 -1.450386576 -0.80413326  0.51538844\n50  -0.480485255  0.84838194 -0.75412371  0.868493006 -0.21195974 -1.01682295\n51   0.387127158  1.74987006 -0.19001991  2.580868133 -0.27222518 -1.44240488\n52   0.858582085  1.99628650 -0.42611168  2.435364204 -0.30593890 -1.53695277\n53  -1.118769948  0.71809279 -0.62219276  0.541636354 -0.06982644 -0.56709948\n54  -0.552317527  1.55014421 -0.20062847 -0.858065184 -0.72989322  0.24140916\n57  -0.796547540 -0.75577813  0.86422027  1.339016930 -0.66392148  0.37264287\n58  -0.482278677 -0.51274545  0.60911557  0.528787805 -0.58546735  0.60962512\n59  -0.292022640 -0.74394705 -0.90570402  0.589358477 -0.62808511  0.62152723\n60  -0.229297000 -0.48134068 -0.49817175  0.494017708 -0.70933585  0.35161587\n61   0.197374047 -0.83790375 -0.72406018  0.368392125 -0.71239003  0.15359140\n62  -0.158692687 -0.52653133 -0.68300475  0.221684167 -0.74625514  0.54989299\n63   2.398335829  3.46083736 -0.79176072 -1.713640529 -0.49826428 -1.03306609\n64   0.562931774  3.00508422  0.04910045 -1.692825100 -0.50868700  1.65741514\n65   0.370820200  2.18000447 -0.16004607 -1.734088626 -0.87554345  1.77711370\n66   0.554634801 -0.60424261 -0.29193481  2.013749735 -0.83959380 -0.45046713\n67  -0.229193698 -0.22099020  0.08064210  0.278518450 -0.78596628  0.38707345\n68   1.184448484 -0.55303920  0.05528051  0.001665827 -0.69557605  0.40240097\n69   0.432871161 -0.45607536 -0.82668206  0.275253285 -0.85491821  0.78053552\n70   4.561578548 -0.85529107 -1.13279843 -1.410388301 -0.82614325 -1.45218570\n71   3.834893076 -0.15842554 -1.09531158 -1.604665637 -0.64028112 -0.93054218\n72   0.631686581 -0.77885876  0.45592409 -1.525383342 -0.80229909  1.63651447\n73   0.840261479 -0.58064037  1.00090642 -1.433244459 -0.68534919  1.31153522\n74   1.294882465 -0.81270267  0.80356165 -1.606224011 -0.72934718  1.78811427\n75  -0.808966943 -0.80114741 -1.24301063 -0.529611270 -0.49990473 -0.03978781\n76  -0.702481657 -0.83722672 -1.08954163 -0.582668898 -0.86177847  0.86400467\n77  -0.503898671 -0.79058723 -1.08652079 -0.429716311 -0.65342597  0.54024802\n78  -0.659014149 -0.85802053 -0.92206207 -1.290723133 -1.01125290  1.40907915\n79  -0.222742350  0.39105775 -0.04632675  0.668972568  2.30643723 -1.35083781\n80   0.269602585  1.76080436  0.82776196  0.489529758  1.17921134 -0.85555593\n81  -0.142592359  2.38040942  0.65448970 -0.018912366  1.46108946 -0.30955360\n82  -0.087636963 -0.53611847  0.37063609 -0.248873770 -0.53614126  0.90324437\n83  -0.004417336 -0.70685732  0.94728468 -0.519910500 -0.65922217  0.99942924\n84   0.376458531  0.43352579  0.41367093  0.912368664  0.95101055 -1.46675504\n85  -0.473898233  1.77075631  1.75903964  0.666391878  0.66896560 -1.12095645\n86  -0.455893402  0.17721054  0.06091819  0.315459343  0.15661389 -0.44953351\n87  -0.966097847  0.37890612 -0.64819764 -1.201825868 -0.42140400  0.50821584\n88  -0.479740938  0.63511322 -0.75767790 -1.334677281 -0.48804536 -1.36293575\n89  -0.750548229  0.37819575 -1.07018924 -0.670879379  0.25518482 -0.29854428\n90   0.262485446  1.23488388 -0.58261053 -1.613236696  0.02539879  0.66568698\n91  -0.577435829  0.04627168 -0.75335765 -0.013838143  2.82804301 -1.68283142\n92  -0.192797340  1.47709816 -0.19265899 -0.074874472  3.09811559 -1.95817991\n93  -0.772572602  0.23339616 -0.87500801 -0.040814716  3.60366408 -2.01337166\n94  -0.497130279 -0.33188219 -0.01797199 -0.211800539 -0.62554956 -0.37330736\n95  -0.991505384 -0.60320690  1.74458444 -1.019301272 -0.68830291  0.86034745\n96  -0.981422300 -0.62711508 -0.83437133  0.167858649 -0.58082749  0.44551726\n97  -0.468539168 -0.68643641 -1.04541727  0.119400793 -0.72924259  0.57097844\n98  -0.245317749 -0.79901346  0.40350892 -0.207583034 -0.80168771  0.79577183\n99   1.206954068 -0.41504692  0.84540869 -1.245538268 -0.68796943  1.12783053\n101 -1.197952838 -0.80889131 -0.88707369  2.135173069  1.12051804 -1.83608272\n102 -0.892169972 -0.75553009 -0.46040780  1.524063062  0.65764129 -1.76441231\n103 -1.088249062 -0.72813885 -0.84852773  1.571625946  0.62712744 -1.65146982\n104 -0.670483440  0.64346359 -0.51329998  0.570478648  1.24401853 -0.67732772\n105 -0.097541034  1.11659612  0.36449915 -0.022019608  1.10217638 -0.14612074\n106 -0.525601380  0.44740976  0.18856286  0.133491039  0.38105370  0.40972561\n107 -0.877729823 -0.49857375 -0.95131287  0.399737712 -0.61442811  0.02518326\n108 -1.192600999 -0.63096857 -0.91646643 -0.154320025 -0.70421490  0.26236805\n109 -0.564966990 -0.09316092 -0.46220889  0.508176404  1.59296607 -0.88822045\n110 -0.530881259  0.15059277  0.34501898  0.218004672  0.98578096 -0.55140589\n111 -0.627432324  0.03752845 -0.06909330  0.090542604  0.44685866  0.15207033\n112 -0.786995879  0.51266011  0.46157725  0.749314472 -0.13028695 -0.36042541\n113 -1.101080705  0.05422728  0.17936571  1.050679026 -0.36651877 -0.20373441\n          macro         sand         reef       algae reefbuild.prop\n1   -0.85300783 -0.329108785 -0.404712639  0.59434138    -0.46125567\n2    1.35568932 -0.350543857 -0.212302323  0.40329791    -0.26544455\n3    1.22657393 -0.199948736 -0.033584126  0.23605859    -0.08729336\n4   -0.51511013  1.712719227  0.153781726 -0.35477232     0.26445882\n5    0.21196513 -0.866817642 -0.956801335  1.31517950    -1.05219029\n6   -0.89700561  1.115119540 -0.459294287  0.38564584    -0.44583532\n7   -1.01142599  1.672413964 -0.485183871  0.27756324    -0.43528391\n8   -1.22465605 -0.915890609  2.388931653 -2.03257165     2.23836300\n9   -0.53295343 -1.474641955  1.460195273 -1.00847637     1.27721794\n10  -0.83855861 -1.090471407  1.579927231 -1.33858155     1.51912972\n11  -1.19456838  0.416721797 -0.456278284  0.59462621    -0.50055037\n12  -1.26782533  2.123100093 -1.344344378  1.11823586    -1.38276525\n19   1.86716484 -0.744953816 -0.127439517  0.41485350    -0.20924122\n20   0.64414096 -0.270633302 -0.666399559  0.79662898    -0.71542001\n21  -0.92077051 -0.692772186 -0.124064216  0.46799634    -0.22313925\n22  -0.96564040  0.655255675 -0.608172737  0.65794115    -0.63614574\n23  -1.23992707  0.523402203  0.338950761 -0.24700516     0.33637210\n24  -0.76900430  0.005084322  0.128058116  0.06406288     0.08060332\n25  -1.34342651  1.207950763 -0.414241074  0.36932921    -0.40588450\n26  -1.32276805 -1.031702811  2.178373844 -2.42878411     2.51183737\n27  -0.61805835 -1.075117021  1.419847871 -1.26373156     1.41079810\n28  -1.12722193 -1.440834547  1.249096726 -1.06484586     1.22099434\n29  -0.48025758 -1.395160800  1.305419309 -0.81132840     1.10568494\n30  -0.08991457 -1.388954011  0.694260144 -0.17369811     0.50885412\n31  -0.32586300 -1.513381246  0.631204328 -0.09621598     0.44269375\n32  -0.91619195  0.885545295  0.778334564 -0.76432556     0.83037693\n33  -1.00776315 -1.467732481 -0.569258291  1.11498059    -0.70812369\n34  -0.71358013  0.190871394 -0.108604378  0.29142316    -0.15716803\n35   0.11233567 -0.495642806 -1.025582218  1.37043765    -1.11858125\n36   1.03950707  0.423474237 -0.983529756  1.05933103    -1.03460680\n37   1.13500274  0.408294333 -1.517297472  1.66186540    -1.59788273\n38  -0.04876303 -0.970745264  1.334244824 -1.85352670     1.78679178\n39   0.00813843 -0.777693436  1.186413433 -1.42204501     1.41515415\n40  -1.11950629 -1.067502441  0.006252093 -0.61886946     0.28237889\n41   1.13164513 -0.531551132 -0.455023840  0.78918265    -0.54888112\n42   2.11939305  0.078523995 -0.546438091  0.76137725    -0.61199662\n43   0.73758377 -0.144987013 -1.318721698  1.57397320    -1.40261511\n44  -0.37958477  1.385696975  0.148977473 -0.23575163     0.21099277\n45  -0.12043830  0.518495364 -0.165725336  0.24155802    -0.18126030\n46   2.16592787  1.080492861 -0.451918061  0.43832902    -0.45487400\n47  -1.06728442  0.300202944 -1.177396600  1.35342888    -1.24993417\n48   2.77556605 -0.288672660 -0.440401373  0.61308823    -0.49324988\n49   2.97741512 -1.313839657 -1.339540125  1.83764980    -1.44410054\n50   1.56983509  0.843800558  0.348010795 -0.31768553     0.37216930\n51  -0.58470424  0.327683806  1.268368330 -1.70001128     1.64428666\n52   0.96991297  0.260159403  1.164733738 -1.10359992     1.20643264\n53   0.87842898  0.617846807  0.257873866 -0.17588766     0.25653748\n54   0.89063848  2.514375217 -0.958917494  0.63680517    -0.93593697\n57  -1.15134677 -0.237322707  0.315791800 -0.13954493     0.27776058\n58  -0.92856239 -0.166771841 -0.086984121  0.19607060    -0.11060535\n59  -0.59866587 -0.235780924 -0.080940330  0.35454818    -0.15833605\n60  -0.35635460  0.853996079 -0.187586031  0.19272532    -0.18097010\n61   0.06932338  1.146770513 -0.260001688  0.18416034    -0.23141046\n62  -0.24863797  0.616538195 -0.364410298  0.43856330    -0.38770082\n63  -0.24432104 -1.163349224 -1.286807734 -1.14004728    -0.85406962\n64  -0.41350972  0.238349196 -1.281965352  1.47112227    -1.35877452\n65   0.25079131 -0.473291705 -1.545322279  1.88582775    -1.63662477\n66  -0.68726397  1.756688606  0.578958081 -0.75517012     0.71680381\n67   0.21091860  0.224041699 -0.358557498  0.48020359    -0.39516424\n68   0.05346372  1.084965937 -0.454548961  0.42554047    -0.45335769\n69  -0.75470465  0.777582937 -0.405539345  0.44397452    -0.42054987\n70   0.27789639 -0.148651127 -1.331533038 -1.32646942    -0.85574168\n71  -0.88872060 -0.359337733 -1.318721698 -1.32402797    -0.83424167\n72  -0.67993828  1.318826879 -1.380376273  1.33186274    -1.43937113\n73  -0.11873769  1.017060847 -1.252148483  1.25675908    -1.30782964\n74  -0.44568252 -0.111702501 -1.377918153  1.58732434    -1.45891368\n75   0.51234212  3.013808837 -0.624209497  0.18793907    -0.52547418\n76   0.32028077  0.463779501 -0.890914442  1.00499908    -0.94469804\n77   0.40380678  0.713331896 -0.668746356  0.71885533    -0.69976864\n78  -0.43762682  1.662549039 -1.385673269  1.21245079    -1.43372225\n79  -0.65234617 -0.637347415  1.885292438 -1.63864235     1.82023954\n80  -0.28801358 -0.020407107  1.046572002 -0.98222497     1.08226093\n81  -0.76802019 -0.667578403  0.946161552 -0.65035798     0.85741665\n82  -0.82021662  0.132526069 -0.490579123  0.53738390    -0.51206790\n83  -0.61054424  0.731578059 -0.723097547  0.72659172    -0.74653902\n84  -0.30449639 -0.174299932  1.134149523 -1.59981010     1.51550895\n85   0.07732854 -0.215108113  0.811583604 -1.08487358     1.02597217\n86  -0.63048984 -0.422726920  0.279376536 -0.72900961     0.52239510\n87   1.53132286 -0.075368830 -0.949594956  1.18789857    -1.02610574\n88   0.07827119 -1.328496116 -1.067699499 -1.32606252    -0.43447504\n89   1.60332398 -0.027211892 -0.208939346  0.41437163    -0.26639476\n90   0.78410194  0.415622563 -0.887620097  1.01309075    -0.94333381\n91   0.45690142 -1.360640397  1.844125249 -1.47721787     1.70019258\n92   0.89435365 -1.485320233  1.986764236 -1.55775612     1.79821004\n93   0.17858089 -1.359902815  2.336902742 -1.93092595     2.15176166\n94   2.58819395 -0.298705356 -0.528345886  0.77736293    -0.60178846\n95   0.18790688  1.073164632 -1.022059099  0.94252544    -1.04980770\n96   0.10514381 -0.016014867 -0.286253937  0.49155529    -0.34494616\n97  -0.18569272  0.341490616 -0.410601910  0.48758691    -0.43664610\n98  -0.23856513  0.569515387 -0.641322080  0.68854066    -0.67031975\n99  -0.58873337  2.205176266 -1.148651155  0.86448782    -1.15652705\n101  1.01351830 -1.553228495  1.930554481 -1.38289405     1.66922778\n102  2.42644791 -1.796586791  1.284910245 -0.68348027     1.03102309\n103  1.97104772 -1.652770282  1.291588884 -0.77307409     1.07972227\n104 -0.63964695 -0.410024655  1.134383063 -0.96052319     1.11074089\n105 -0.72554073 -0.747367497  0.709393540 -0.46829974     0.64749999\n106 -0.93141479 -0.627628722  0.324349076 -0.00478952     0.22976670\n107  0.77342735  0.006288587 -0.178283639  0.36882696    -0.23064378\n108  0.51310353  0.563234048 -0.547639154  0.48996939    -0.54488950\n109 -0.83173205 -0.144627913  1.327962012 -1.25644763     1.36888599\n110 -0.01567253 -0.353341908  0.767713041 -0.55752364     0.72089568\n111 -0.40110736 -0.689466941  0.343366543 -0.02640033     0.24964328\n112 -0.73438389  1.219738744  0.334690433 -0.68620497     0.53584716\n113 -0.28219227 -0.614176922  0.348920172 -0.32881738     0.37756687\n            lat         lon    min_SST        prod  bathymetry    distance\n1    0.40838708 -1.64783250  0.5182057 -1.05697679  0.83025580 -0.42116789\n2    0.11531114 -1.65296227  0.8297201 -1.10141207  0.04935654 -0.90176742\n3    0.11531114 -1.65296227  0.8297201 -1.10141207  0.04935654 -0.90176742\n4    0.32076622 -1.64031568  0.5947648 -0.99644382  0.56879310 -0.59309842\n5    0.32076622 -1.64031568  0.5947648 -0.99644382  0.56879310 -0.59309842\n6    0.47726616 -1.65996087  0.3453667 -0.98524047  0.70181404 -0.28433512\n7    0.47726616 -1.65996087  0.3453667 -0.98524047  0.70181404 -0.28433512\n8   -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621  0.47675260\n9   -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621  0.47675260\n10  -0.98072420  0.09474608  0.8069730  2.11675584  1.16699621  0.47675260\n11   0.54103893 -1.68336318  0.1643661 -0.93575230  0.79212896 -0.15193164\n12   0.54103893 -1.68336318  0.1643661 -0.93575230  0.79212896 -0.15193164\n19   0.01175670 -1.68863777  0.8764491 -1.23926680  0.10649657 -0.93085706\n20   0.01175670 -1.68863777  0.8764491 -1.23926680  0.10649657 -0.93085706\n21   0.29903281 -1.63973631  0.6660781 -1.03877830  0.32879444 -0.63566532\n22   0.29903281 -1.63973631  0.6660781 -1.03877830  0.32879444 -0.63566532\n23   0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123 -0.85894932\n24   0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123 -0.85894932\n25   0.47449918  1.05918419 -0.2713474 -0.05064511 -0.13689123 -0.85894932\n26  -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153  0.54889093\n27  -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153  0.54889093\n28  -0.93498466  0.08803209  0.8148121  2.16342359  0.95560153  0.54889093\n29  -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325  1.61772005\n30  -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325  1.61772005\n31  -1.02330349  0.85334463  0.3416897  2.69246540  0.47655325  1.61772005\n32   0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973  0.80674664\n33   0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973  0.80674664\n34   0.25711815  0.41537634  0.1086814 -0.32209616  0.97000973  0.80674664\n35   0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110 -0.69956097\n36   0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110 -0.69956097\n37   0.65210971  0.87392962 -0.5141142  0.19596549 -0.83721110 -0.69956097\n38  -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410  1.26737692\n39  -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410  1.26737692\n40  -0.51652898  0.74224562  0.8243460  0.86357933  1.14242410  1.26737692\n41   1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729  1.97859976\n42   1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729  1.97859976\n43   1.12985068  0.00898974 -2.3523308  0.47002614 -0.95828729  1.97859976\n44   0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037 -0.80050597\n45   0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037 -0.80050597\n46   0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037 -0.80050597\n47   0.56199819  0.99552264 -0.2331549  0.20524090 -0.90984037 -0.80050597\n48   0.93220954  0.31300697 -1.3367801  0.17020187 -1.08523433  1.03511496\n49   0.93220954  0.31300697 -1.3367801  0.17020187 -1.08523433  1.03511496\n50   0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576  1.32737584\n51   0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576  1.32737584\n52   0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576  1.32737584\n53   0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576  1.32737584\n54   0.95036294  0.21153442 -1.4353370  0.59287590 -1.08488576  1.32737584\n57   0.50214339 -1.66825502  0.3238290 -0.92880436  0.15719914 -0.23348127\n58   0.50214339 -1.66825502  0.3238290 -0.92880436  0.15719914 -0.23348127\n59   0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573 -0.75100538\n60   0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573 -0.75100538\n61   0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573 -0.75100538\n62   0.56232649  1.01732036 -0.3514297  0.23173825 -0.94142573 -0.75100538\n63   1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836  1.84962106\n64   1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836  1.84962106\n65   1.11622330  0.05376017 -2.2125541  0.40810219 -0.96070836  1.84962106\n66   0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737 -0.83738527\n67   0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737 -0.83738527\n68   0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737 -0.83738527\n69   0.58426923  0.98830933 -0.3402174  0.39518773 -0.94152737 -0.83738527\n70   0.76757862  0.63665606 -0.8089768  1.00080294 -1.05258279  0.03727982\n71   0.72922851  0.76435120 -0.7198134  0.11565890 -1.07331552 -0.34164376\n72   0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886 -0.62719059\n73   0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886 -0.62719059\n74   0.64302447  0.84602303 -0.4671944 -0.10784864 -0.98522886 -0.62719059\n75   0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496 -0.91425542\n76   0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496 -0.91425542\n77   0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496 -0.91425542\n78   0.60959464  0.94629958 -0.3828219  0.27167784 -0.80921496 -0.91425542\n79  -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437 -0.80184118\n80  -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437 -0.80184118\n81  -2.05519723  0.40880332  0.9601330 -0.97088307 -0.49817437 -0.80184118\n82   0.35883072 -1.64349170  0.5591480 -1.04604635  0.44930264 -0.51855784\n83   0.35883072 -1.64349170  0.5591480 -1.04604635  0.44930264 -0.51855784\n84  -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173  1.31555936\n85  -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173  1.31555936\n86  -0.55587110  0.75674426  0.8187744  1.02383017  0.97353173  1.31555936\n87   1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281  1.63844020\n88   1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281  1.63844020\n89   1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281  1.63844020\n90   1.08943115  0.12601504 -2.1157490  0.75504586 -0.87520281  1.63844020\n91  -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695 -0.58673369\n92  -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695 -0.58673369\n93  -2.08316060  0.47751908  0.8851464 -0.65341715  2.77961695 -0.58673369\n94   0.06253646 -1.67024792  0.8652360 -1.43480942 -0.52416411 -0.83552609\n95   0.06253646 -1.67024792  0.8652360 -1.43480942 -0.52416411 -0.83552609\n96   0.14135034 -1.64406494  0.7953639 -0.89661693 -0.26229778 -0.94110175\n97   0.14135034 -1.64406494  0.7953639 -0.89661693 -0.26229778 -0.94110175\n98   0.25384052 -1.64269098  0.6011139 -1.04062722  0.96847397 -0.72468650\n99   0.25384052 -1.64269098  0.6011139 -1.04062722  0.96847397 -0.72468650\n101 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021 -0.53355138\n102 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021 -0.53355138\n103 -1.82222535  0.34297781  1.3186544 -0.78374271  1.96845021 -0.53355138\n104 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352 -0.77615865\n105 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352 -0.77615865\n106 -2.06033851  0.41726248  1.0096300 -1.02543886  0.13402352 -0.77615865\n107  0.12794772 -1.64951022  0.8225753 -1.08851043 -0.23127589 -0.92781671\n108  0.12794772 -1.64951022  0.8225753 -1.08851043 -0.23127589 -0.92781671\n109 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544 -0.93900570\n110 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544 -0.93900570\n111 -2.06434268  0.36160651  0.9308068 -0.47798276 -0.44272544 -0.93900570\n112  0.44800247 -0.68294489  0.3299904 -0.98074739  1.67309995  0.96004644\n113  0.44800247 -0.68294489  0.3299904 -0.98074739  1.67309995  0.96004644\n    logdistance    pop_area logpoparea        wave   irradiance  complexity\n1    0.19010783 -0.45138989 -0.7616792 -0.74726535 -0.074382214  0.32548086\n2   -1.28581453 -0.35747905  0.3830905 -1.14244773  0.236437648 -0.52028066\n3   -1.28581453 -0.35747905  0.3830905 -1.14244773  0.236437648 -0.52028066\n4   -0.05592137 -0.45138989 -0.7616792 -0.91739970  0.190997092  0.94328324\n5   -0.05592137 -0.45138989 -0.7616792 -0.91739970  0.190997092  0.94328324\n6    0.33433978 -0.45138989 -0.7616792 -1.00572224  0.053222616  0.79646564\n7    0.33433978 -0.45138989 -0.7616792 -1.00572224  0.053222616  0.79646564\n8    0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457  0.08692826\n9    0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457  0.08692826\n10   0.81302580 -0.45138989 -0.7616792 -0.85774264  2.185377457  0.08692826\n11   0.44814230 -0.45138989 -0.7616792 -0.84108382  0.085507203  1.07683887\n12   0.44814230 -0.45138989 -0.7616792 -0.84108382  0.085507203  1.07683887\n19  -1.81754879  4.66741026  2.2025149 -1.46352630 -0.142220203 -0.90579642\n20  -1.81754879  4.66741026  2.2025149 -1.46352630 -0.142220203 -0.90579642\n21  -0.13523811 -0.45138989 -0.7616792 -0.93609954  0.271910338  0.81896451\n22  -0.13523811 -0.45138989 -0.7616792 -0.93609954  0.271910338  0.81896451\n23  -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854  0.91865054\n24  -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854  0.91865054\n25  -0.90207796  2.27054389  1.9093851 -0.21650911 -0.616601854  0.91865054\n26   0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375 -0.40167650\n27   0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375 -0.40167650\n28   0.84402788 -0.45138989 -0.7616792 -0.78498429  1.950426375 -0.40167650\n29   1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460 -0.90005070\n30   1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460 -0.90005070\n31   1.18252090 -0.45138989 -0.7616792 -0.39632405  2.905404460 -0.90005070\n32   0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284 -0.78913919\n33   0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284 -0.78913919\n34   0.94381864 -0.45138989 -0.7616792  0.64522293  1.034472284 -0.78913919\n35  -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503 -1.49738374\n36  -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503 -1.49738374\n37  -0.27692993  0.21191298  1.2571531  0.73349987  0.007378503 -1.49738374\n38   1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991 -1.14294413\n39   1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991 -1.14294413\n40   1.09025138 -0.45138989 -0.7616792  0.22184255 -1.588488991 -1.14294413\n41   1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124  0.58893219\n42   1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124  0.58893219\n43   1.26525017 -0.45138989 -0.7616792  1.95355052 -1.502854124  0.58893219\n44  -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304 -0.20598591\n45  -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304 -0.20598591\n46  -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304 -0.20598591\n47  -0.59718416 -0.38145137  0.2593928  0.02069383  0.792499304 -0.20598591\n48   1.02066533 -0.45138989 -0.7616792  1.58306560 -0.617772170 -0.66028633\n49   1.02066533 -0.45138989 -0.7616792  1.58306560 -0.617772170 -0.66028633\n50   1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601  1.97707616\n51   1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601  1.97707616\n52   1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601  1.97707616\n53   1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601  1.97707616\n54   1.10704368 -0.45138989 -0.7616792  1.55495883 -0.674996601  1.97707616\n57   0.38051300 -0.45138989 -0.7616792 -1.00572224  0.197332942  0.12368988\n58   0.38051300 -0.45138989 -0.7616792 -1.00572224  0.197332942  0.12368988\n59  -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300  0.25860832\n60  -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300  0.25860832\n61  -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300  0.25860832\n62  -0.41994018  0.35044245  1.3443429  0.15391880  0.293460300  0.25860832\n63   1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853  0.80816097\n64   1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853  0.80816097\n65   1.23691447 -0.45138989 -0.7616792  1.98697078 -1.461529853  0.80816097\n66  -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507 -0.35717472\n67  -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507 -0.35717472\n68  -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507 -0.35717472\n69  -0.77181508 -0.42572784 -0.1252697  0.02069383  0.561664507 -0.35717472\n70   0.58170333 -0.45138989 -0.7616792  1.23465563  0.209278239 -1.10917569\n71   0.27789502 -0.45138989 -0.7616792  1.00343892  0.262103895  2.42301934\n72  -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740 -0.28476280\n73  -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740 -0.28476280\n74  -0.11863013 -0.44468243 -0.4973268  0.73349987  0.317673740 -0.28476280\n75  -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414 -2.45592241\n76  -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414 -2.45592241\n77  -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414 -2.45592241\n78  -1.46260380  1.98023398  1.8570931  0.02069383  0.108106414 -2.45592241\n79  -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182  0.25331815\n80  -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182  0.25331815\n81  -0.60273007 -0.36371096  0.3539604 -0.56691449 -0.494687182  0.25331815\n82   0.06267851 -0.45138989 -0.7616792 -0.91739970  0.063230838  0.94803633\n83   0.06267851 -0.45138989 -0.7616792 -0.91739970  0.063230838  0.94803633\n84   1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335 -0.68558734\n85   1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335 -0.68558734\n86   1.10377174 -0.45138989 -0.7616792  0.22184255 -1.525453335 -0.68558734\n87   1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276  0.67507313\n88   1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276  0.67507313\n89   1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276  0.67507313\n90   1.18757664 -0.45138989 -0.7616792  2.02049367 -1.340987276  0.67507313\n91  -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806  0.86500430\n92  -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806  0.86500430\n93  -0.04487562 -0.45055929 -0.7195654 -0.14259912 -0.243593806  0.86500430\n94  -0.76175055 -0.03852315  1.0402503 -1.30950345  0.270053974  0.00686074\n95  -0.76175055 -0.03852315  1.0402503 -1.30950345  0.270053974  0.00686074\n96  -2.21400595  2.19896670  1.8970278 -1.17725908  0.129494953 -1.03966702\n97  -2.21400595  2.19896670  1.8970278 -1.17725908  0.129494953 -1.03966702\n98  -0.34273466 -0.45138989 -0.7616792 -0.93609954  0.068799930  1.04828977\n99  -0.34273466 -0.45138989 -0.7616792 -0.93609954  0.068799930  1.04828977\n101  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154  1.25748063\n102  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154  1.25748063\n103  0.04055015 -0.37946998  0.2709599 -0.82339879 -0.252028154  1.25748063\n104 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216 -0.65015727\n105 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216 -0.65015727\n106 -0.50378184 -0.34174645  0.4494144 -0.56691449 -0.663495216 -0.65015727\n107 -1.73578467  0.59916802  1.4688450 -1.17725908 -0.073736522 -0.85924231\n108 -1.73578467  0.59916802  1.4688450 -1.17725908 -0.073736522 -0.85924231\n109 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293 -0.34536366\n110 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293 -0.34536366\n111 -2.11010142  0.87837207  1.5776810 -0.68791615 -0.565148293 -0.34536366\n112  0.99642436 -0.45138989 -0.7616792 -0.03903164  0.695968389 -0.49082028\n113  0.99642436 -0.45138989 -0.7616792 -0.03903164  0.695968389 -0.49082028\n    HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy\n1         0.7403846     -0.1442308     -0.1442308        0.3269231\n2         0.7403846     -0.1442308     -0.1442308        0.3269231\n3         0.7403846     -0.1442308     -0.1442308        0.3269231\n4         0.7403846     -0.1442308     -0.1442308        0.3269231\n5         0.7403846     -0.1442308     -0.1442308        0.3269231\n6         0.7403846     -0.1442308     -0.1442308        0.3269231\n7         0.7403846     -0.1442308     -0.1442308        0.3269231\n8        -0.2596154      0.8557692     -0.1442308        0.3269231\n9        -0.2596154      0.8557692     -0.1442308        0.3269231\n10       -0.2596154      0.8557692     -0.1442308        0.3269231\n11        0.7403846     -0.1442308     -0.1442308        0.3269231\n12        0.7403846     -0.1442308     -0.1442308        0.3269231\n19        0.7403846     -0.1442308     -0.1442308        0.3269231\n20        0.7403846     -0.1442308     -0.1442308        0.3269231\n21        0.7403846     -0.1442308     -0.1442308        0.3269231\n22        0.7403846     -0.1442308     -0.1442308        0.3269231\n23       -0.2596154     -0.1442308     -0.1442308        0.3269231\n24       -0.2596154     -0.1442308     -0.1442308        0.3269231\n25       -0.2596154     -0.1442308     -0.1442308        0.3269231\n26       -0.2596154      0.8557692     -0.1442308        0.3269231\n27       -0.2596154      0.8557692     -0.1442308        0.3269231\n28       -0.2596154      0.8557692     -0.1442308        0.3269231\n29       -0.2596154      0.8557692     -0.1442308        0.3269231\n30       -0.2596154      0.8557692     -0.1442308        0.3269231\n31       -0.2596154      0.8557692     -0.1442308        0.3269231\n32       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n33       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n34       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n35       -0.2596154     -0.1442308     -0.1442308        0.3269231\n36       -0.2596154     -0.1442308     -0.1442308        0.3269231\n37       -0.2596154     -0.1442308     -0.1442308        0.3269231\n38       -0.2596154      0.8557692     -0.1442308       -0.6730769\n39       -0.2596154      0.8557692     -0.1442308       -0.6730769\n40       -0.2596154      0.8557692     -0.1442308       -0.6730769\n41       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n42       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n43       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n44       -0.2596154     -0.1442308     -0.1442308        0.3269231\n45       -0.2596154     -0.1442308     -0.1442308        0.3269231\n46       -0.2596154     -0.1442308     -0.1442308        0.3269231\n47       -0.2596154     -0.1442308     -0.1442308        0.3269231\n48       -0.2596154     -0.1442308     -0.1442308        0.3269231\n49       -0.2596154     -0.1442308     -0.1442308        0.3269231\n50       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n51       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n52       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n53       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n54       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n57        0.7403846     -0.1442308     -0.1442308        0.3269231\n58        0.7403846     -0.1442308     -0.1442308        0.3269231\n59       -0.2596154     -0.1442308     -0.1442308        0.3269231\n60       -0.2596154     -0.1442308     -0.1442308        0.3269231\n61       -0.2596154     -0.1442308     -0.1442308        0.3269231\n62       -0.2596154     -0.1442308     -0.1442308        0.3269231\n63       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n64       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n65       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n66       -0.2596154     -0.1442308     -0.1442308        0.3269231\n67       -0.2596154     -0.1442308     -0.1442308        0.3269231\n68       -0.2596154     -0.1442308     -0.1442308        0.3269231\n69       -0.2596154     -0.1442308     -0.1442308        0.3269231\n70       -0.2596154     -0.1442308     -0.1442308        0.3269231\n71       -0.2596154     -0.1442308     -0.1442308        0.3269231\n72       -0.2596154     -0.1442308     -0.1442308        0.3269231\n73       -0.2596154     -0.1442308     -0.1442308        0.3269231\n74       -0.2596154     -0.1442308     -0.1442308        0.3269231\n75       -0.2596154     -0.1442308     -0.1442308        0.3269231\n76       -0.2596154     -0.1442308     -0.1442308        0.3269231\n77       -0.2596154     -0.1442308     -0.1442308        0.3269231\n78       -0.2596154     -0.1442308     -0.1442308        0.3269231\n79       -0.2596154     -0.1442308      0.8557692       -0.6730769\n80       -0.2596154     -0.1442308      0.8557692       -0.6730769\n81       -0.2596154     -0.1442308      0.8557692       -0.6730769\n82        0.7403846     -0.1442308     -0.1442308        0.3269231\n83        0.7403846     -0.1442308     -0.1442308        0.3269231\n84       -0.2596154      0.8557692     -0.1442308       -0.6730769\n85       -0.2596154      0.8557692     -0.1442308       -0.6730769\n86       -0.2596154      0.8557692     -0.1442308       -0.6730769\n87       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n88       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n89       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n90       -0.2596154     -0.1442308     -0.1442308       -0.6730769\n91       -0.2596154     -0.1442308      0.8557692       -0.6730769\n92       -0.2596154     -0.1442308      0.8557692       -0.6730769\n93       -0.2596154     -0.1442308      0.8557692       -0.6730769\n94        0.7403846     -0.1442308     -0.1442308        0.3269231\n95        0.7403846     -0.1442308     -0.1442308        0.3269231\n96        0.7403846     -0.1442308     -0.1442308       -0.6730769\n97        0.7403846     -0.1442308     -0.1442308       -0.6730769\n98        0.7403846     -0.1442308     -0.1442308        0.3269231\n99        0.7403846     -0.1442308     -0.1442308        0.3269231\n101      -0.2596154     -0.1442308      0.8557692        0.3269231\n102      -0.2596154     -0.1442308      0.8557692        0.3269231\n103      -0.2596154     -0.1442308      0.8557692        0.3269231\n104      -0.2596154     -0.1442308      0.8557692        0.3269231\n105      -0.2596154     -0.1442308      0.8557692        0.3269231\n106      -0.2596154     -0.1442308      0.8557692        0.3269231\n107       0.7403846     -0.1442308     -0.1442308        0.3269231\n108       0.7403846     -0.1442308     -0.1442308        0.3269231\n109      -0.2596154     -0.1442308      0.8557692        0.3269231\n110      -0.2596154     -0.1442308      0.8557692        0.3269231\n111      -0.2596154     -0.1442308      0.8557692        0.3269231\n112       0.7403846     -0.1442308     -0.1442308       -0.6730769\n113       0.7403846     -0.1442308     -0.1442308       -0.6730769\n    atoll.low.dummy Populated.Remote.dummy\n1                 0              0.4807692\n2                 0             -0.5192308\n3                 0             -0.5192308\n4                 0              0.4807692\n5                 0              0.4807692\n6                 0              0.4807692\n7                 0              0.4807692\n8                 0              0.4807692\n9                 0              0.4807692\n10                0              0.4807692\n11                0              0.4807692\n12                0              0.4807692\n19                0             -0.5192308\n20                0             -0.5192308\n21                0              0.4807692\n22                0              0.4807692\n23                0             -0.5192308\n24                0             -0.5192308\n25                0             -0.5192308\n26                0              0.4807692\n27                0              0.4807692\n28                0              0.4807692\n29                0              0.4807692\n30                0              0.4807692\n31                0              0.4807692\n32                0              0.4807692\n33                0              0.4807692\n34                0              0.4807692\n35                0             -0.5192308\n36                0             -0.5192308\n37                0             -0.5192308\n38                0              0.4807692\n39                0              0.4807692\n40                0              0.4807692\n41                0              0.4807692\n42                0              0.4807692\n43                0              0.4807692\n44                0             -0.5192308\n45                0             -0.5192308\n46                0             -0.5192308\n47                0             -0.5192308\n48                0              0.4807692\n49                0              0.4807692\n50                0              0.4807692\n51                0              0.4807692\n52                0              0.4807692\n53                0              0.4807692\n54                0              0.4807692\n57                0              0.4807692\n58                0              0.4807692\n59                0             -0.5192308\n60                0             -0.5192308\n61                0             -0.5192308\n62                0             -0.5192308\n63                0              0.4807692\n64                0              0.4807692\n65                0              0.4807692\n66                0             -0.5192308\n67                0             -0.5192308\n68                0             -0.5192308\n69                0             -0.5192308\n70                0              0.4807692\n71                0              0.4807692\n72                0             -0.5192308\n73                0             -0.5192308\n74                0             -0.5192308\n75                0             -0.5192308\n76                0             -0.5192308\n77                0             -0.5192308\n78                0             -0.5192308\n79                0             -0.5192308\n80                0             -0.5192308\n81                0             -0.5192308\n82                0              0.4807692\n83                0              0.4807692\n84                0              0.4807692\n85                0              0.4807692\n86                0              0.4807692\n87                0              0.4807692\n88                0              0.4807692\n89                0              0.4807692\n90                0              0.4807692\n91                0             -0.5192308\n92                0             -0.5192308\n93                0             -0.5192308\n94                0             -0.5192308\n95                0             -0.5192308\n96                0             -0.5192308\n97                0             -0.5192308\n98                0              0.4807692\n99                0              0.4807692\n101               0             -0.5192308\n102               0             -0.5192308\n103               0             -0.5192308\n104               0             -0.5192308\n105               0             -0.5192308\n106               0             -0.5192308\n107               0             -0.5192308\n108               0             -0.5192308\n109               0             -0.5192308\n110               0             -0.5192308\n111               0             -0.5192308\n112               0              0.4807692\n113               0              0.4807692\n> head(fd)\n             ID REGION total.biomass   browser  cropper excavator  scraper\n1  Agrihan.2011 MARIAN     193.34089 45.504133 53.75021 20.936790 73.14975\n2  Aguijan.2011 MARIAN      75.25301  4.001634 47.65524  3.609300 19.98684\n3  Aguijan.2014 MARIAN      74.14869  4.589339 43.61920 10.314674 15.62547\n4 Alamagan.2011 MARIAN      94.48817 12.578138 65.99270  3.786915 59.37449\n5 Alamagan.2014 MARIAN     144.77396 15.392206 58.87828 13.833915 56.66956\n6 Asuncion.2011 MARIAN     152.59971 25.341115 45.99461 35.118617 46.14537\n      coral       CCA     turf     macro      sand     reef    algae\n1 19.062500  5.291667 63.05208  4.479167  6.177083 24.35417 67.53125\n2 21.700000  5.991667 43.04167 21.229167  6.095833 27.69167 64.27083\n3 16.750000 14.041667 41.16667 20.250000  6.666667 30.79167 61.41667\n4 30.375000  3.666667 44.29167  7.041667 13.916667 34.04167 51.33333\n5  9.138889  5.638889 67.27778 12.555556  4.138889 14.77778 79.83333\n6 17.244048  6.163360 59.82407  4.145503 11.651455 23.40741 63.96958\n  reefbuild.prop   ISLAND      lat      lon  min_SST     prod IslType\n1      0.2650493  Agrihan 18.76920 145.6655 25.57350 299.9844    high\n2      0.3011191  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n3      0.3339358  Aguijan 14.85052 145.5540 26.32422 291.7947    high\n4      0.3987311 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n5      0.1561950 Alamagan 17.59763 145.8288 25.75800 311.1410    high\n6      0.2678899 Asuncion 19.69017 145.4020 25.15698 313.2058    high\n  bathymetry  distance logdistance pop_area logpoparea     STATE    wave\n1  10.641667 400.61213    2.602724  0.00000   0.000000    Remote 21.8215\n2   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n3   6.404348  38.44611    1.584852 10.71237   1.068645 Populated 18.3557\n4   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n5   9.222917 271.05022    2.433050  0.00000   0.000000    Remote 20.3294\n6   9.944715 503.72538    2.702194  0.00000   0.000000    Remote 19.5548\n  irradiance complexity\n1    42.8050  0.6493571\n2    43.5752  0.5632117\n3    43.5752  0.5632117\n4    43.4626  0.7122837\n5    43.4626  0.7122837\n6    43.1212  0.6973295\n> unique(fd$IslType)\n[1] high  atoll low   <NA> \nLevels: atoll high low\n> head(remote_test)\n             ID   ISLAND total.biomass    browser     cropper  excavator\n1  Agrihan.2011  Agrihan    0.43138094  0.2419370 -0.16701676 -0.2607994\n2  Aguijan.2011  Aguijan   -0.76147691 -0.5019359 -0.32611451 -0.7623381\n3  Aguijan.2014  Aguijan   -0.77263221 -0.4914022 -0.43146782 -0.5682532\n4 Alamagan.2011 Alamagan   -0.56717411 -0.3482144  0.15255041 -0.7571971\n5 Alamagan.2014 Alamagan   -0.05921504 -0.2977762 -0.03315825 -0.4663899\n6 Asuncion.2011 Asuncion    0.01983628 -0.1194562 -0.36946233  0.1496890\n     scraper      coral        CCA       turf      macro       sand        reef\n1  1.6264803  0.0816902 -0.6879694  0.9748830 -0.8530078 -0.3291088 -0.40471264\n2 -0.4972499  0.3529642 -0.6263415 -0.1994262  1.3556893 -0.3505439 -0.21230232\n3 -0.6714759 -0.1561567  0.0823802 -0.3094604  1.2265739 -0.1999487 -0.03358413\n4  1.0761921  1.2452115 -0.8310344 -0.1260701 -0.5151101  1.7127192  0.15378173\n5  0.9681366 -0.9389801 -0.6574000  1.2228675  0.2119651 -0.8668176 -0.95680133\n6  0.5477204 -0.1053425 -0.6112256  0.7854476 -0.8970056  1.1151195 -0.45929429\n       algae reefbuild.prop       lat       lon   min_SST       prod bathymetry\n1  0.5943414    -0.46125567 0.4083871 -1.647832 0.5182057 -1.0569768 0.83025580\n2  0.4032979    -0.26544455 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n3  0.2360586    -0.08729336 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n4 -0.3547723     0.26445882 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n5  1.3151795    -1.05219029 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n6  0.3856458    -0.44583532 0.4772662 -1.659961 0.3453667 -0.9852405 0.70181404\n    distance logdistance   pop_area logpoparea       wave  irradiance\n1 -0.4211679  0.19010783 -0.4513899 -0.7616792 -0.7472653 -0.07438221\n2 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n3 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n4 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n5 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n6 -0.2843351  0.33433978 -0.4513899 -0.7616792 -1.0057222  0.05322262\n  complexity HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy\n1  0.3254809       0.7403846     -0.1442308     -0.1442308        0.3269231\n2 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n3 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n4  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n5  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n6  0.7964656       0.7403846     -0.1442308     -0.1442308        0.3269231\n  atoll.low.dummy Populated.Remote.dummy\n1               0              0.4807692\n2               0             -0.5192308\n3               0             -0.5192308\n4               0              0.4807692\n5               0              0.4807692\n6               0              0.4807692\n> unique(remote_test$atoll.low.dummy)\n[1] 0\n> #!bin/env Rscript\n> \n> ## Generic function to scale numeric and categorical variables for multi-mo<ale numeric and categorical variables for multi-mod                        el approaches\n> \n> ## Function definitions\n> scaler<-function(df, ID, centered=TRUE, ...){\n+ \n+ # strip NAs and drop NA factor levels\n+ df<-df[complete.cases(df),]\n+ df<-droplevels(df)\n+ \n+ ## extract ID variables\n+ ID.vars<-df[,colnames(df)%in%ID] \n+ \n+ #--------------------scale the numeric variables--------------------#\n+ \n+ numerics<-sapply(df, is.numeric)\n+ dat_cont<-df[, numerics]\n+ scaled_cont<-scale(dat_cont, center=TRUE)\n+ \n+ #--------------------scale the categorical variables-----------------#\n+ cats<-df[,!numerics]\n+ cats<-cats[,!colnames(cats)%in%ID]\n+ cats<-as.data.frame(cats)\n+ \n+ ## if you only have 1 categorical variable, do this...\n+ if(dim(cats)[2]==1){\n+ \n+ i.levels<-levels(cats[,1])\n+ cats[, 2]<-0\n+ cats[, 2][cats[,1]==i.levels[2]]<-1\n+ colnames(cats)[2]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ } else if (dim(cats)[2]>1){\n+ \n+ ## if you have more than 1 categorical variable, do this...\n+ for(i in 1:dim(cats)[2]){\n+ \n+ nvars <- dim(cats)[2]\n+ i.levels<-levels(cats[,i])\n+ counter<-1\n+ \n+ cats[, 1+nvars]<-0\n+ cats[, 1+nvars][cats[,i]==i.levels[2]]<-1\n+ colnames(cats)[1+nvars]<-paste(i.levels[1],i.levels[2],\"dummy\", sep=\".\")\n+ \n+ ## for variables with more than 2 levels we need to add more than 2 dummy v<e than 2 levels we need to add more than 2 dummy va                        riables\n+ if(length(i.levels)>2){\n+ \n+ for(j in 3:length(i.levels)){\n+ cats[, counter+nvars+(j-2)]<-0\n+ cats[, counter+nvars+(j-2)][cats[,i]==i.levels[j]]<-1\n+ colnames(cats)[counter+nvars+(j-2)]<-paste(i.levels[1],i.levels[j],\"dummy\",<ars+(j-2)]<-paste(i.levels[1],i.levels[j],\"dummy\",                         sep=\".\")\n+ \n+ }}}\n+ }\n+ \n+ \n+ \n+ #--------------------center categorical dummy variables--------------------\n+ \n+ if(dim(cats)[2]==2){\n+ cats[,2]<-cats[,2] - mean(cats[,2])} else if(dim(cats)[2]>2){\n+ \n+ ## remove unscaled categorical\n+ cats.num<-sapply(cats, is.numeric)\n+ cats<-cats[,cats.num]\n+ ## center each scaled categorical\n+ for(i in 1:dim(cats)[2]){\n+ cats[,i]<-cats[,i] - mean(cats[,i])\n+ }}\n+ \n+ #--------------------bind numeric and categorical together with ID.vars----< numeric and categorical together with ID.vars-----                        ------------#\n+ scaled.df<-cbind(ID.vars, scaled_cont, cats)\n+ return(scaled.df)\n+ \n+ ## END\n+ }\n> \n> remote_test<-scaler(df=fd, ID=c(\"ID\",  \"ISLAND\"))\n> head(remote_test)\n             ID   ISLAND total.biomass    browser     cropper  excavator\n1  Agrihan.2011  Agrihan    0.43138094  0.2419370 -0.16701676 -0.2607994\n2  Aguijan.2011  Aguijan   -0.76147691 -0.5019359 -0.32611451 -0.7623381\n3  Aguijan.2014  Aguijan   -0.77263221 -0.4914022 -0.43146782 -0.5682532\n4 Alamagan.2011 Alamagan   -0.56717411 -0.3482144  0.15255041 -0.7571971\n5 Alamagan.2014 Alamagan   -0.05921504 -0.2977762 -0.03315825 -0.4663899\n6 Asuncion.2011 Asuncion    0.01983628 -0.1194562 -0.36946233  0.1496890\n     scraper      coral        CCA       turf      macro       sand        reef\n1  1.6264803  0.0816902 -0.6879694  0.9748830 -0.8530078 -0.3291088 -0.40471264\n2 -0.4972499  0.3529642 -0.6263415 -0.1994262  1.3556893 -0.3505439 -0.21230232\n3 -0.6714759 -0.1561567  0.0823802 -0.3094604  1.2265739 -0.1999487 -0.03358413\n4  1.0761921  1.2452115 -0.8310344 -0.1260701 -0.5151101  1.7127192  0.15378173\n5  0.9681366 -0.9389801 -0.6574000  1.2228675  0.2119651 -0.8668176 -0.95680133\n6  0.5477204 -0.1053425 -0.6112256  0.7854476 -0.8970056  1.1151195 -0.45929429\n       algae reefbuild.prop       lat       lon   min_SST       prod bathymetry\n1  0.5943414    -0.46125567 0.4083871 -1.647832 0.5182057 -1.0569768 0.83025580\n2  0.4032979    -0.26544455 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n3  0.2360586    -0.08729336 0.1153111 -1.652962 0.8297201 -1.1014121 0.04935654\n4 -0.3547723     0.26445882 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n5  1.3151795    -1.05219029 0.3207662 -1.640316 0.5947648 -0.9964438 0.56879310\n6  0.3856458    -0.44583532 0.4772662 -1.659961 0.3453667 -0.9852405 0.70181404\n    distance logdistance   pop_area logpoparea       wave  irradiance\n1 -0.4211679  0.19010783 -0.4513899 -0.7616792 -0.7472653 -0.07438221\n2 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n3 -0.9017674 -1.28581453 -0.3574790  0.3830905 -1.1424477  0.23643765\n4 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n5 -0.5930984 -0.05592137 -0.4513899 -0.7616792 -0.9173997  0.19099709\n6 -0.2843351  0.33433978 -0.4513899 -0.7616792 -1.0057222  0.05322262\n  complexity HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy\n1  0.3254809       0.7403846     -0.1442308     -0.1442308        0.3269231\n2 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n3 -0.5202807       0.7403846     -0.1442308     -0.1442308        0.3269231\n4  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n5  0.9432832       0.7403846     -0.1442308     -0.1442308        0.3269231\n6  0.7964656       0.7403846     -0.1442308     -0.1442308        0.3269231\n  atoll.low.dummy Populated.Remote.dummy\n1     -0.04807692              0.4807692\n2     -0.04807692             -0.5192308\n3     -0.04807692             -0.5192308\n4     -0.04807692              0.4807692\n5     -0.04807692              0.4807692\n6     -0.04807692              0.4807692\n> tail(remote_scaled)\n       min_SST       prod bathymetry       wave  irradiance      cropper\n90  -1.5680915  0.3600502 -0.9717319  1.4615207 -1.00410990  0.009089659\n98   0.8616644 -1.2905798  0.9728860 -1.0524131  0.05637069 -0.424969470\n99   0.8616644 -1.2905798  0.9728860 -1.0524131  0.05637069  0.816400900\nNA          NA         NA         NA         NA          NA           NA\n112  0.6191920 -1.2355367  1.7160902 -0.2896537  0.52814399 -0.887984156\n113  0.6191920 -1.2355367  1.7160902 -0.2896537  0.52814399 -1.156457036\n        scraper  excavator     browser                 ID REGION div_HW.MAR\n90  -0.65258301  0.8455823  1.31723541 Pearl__Hermes.2015     HI -0.2698413\n98   0.21105327 -0.9720624 -0.44482896       Sarigan.2011 MARIAN  0.7301587\n99   0.59806589 -0.6289208 -0.09817649       Sarigan.2014 MARIAN  0.7301587\nNA           NA         NA          NA               <NA>   <NA> -0.2698413\n112  0.26190910  0.2001484 -0.28847502          Wake.2011 MARIAN  0.7301587\n113  0.01475027 -0.2095419 -0.43774731          Wake.2014 MARIAN  0.7301587\n    div_HW.PRIA isltype_at.high\n90            0      -0.4444444\n98            0       0.5555556\n99            0       0.5555556\nNA            0      -0.4444444\n112           0      -0.4444444\n113           0      -0.4444444\n> tail(remote_test)\n              ID  ISLAND total.biomass     browser    cropper   excavator\n108  Tinian.2014  Tinian   -1.14058300 -0.47289312 -1.1926010 -0.63096857\n109 Tutuila.2010 Tutuila   -0.60031112 -0.48206373 -0.5649670 -0.09316092\n110 Tutuila.2012 Tutuila   -0.26174762 -0.41786146 -0.5308813  0.15059277\n111 Tutuila.2015 Tutuila   -0.48366398 -0.48950800 -0.6274323  0.03752845\n112    Wake.2011    Wake   -0.01772077 -0.08551279 -0.7869959  0.51266011\n113    Wake.2014    Wake   -0.47362615 -0.26828754 -1.1010807  0.05422728\n       scraper      coral        CCA       turf       macro       sand\n108 -0.9164664 -0.1543200 -0.7042149  0.2623680  0.51310353  0.5632340\n109 -0.4622089  0.5081764  1.5929661 -0.8882205 -0.83173205 -0.1446279\n110  0.3450190  0.2180047  0.9857810 -0.5514059 -0.01567253 -0.3533419\n111 -0.0690933  0.0905426  0.4468587  0.1520703 -0.40110736 -0.6894669\n112  0.4615773  0.7493145 -0.1302870 -0.3604254 -0.73438389  1.2197387\n113  0.1793657  1.0506790 -0.3665188 -0.2037344 -0.28219227 -0.6141769\n          reef       algae reefbuild.prop        lat        lon   min_SST\n108 -0.5476392  0.48996939     -0.5448895  0.1279477 -1.6495102 0.8225753\n109  1.3279620 -1.25644763      1.3688860 -2.0643427  0.3616065 0.9308068\n110  0.7677130 -0.55752364      0.7208957 -2.0643427  0.3616065 0.9308068\n111  0.3433665 -0.02640033      0.2496433 -2.0643427  0.3616065 0.9308068\n112  0.3346904 -0.68620497      0.5358472  0.4480025 -0.6829449 0.3299904\n113  0.3489202 -0.32881738      0.3775669  0.4480025 -0.6829449 0.3299904\n          prod bathymetry   distance logdistance   pop_area logpoparea\n108 -1.0885104 -0.2312759 -0.9278167  -1.7357847  0.5991680  1.4688450\n109 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n110 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n111 -0.4779828 -0.4427254 -0.9390057  -2.1101014  0.8783721  1.5776810\n112 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899 -0.7616792\n113 -0.9807474  1.6731000  0.9600464   0.9964244 -0.4513899 -0.7616792\n           wave  irradiance complexity HI.MARIAN.dummy HI.PRIAs.dummy\n108 -1.17725908 -0.07373652 -0.8592423       0.7403846     -0.1442308\n109 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n110 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n111 -0.68791615 -0.56514829 -0.3453637      -0.2596154     -0.1442308\n112 -0.03903164  0.69596839 -0.4908203       0.7403846     -0.1442308\n113 -0.03903164  0.69596839 -0.4908203       0.7403846     -0.1442308\n    HI.SAMOA.dummy atoll.high.dummy atoll.low.dummy Populated.Remote.dummy\n108     -0.1442308        0.3269231     -0.04807692             -0.5192308\n109      0.8557692        0.3269231     -0.04807692             -0.5192308\n110      0.8557692        0.3269231     -0.04807692             -0.5192308\n111      0.8557692        0.3269231     -0.04807692             -0.5192308\n112     -0.1442308       -0.6730769     -0.04807692              0.4807692\n113     -0.1442308       -0.6730769     -0.04807692              0.4807692\n> debug(scaler)\n> remote_test<-scaler(df=fd, ID=c(\"ID\",  \"ISLAND\"))\ndebugging in: scaler(df = fd, ID = c(\"ID\", \"ISLAND\"))\ndebug at #1: {\n    df <- df[complete.cases(df), ]\n    df <- droplevels(df)\n    ID.vars <- df[, colnames(df) %in% ID]\n    numerics <- sapply(df, is.numeric)\n    dat_cont <- df[, numerics]\n    scaled_cont <- scale(dat_cont, center = TRUE)\n    cats <- df[, !numerics]\n    cats <- cats[, !colnames(cats) %in% ID]\n    cats <- as.data.frame(cats)\n    if (dim(cats)[2] == 1) {\n        i.levels <- levels(cats[, 1])\n        cats[, 2] <- 0\n        cats[, 2][cats[, 1] == i.levels[2]] <- 1\n        colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n    }\n    else if (dim(cats)[2] > 1) {\n        for (i in 1:dim(cats)[2]) {\n            nvars <- dim(cats)[2]\n            i.levels <- levels(cats[, i])\n            counter <- 1\n            cats[, 1 + nvars] <- 0\n            cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n            colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n                \"dummy\", sep = \".\")\n            if (length(i.levels) > 2) {\n                for (j in 3:length(i.levels)) {\n                  cats[, counter + nvars + (j - 2)] <- 0\n                  cats[, counter + nvars + (j - 2)][cats[, i] == \n                    i.levels[j]] <- 1\n                  colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n                    i.levels[j], \"dummy\", sep = \".\")\n                }\n            }\n        }\n    }\n    if (dim(cats)[2] == 2) {\n        cats[, 2] <- cats[, 2] - mean(cats[, 2])\n    }\n    else if (dim(cats)[2] > 2) {\n        cats.num <- sapply(cats, is.numeric)\n        cats <- cats[, cats.num]\n        for (i in 1:dim(cats)[2]) {\n            cats[, i] <- cats[, i] - mean(cats[, i])\n        }\n    }\n    scaled.df <- cbind(ID.vars, scaled_cont, cats)\n    return(scaled.df)\n}\nBrowse[2]> \ndebug at #4: df <- df[complete.cases(df), ]\nBrowse[2]> \ndebug at #5: df <- droplevels(df)\nBrowse[2]> \ndebug at #8: ID.vars <- df[, colnames(df) %in% ID]\nBrowse[2]> \ndebug at #12: numerics <- sapply(df, is.numeric)\nBrowse[2]> \ndebug at #13: dat_cont <- df[, numerics]\nBrowse[2]> \ndebug at #14: scaled_cont <- scale(dat_cont, center = TRUE)\nBrowse[2]> \ndebug at #17: cats <- df[, !numerics]\nBrowse[2]> \ndebug at #18: cats <- cats[, !colnames(cats) %in% ID]\nBrowse[2]> \ndebug at #19: cats <- as.data.frame(cats)\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] == 1) {\n    i.levels <- levels(cats[, 1])\n    cats[, 2] <- 0\n    cats[, 2][cats[, 1] == i.levels[2]] <- 1\n    colnames(cats)[2] <- paste(i.levels[1], i.levels[2], \"dummy\", \n        sep = \".\")\n} else if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, i] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n                  i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #22: if (dim(cats)[2] > 1) {\n    for (i in 1:dim(cats)[2]) {\n        nvars <- dim(cats)[2]\n        i.levels <- levels(cats[, i])\n        counter <- 1\n        cats[, 1 + nvars] <- 0\n        cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n        colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n            \"dummy\", sep = \".\")\n        if (length(i.levels) > 2) {\n            for (j in 3:length(i.levels)) {\n                cats[, counter + nvars + (j - 2)] <- 0\n                cats[, counter + nvars + (j - 2)][cats[, i] == \n                  i.levels[j]] <- 1\n                colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n                  i.levels[j], \"dummy\", sep = \".\")\n            }\n        }\n    }\n}\nBrowse[2]> \ndebug at #32: for (i in 1:dim(cats)[2]) {\n    nvars <- dim(cats)[2]\n    i.levels <- levels(cats[, i])\n    counter <- 1\n    cats[, 1 + nvars] <- 0\n    cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\n    colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n        \"dummy\", sep = \".\")\n    if (length(i.levels) > 2) {\n        for (j in 3:length(i.levels)) {\n            cats[, counter + nvars + (j - 2)] <- 0\n            cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n            colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n                i.levels[j], \"dummy\", sep = \".\")\n        }\n    }\n}\nBrowse[2]> \ndebug at #34: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #35: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #36: counter <- 1\nBrowse[2]> \ndebug at #38: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #39: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #40: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #43: if (length(i.levels) > 2) {\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n            i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> \ndebug at #45: for (j in 3:length(i.levels)) {\n    cats[, counter + nvars + (j - 2)] <- 0\n    cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n    colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n        i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> \ndebug at #46: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #47: cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #48: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n    i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #46: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #47: cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #48: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n    i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #35: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #36: counter <- 1\nBrowse[2]> \ndebug at #38: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #39: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #40: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #43: if (length(i.levels) > 2) {\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n            i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> \ndebug at #45: for (j in 3:length(i.levels)) {\n    cats[, counter + nvars + (j - 2)] <- 0\n    cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n    colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n        i.levels[j], \"dummy\", sep = \".\")\n}\nBrowse[2]> \ndebug at #46: cats[, counter + nvars + (j - 2)] <- 0\nBrowse[2]> \ndebug at #47: cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\nBrowse[2]> \ndebug at #48: colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n    i.levels[j], \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #34: nvars <- dim(cats)[2]\nBrowse[2]> \ndebug at #35: i.levels <- levels(cats[, i])\nBrowse[2]> \ndebug at #36: counter <- 1\nBrowse[2]> \ndebug at #38: cats[, 1 + nvars] <- 0\nBrowse[2]> \ndebug at #39: cats[, 1 + nvars][cats[, i] == i.levels[2]] <- 1\nBrowse[2]> \ndebug at #40: colnames(cats)[1 + nvars] <- paste(i.levels[1], i.levels[2], \n    \"dummy\", sep = \".\")\nBrowse[2]> \ndebug at #43: if (length(i.levels) > 2) {\n    for (j in 3:length(i.levels)) {\n        cats[, counter + nvars + (j - 2)] <- 0\n        cats[, counter + nvars + (j - 2)][cats[, i] == i.levels[j]] <- 1\n        colnames(cats)[counter + nvars + (j - 2)] <- paste(i.levels[1], \n            i.levels[j], \"dummy\", sep = \".\")\n    }\n}\nBrowse[2]> \ndebug at #57: if (dim(cats)[2] == 2) {\n    cats[, 2] <- cats[, 2] - mean(cats[, 2])\n} else if (dim(cats)[2] > 2) {\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n}\nBrowse[2]> head(cats )\n  REGION IslType     STATE HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy\n1 MARIAN    high    Remote               1              0              0\n2 MARIAN    high Populated               1              0              0\n3 MARIAN    high Populated               1              0              0\n4 MARIAN    high    Remote               1              0              0\n5 MARIAN    high    Remote               1              0              0\n6 MARIAN    high    Remote               1              0              0\n  atoll.high.dummy atoll.low.dummy Populated.Remote.dummy\n1                1               0                      1\n2                1               0                      0\n3                1               0                      0\n4                1               0                      1\n5                1               0                      1\n6                1               0                      1\nBrowse[2]> cbind(ID.vars, cats )\n                          ID              ISLAND REGION IslType     STATE\n1               Agrihan.2011             Agrihan MARIAN    high    Remote\n2               Aguijan.2011             Aguijan MARIAN    high Populated\n3               Aguijan.2014             Aguijan MARIAN    high Populated\n4              Alamagan.2011            Alamagan MARIAN    high    Remote\n5              Alamagan.2014            Alamagan MARIAN    high    Remote\n6              Asuncion.2011            Asuncion MARIAN    high    Remote\n7              Asuncion.2014            Asuncion MARIAN    high    Remote\n8                 Baker.2010               Baker  PRIAs    high    Remote\n9                 Baker.2012               Baker  PRIAs    high    Remote\n10                Baker.2015               Baker  PRIAs    high    Remote\n11  Farallon_de_Pajaros.2011 Farallon de Pajaros MARIAN    high    Remote\n12  Farallon_de_Pajaros.2014 Farallon de Pajaros MARIAN    high    Remote\n19                 Guam.2011                Guam MARIAN    high Populated\n20                 Guam.2014                Guam MARIAN    high Populated\n21               Guguan.2011              Guguan MARIAN    high    Remote\n22               Guguan.2014              Guguan MARIAN    high    Remote\n23               Hawaii.2010              Hawaii     HI    high Populated\n24               Hawaii.2013              Hawaii     HI    high Populated\n25               Hawaii.2015              Hawaii     HI    high Populated\n26              Howland.2010             Howland  PRIAs    high    Remote\n27              Howland.2012             Howland  PRIAs    high    Remote\n28              Howland.2015             Howland  PRIAs    high    Remote\n29               Jarvis.2010              Jarvis  PRIAs    high    Remote\n30               Jarvis.2012              Jarvis  PRIAs    high    Remote\n31               Jarvis.2015              Jarvis  PRIAs    high    Remote\n32             Johnston.2010            Johnston     HI   atoll    Remote\n33             Johnston.2012            Johnston     HI   atoll    Remote\n34             Johnston.2015            Johnston     HI   atoll    Remote\n35                Kauai.2010               Kauai     HI    high Populated\n36                Kauai.2013               Kauai     HI    high Populated\n37                Kauai.2015               Kauai     HI    high Populated\n38              Kingman.2010             Kingman  PRIAs   atoll    Remote\n39              Kingman.2012             Kingman  PRIAs   atoll    Remote\n40              Kingman.2015             Kingman  PRIAs   atoll    Remote\n41                 Kure.2010                Kure     HI   atoll    Remote\n42                 Kure.2012                Kure     HI   atoll    Remote\n43                 Kure.2015                Kure     HI   atoll    Remote\n44                Lanai.2010               Lanai     HI    high Populated\n45                Lanai.2012               Lanai     HI    high Populated\n46                Lanai.2013               Lanai     HI    high Populated\n47                Lanai.2015               Lanai     HI    high Populated\n48               Laysan.2011              Laysan     HI    high    Remote\n49               Laysan.2015              Laysan     HI    high    Remote\n50            Lisianski.2010           Lisianski     HI   atoll    Remote\n51            Lisianski.2011           Lisianski     HI   atoll    Remote\n52            Lisianski.2012           Lisianski     HI   atoll    Remote\n53            Lisianski.2014           Lisianski     HI   atoll    Remote\n54            Lisianski.2015           Lisianski     HI   atoll    Remote\n57                 Maug.2011                Maug MARIAN    high    Remote\n58                 Maug.2014                Maug MARIAN    high    Remote\n59                 Maui.2010                Maui     HI    high Populated\n60                 Maui.2012                Maui     HI    high Populated\n61                 Maui.2013                Maui     HI    high Populated\n62                 Maui.2015                Maui     HI    high Populated\n63               Midway.2011              Midway     HI   atoll    Remote\n64               Midway.2014              Midway     HI   atoll    Remote\n65               Midway.2015              Midway     HI   atoll    Remote\n66              Molokai.2010             Molokai     HI    high Populated\n67              Molokai.2012             Molokai     HI    high Populated\n68              Molokai.2013             Molokai     HI    high Populated\n69              Molokai.2015             Molokai     HI    high Populated\n70               Necker.2011              Necker     HI    high    Remote\n71                Nihoa.2011               Nihoa     HI    high    Remote\n72               Niihau.2010              Niihau     HI    high Populated\n73               Niihau.2013              Niihau     HI    high Populated\n74               Niihau.2015              Niihau     HI    high Populated\n75                 Oahu.2010                Oahu     HI    high Populated\n76                 Oahu.2012                Oahu     HI    high Populated\n77                 Oahu.2013                Oahu     HI    high Populated\n78                 Oahu.2015                Oahu     HI    high Populated\n79         Ofu__Olosega.2010       Ofu & Olosega  SAMOA     low Populated\n80         Ofu__Olosega.2012       Ofu & Olosega  SAMOA     low Populated\n81         Ofu__Olosega.2015       Ofu & Olosega  SAMOA     low Populated\n82                Pagan.2011               Pagan MARIAN    high    Remote\n83                Pagan.2014               Pagan MARIAN    high    Remote\n84              Palmyra.2010             Palmyra  PRIAs   atoll    Remote\n85              Palmyra.2012             Palmyra  PRIAs   atoll    Remote\n86              Palmyra.2015             Palmyra  PRIAs   atoll    Remote\n87        Pearl__Hermes.2010      Pearl & Hermes     HI   atoll    Remote\n88        Pearl__Hermes.2011      Pearl & Hermes     HI   atoll    Remote\n89        Pearl__Hermes.2012      Pearl & Hermes     HI   atoll    Remote\n90        Pearl__Hermes.2015      Pearl & Hermes     HI   atoll    Remote\n91                 Rose.2010                Rose  SAMOA   atoll Populated\n92                 Rose.2012                Rose  SAMOA   atoll Populated\n93                 Rose.2015                Rose  SAMOA   atoll Populated\n94                 Rota.2011                Rota MARIAN    high Populated\n95                 Rota.2014                Rota MARIAN    high Populated\n96               Saipan.2011              Saipan MARIAN     low Populated\n97               Saipan.2014              Saipan MARIAN     low Populated\n98              Sarigan.2011             Sarigan MARIAN    high    Remote\n99              Sarigan.2014             Sarigan MARIAN    high    Remote\n101              Swains.2010              Swains  SAMOA    high Populated\n102              Swains.2012              Swains  SAMOA    high Populated\n103              Swains.2015              Swains  SAMOA    high Populated\n104                 Tau.2010                 Tau  SAMOA    high Populated\n105                 Tau.2012                 Tau  SAMOA    high Populated\n106                 Tau.2015                 Tau  SAMOA    high Populated\n107              Tinian.2011              Tinian MARIAN    high Populated\n108              Tinian.2014              Tinian MARIAN    high Populated\n109             Tutuila.2010             Tutuila  SAMOA    high Populated\n110             Tutuila.2012             Tutuila  SAMOA    high Populated\n111             Tutuila.2015             Tutuila  SAMOA    high Populated\n112                Wake.2011                Wake MARIAN   atoll    Remote\n113                Wake.2014                Wake MARIAN   atoll    Remote\n    HI.MARIAN.dummy HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy\n1                 1              0              0                1\n2                 1              0              0                1\n3                 1              0              0                1\n4                 1              0              0                1\n5                 1              0              0                1\n6                 1              0              0                1\n7                 1              0              0                1\n8                 0              1              0                1\n9                 0              1              0                1\n10                0              1              0                1\n11                1              0              0                1\n12                1              0              0                1\n19                1              0              0                1\n20                1              0              0                1\n21                1              0              0                1\n22                1              0              0                1\n23                0              0              0                1\n24                0              0              0                1\n25                0              0              0                1\n26                0              1              0                1\n27                0              1              0                1\n28                0              1              0                1\n29                0              1              0                1\n30                0              1              0                1\n31                0              1              0                1\n32                0              0              0                0\n33                0              0              0                0\n34                0              0              0                0\n35                0              0              0                1\n36                0              0              0                1\n37                0              0              0                1\n38                0              1              0                0\n39                0              1              0                0\n40                0              1              0                0\n41                0              0              0                0\n42                0              0              0                0\n43                0              0              0                0\n44                0              0              0                1\n45                0              0              0                1\n46                0              0              0                1\n47                0              0              0                1\n48                0              0              0                1\n49                0              0              0                1\n50                0              0              0                0\n51                0              0              0                0\n52                0              0              0                0\n53                0              0              0                0\n54                0              0              0                0\n57                1              0              0                1\n58                1              0              0                1\n59                0              0              0                1\n60                0              0              0                1\n61                0              0              0                1\n62                0              0              0                1\n63                0              0              0                0\n64                0              0              0                0\n65                0              0              0                0\n66                0              0              0                1\n67                0              0              0                1\n68                0              0              0                1\n69                0              0              0                1\n70                0              0              0                1\n71                0              0              0                1\n72                0              0              0                1\n73                0              0              0                1\n74                0              0              0                1\n75                0              0              0                1\n76                0              0              0                1\n77                0              0              0                1\n78                0              0              0                1\n79                0              0              1                0\n80                0              0              1                0\n81                0              0              1                0\n82                1              0              0                1\n83                1              0              0                1\n84                0              1              0                0\n85                0              1              0                0\n86                0              1              0                0\n87                0              0              0                0\n88                0              0              0                0\n89                0              0              0                0\n90                0              0              0                0\n91                0              0              1                0\n92                0              0              1                0\n93                0              0              1                0\n94                1              0              0                1\n95                1              0              0                1\n96                1              0              0                0\n97                1              0              0                0\n98                1              0              0                1\n99                1              0              0                1\n101               0              0              1                1\n102               0              0              1                1\n103               0              0              1                1\n104               0              0              1                1\n105               0              0              1                1\n106               0              0              1                1\n107               1              0              0                1\n108               1              0              0                1\n109               0              0              1                1\n110               0              0              1                1\n111               0              0              1                1\n112               1              0              0                0\n113               1              0              0                0\n    atoll.low.dummy Populated.Remote.dummy\n1                 0                      1\n2                 0                      0\n3                 0                      0\n4                 0                      1\n5                 0                      1\n6                 0                      1\n7                 0                      1\n8                 0                      1\n9                 0                      1\n10                0                      1\n11                0                      1\n12                0                      1\n19                0                      0\n20                0                      0\n21                0                      1\n22                0                      1\n23                0                      0\n24                0                      0\n25                0                      0\n26                0                      1\n27                0                      1\n28                0                      1\n29                0                      1\n30                0                      1\n31                0                      1\n32                0                      1\n33                0                      1\n34                0                      1\n35                0                      0\n36                0                      0\n37                0                      0\n38                0                      1\n39                0                      1\n40                0                      1\n41                0                      1\n42                0                      1\n43                0                      1\n44                0                      0\n45                0                      0\n46                0                      0\n47                0                      0\n48                0                      1\n49                0                      1\n50                0                      1\n51                0                      1\n52                0                      1\n53                0                      1\n54                0                      1\n57                0                      1\n58                0                      1\n59                0                      0\n60                0                      0\n61                0                      0\n62                0                      0\n63                0                      1\n64                0                      1\n65                0                      1\n66                0                      0\n67                0                      0\n68                0                      0\n69                0                      0\n70                0                      1\n71                0                      1\n72                0                      0\n73                0                      0\n74                0                      0\n75                0                      0\n76                0                      0\n77                0                      0\n78                0                      0\n79                1                      0\n80                1                      0\n81                1                      0\n82                0                      1\n83                0                      1\n84                0                      1\n85                0                      1\n86                0                      1\n87                0                      1\n88                0                      1\n89                0                      1\n90                0                      1\n91                0                      0\n92                0                      0\n93                0                      0\n94                0                      0\n95                0                      0\n96                1                      0\n97                1                      0\n98                0                      1\n99                0                      1\n101               0                      0\n102               0                      0\n103               0                      0\n104               0                      0\n105               0                      0\n106               0                      0\n107               0                      0\n108               0                      0\n109               0                      0\n110               0                      0\n111               0                      0\n112               0                      1\n113               0                      1\nBrowse[2]> head(cbind(ID.vars, cats ),10)\n              ID   ISLAND REGION IslType     STATE HI.MARIAN.dummy\n1   Agrihan.2011  Agrihan MARIAN    high    Remote               1\n2   Aguijan.2011  Aguijan MARIAN    high Populated               1\n3   Aguijan.2014  Aguijan MARIAN    high Populated               1\n4  Alamagan.2011 Alamagan MARIAN    high    Remote               1\n5  Alamagan.2014 Alamagan MARIAN    high    Remote               1\n6  Asuncion.2011 Asuncion MARIAN    high    Remote               1\n7  Asuncion.2014 Asuncion MARIAN    high    Remote               1\n8     Baker.2010    Baker  PRIAs    high    Remote               0\n9     Baker.2012    Baker  PRIAs    high    Remote               0\n10    Baker.2015    Baker  PRIAs    high    Remote               0\n   HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy atoll.low.dummy\n1               0              0                1               0\n2               0              0                1               0\n3               0              0                1               0\n4               0              0                1               0\n5               0              0                1               0\n6               0              0                1               0\n7               0              0                1               0\n8               1              0                1               0\n9               1              0                1               0\n10              1              0                1               0\n   Populated.Remote.dummy\n1                       1\n2                       0\n3                       0\n4                       1\n5                       1\n6                       1\n7                       1\n8                       1\n9                       1\n10                      1\nBrowse[2]> tail(cbind(ID.vars, cats ),10)\n              ID  ISLAND REGION IslType     STATE HI.MARIAN.dummy\n104     Tau.2010     Tau  SAMOA    high Populated               0\n105     Tau.2012     Tau  SAMOA    high Populated               0\n106     Tau.2015     Tau  SAMOA    high Populated               0\n107  Tinian.2011  Tinian MARIAN    high Populated               1\n108  Tinian.2014  Tinian MARIAN    high Populated               1\n109 Tutuila.2010 Tutuila  SAMOA    high Populated               0\n110 Tutuila.2012 Tutuila  SAMOA    high Populated               0\n111 Tutuila.2015 Tutuila  SAMOA    high Populated               0\n112    Wake.2011    Wake MARIAN   atoll    Remote               1\n113    Wake.2014    Wake MARIAN   atoll    Remote               1\n    HI.PRIAs.dummy HI.SAMOA.dummy atoll.high.dummy atoll.low.dummy\n104              0              1                1               0\n105              0              1                1               0\n106              0              1                1               0\n107              0              0                1               0\n108              0              0                1               0\n109              0              1                1               0\n110              0              1                1               0\n111              0              1                1               0\n112              0              0                0               0\n113              0              0                0               0\n    Populated.Remote.dummy\n104                      0\n105                      0\n106                      0\n107                      0\n108                      0\n109                      0\n110                      0\n111                      0\n112                      1\n113                      1\nBrowse[2]> \ndebug at #57: if (dim(cats)[2] > 2) {\n    cats.num <- sapply(cats, is.numeric)\n    cats <- cats[, cats.num]\n    for (i in 1:dim(cats)[2]) {\n        cats[, i] <- cats[, i] - mean(cats[, i])\n    }\n}\nBrowse[2]> \ndebug at #61: cats.num <- sapply(cats, is.numeric)\nBrowse[2]> \ndebug at #62: cats <- cats[, cats.num]\nBrowse[2]> \ndebug at #64: for (i in 1:dim(cats)[2]) {\n    cats[, i] <- cats[, i] - mean(cats[, i])\n}\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #65: cats[, i] <- cats[, i] - mean(cats[, i])\nBrowse[2]> \ndebug at #69: scaled.df <- cbind(ID.vars, scaled_cont, cats)\nBrowse[2]> \ndebug at #70: return(scaled.df)\nBrowse[2]> \nexiting from: scaler(df = fd, ID = c(\"ID\", \"ISLAND\"))\n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> \n> ?scale\nscale                   package:base                   R Documentation\n\nScaling and Centering of Matrix-like Objects\n\nDescription:\n\n     'scale' is generic function whose default method centers and/or\n     scales the columns of a numeric matrix.\n\nUsage:\n\n     scale(x, center = TRUE, scale = TRUE)\n     \nArguments:\n\n       x: a numeric matrix(like object).\n\n  center: either a logical value or a numeric vector of length equal to\n          the number of columns of 'x'.\n\n   scale: either a logical value or a numeric vector of length equal to\n          the number of columns of 'x'.\n\nDetails:\n\n     The value of 'center' determines how column centering is\n     performed.  If 'center' is a numeric vector with length equal to\n     the number of columns of 'x', then each column of 'x' has the\n     corresponding value from 'center' subtracted from it.  If 'center'\n     is 'TRUE' then centering is done by subtracting the column means\n     (omitting 'NA's) of 'x' from their corresponding columns, and if\n     'center' is 'FALSE', no centering is done.\n\n     The value of 'scale' determines how column scaling is performed\n     (after centering).  If 'scale' is a numeric vector with length\n     equal to the number of columns of 'x', then each column of 'x' is\n     divided by the corresponding value from 'scale'.  If 'scale' is\n     'TRUE' then scaling is done by dividing the (centered) columns of\n     'x' by their standard deviations if 'center' is 'TRUE', and the\n     root mean square otherwise.  If 'scale' is 'FALSE', no scaling is\n     done.\n\n     The root-mean-square for a (possibly centered) column is defined\n     as sqrt(sum(x^2)/(n-1)), where x is a vector of the non-missing\n     values and n is the number of non-missing values.  In the case\n     'center = TRUE', this is the same as the standard deviation, but\n     in general it is not.  (To scale by the standard deviations\n     without centering, use 'scale(x, center = FALSE, scale = apply(x,\n     2, sd, na.rm = TRUE))'.)\n\nValue:\n\n     For 'scale.default', the centered, scaled matrix.  The numeric\n     centering and scalings used (if any) are returned as attributes\n     '\"scaled:center\"' and '\"scaled:scale\"'\n\nReferences:\n\n     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S\n     Language_.  Wadsworth & Brooks/Cole.\n\nSee Also:\n\n     'sweep' which allows centering (and scaling) with arbitrary\n     statistics.\n\n     For working with the scale of a plot, see 'par'.\n\nExamples:\n\n     require(stats)\n     x <- matrix(1:10, ncol = 2)\n     (centered.x <- scale(x, scale = FALSE))\n     cov(centered.scaled.x <- scale(x)) # all 1\n     \n\n> ",
			"settings":
			{
				"buffer_size": 685907,
				"line_ending": "Unix",
				"name": "*REPL* [r]",
				"scratch": true
			}
		},
		{
			"file": "/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R",
			"settings":
			{
				"buffer_size": 14530,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 227.0,
		"last_filter": "add",
		"selected_items":
		[
			[
				"add",
				"Project: Add Folder"
			],
			[
				"rr",
				"SublimeREPL: R"
			],
			[
				"r",
				"SublimeREPL: R"
			],
			[
				"ad",
				"Project: Add Folder"
			],
			[
				"rre",
				"SublimeREPL: R"
			],
			[
				"subr",
				"SublimeREPL: R"
			],
			[
				"set",
				"Set Syntax: R"
			],
			[
				"repr",
				"SublimeREPL: R"
			],
			[
				"s",
				"Set Syntax: R"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"upd",
				"Package Control: Upgrade Package"
			],
			[
				"synt",
				"Set Syntax: R"
			],
			[
				"replr",
				"SublimeREPL: R"
			],
			[
				"set s",
				"Set Syntax: R"
			],
			[
				"sy",
				"Set Syntax: R"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"peek",
				"SublimePeek: Get Help for Function"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"help r",
				"SublimePeek: Get Help for Function"
			],
			[
				"syn rmd",
				"Set Syntax: R Markdown"
			],
			[
				"RR",
				"SublimeREPL: R"
			],
			[
				"syn",
				"Set Syntax: R"
			],
			[
				"sy r",
				"Set Syntax: R"
			],
			[
				"syn r",
				"Set Syntax: R"
			],
			[
				"snytax r",
				"Set Syntax: R"
			],
			[
				"synt r",
				"Set Syntax: R"
			],
			[
				"",
				"Build: Build"
			],
			[
				"synta r",
				"Set Syntax: Enhanced-R"
			],
			[
				"set sy m",
				"Set Syntax: Markdown"
			],
			[
				"view in brow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"proje",
				"Project: Close"
			],
			[
				"syn kn",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"syntax m",
				"Set Syntax: Markdown"
			],
			[
				"knit",
				"knitr: Send Chunk to R"
			],
			[
				"build",
				"Build: Build"
			],
			[
				"send",
				"knitr: Send Chunk to R"
			],
			[
				"knitr",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"set rmd",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"set syn kn",
				"Set Syntax: knitr (Rnw)"
			],
			[
				"set kn",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"browse",
				"Preferences: Browse Packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"markmo",
				"Markmon launch"
			],
			[
				"BUILD",
				"Build: Build"
			],
			[
				"LATE",
				"LaTeXing: Check System"
			],
			[
				"ltE",
				"LaTeXing: Documentation"
			],
			[
				"previ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"set syntax kn",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"syntax r m",
				"Set Syntax: knitr (Markdown)"
			],
			[
				"texing",
				"LaTeXing: Check System"
			],
			[
				"tex",
				"LaTeXing: Open PDF"
			],
			[
				"kni",
				"knitr: Send Chunk to R"
			],
			[
				"ints",
				"Package Control: Install Package"
			],
			[
				"snippe",
				"Snippet: Linear regression model"
			],
			[
				"help",
				"SublimePeek: Get Help for Function"
			],
			[
				"latex",
				"LaTeXing: Jump To PDF"
			],
			[
				"latexi",
				"LaTeXing: Open PDF"
			],
			[
				"late",
				"LaTeXTools: View PDF"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pack inst",
				"Package Control: Install Package"
			],
			[
				"lat",
				"LaTeXTools: View PDF"
			],
			[
				"proj",
				"Project: Close"
			],
			[
				"pytho",
				"SublimeREPL: Python"
			],
			[
				"shell",
				"SublimeREPL: Shell"
			],
			[
				"she",
				"SublimeREPL: Shell"
			],
			[
				"shel",
				"SublimeREPL: Shell"
			],
			[
				"set r",
				"Set Syntax: R"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"bro",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"gith",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"preview",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"git",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"viewp",
				"LaTeXTools: View PDF"
			],
			[
				"viep",
				"LaTeXTools: View PDF"
			],
			[
				"previe",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"open",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"pack i",
				"Package Control: Install Package"
			],
			[
				"apa",
				"Package Control: Install Package"
			],
			[
				"packad",
				"Package Control: Add Channel"
			],
			[
				"rep r",
				"SublimeREPL: R"
			],
			[
				"pro",
				"Project: Save As"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"add ",
				"Project: Add Folder"
			],
			[
				"snipp",
				"Snippet: Linear regression model"
			],
			[
				"snippe fun",
				"Snippet: New comlumn based on chars of old column (right>left)"
			],
			[
				"snippet",
				"Snippet: Likelihood ratio test"
			],
			[
				"snip",
				"Snippet: Factor"
			],
			[
				"markdown",
				"Markdown Preview: Github Flavored Markdown: Copy to Clipboard"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"Package Control: r",
				"Package Control: Remove Package"
			],
			[
				"unin",
				"SublimePeek: Get Help for Function"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pak",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"sublime pee",
				"SublimePeek: Get Help for Function"
			],
			[
				"Package Control: cr",
				"Package Control: Create Package File"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"repl",
				"Preferences: Package Control Settings – Default"
			],
			[
				"Package Control: di",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Package Control: pack",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 50.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"cd",
			"pwd",
			"R64",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/scaling_function.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/CRED_ISD_MLE_definitions.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_herbivore_approaches.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/old-scripts/FD_create_density_biom.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_explore_Fmetrics.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_scales_benthic_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/read-fd/FD_READ_boots_FDmetrics_HAW.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Data/CRED.nSPC/CRED_2015_dataclean.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_master_dataframe_REEF.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_herb_summary_table.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_herb_sizestructure_compile.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_UVC_biomass_estimates.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/reef-level/FD_benthic_beta_models_reef_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/site-level/FD_benthic_beta_models_sites_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_master_dataframe_ISLAND.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/island-level/FD_benthic_beta_models_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_master_dataframe_SITE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_test_biomass_estimates.R",
		"/Users/jpwrobinson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/mar_island_simcounts_reshuffle_0.1add.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Writing/benthic_site_level.Rmd",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_simulation/FD_sim_average_sample.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/FD_fishing_function.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_simulation/FD_eveness_fishing_simulation.R",
		"/Users/jpwrobinson/Documents/git_repos/pacific-predictors/exploratory-figures/predictors_exploratory.Rmd",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/old-scripts/CRED_herbivore_explore.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/models/FD_explore_Fmetrics.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Writing/benthic_models_summary.Rmd",
		"/Users/jpwrobinson/Documents/git_repos/pacific-predictors/merged-covariates/merge_predictors_CRED_2015.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/island-level/FD_benthic_topmods_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/benthic_remote_formodels.csv",
		"/Users/jpwrobinson/Documents/git_repos/ki-env/SST/Code/seabird_data_load.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/sample-size/FD_fish_samplesizes.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/boots/haw/haw_READ_boots_samples.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/read-fd/FD_READ_boots_FDmetrics.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Data/CRED.nSPC/marian_island_year.csv",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/haw_island_simcounts_reshuffle_0.1add.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/site-level/FD_benthic_cover_sites_FIGURE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_pred_benthic_cover_POPULATED.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_beta_models_POPULATED.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_cover_FIGURE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_create_trait_matrices.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/.gitignore",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_topmods_POPULATED.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_fmetric_models.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_FIGURE1.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_models_remote_SOURCE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_topmods_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_FIGURE2.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_master_dataframe.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/CREP_benthic_cover_estimates.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/benthic_remote_formodels_AVERAGED.csv",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Figures/FD_herbivore_MAP.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/bootstrap_templates/FD_make_island.year_vec.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/100_haw.pbs",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_create_matrices.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/Functions_meanMST.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/Functions_MSTredundancy.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_FIGURE2_drivers.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/pria_isl200.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_isl200.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_isl400.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_isl800.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/mar_isl200.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/300_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/400_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/500_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/600_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/700_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/800_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/900_haw.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/1000_haw.pbs",
		"/Users/jpwrobinson/Documents/git_repos/maps/CRED-SPC/cred_map_base.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_herb_tableS1_herbivores.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_herb_tableS2_CREP_dataset.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/functions/Functions_meanMST.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_island_200N_reshuffle.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_isl_simcounts.pbs",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/haw_isl_simcounts.pbs",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/bootstrap_templates/create_sim_counts_csv.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 2",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 3",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 4",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 5",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 6",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 7",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb_updated/200_haw.pbs copy 8",
		"/Users/jpwrobinson/Documents/git_repos/fishing-reefs-spectra/Analyses-final/CRED_models_predictions_noshark_LENGTHS.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/Functions_modelaverage_prediction.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Functions/CRED_ISD_functions.R",
		"/Users/jpwrobinson/Pictures/*REPL* [r]",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_benthic_gams_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/fishing-reefs-spectra/Data/scale_predictors.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/models_explore_functions.R",
		"/Users/jpwrobinson/Documents/git_repos/reef-fishing-theory/CRED-data/CREP_reef_masses.R",
		"/Users/jpwrobinson/Documents/git_repos/reef-fishing-theory/CREP_reef_masses.R",
		"/Users/jpwrobinson/Documents/git_repos/size-spectra-methods/dataCode/PLB_MLE_functions.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/benthic/FD_haw_herb_benthic_trends.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/old-scripts/HAW_herb_FD_island.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_explore_Fmetrics.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/PROJECTS/Predictors/merge_CRED_complexity_2010-14.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_mar_herb_benthic_trends.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_haw_herb_benthic_trends.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_POPULATED.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_HAW_REMOTE.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_gams.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_explore_samplesize.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_resample_size_bias.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/data/CREP_HAW_trait_matrix.csv",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/data/haw_island_year.csv",
		"/Users/jpwrobinson/Documents/git_repos/fishing-reefs-spectra/Analyses/CRED_final_models.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/bootstrap_templates/FD_island_reshuffle.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_eveness_fishing_simulation.R",
		"/Users/jpwrobinson/Google_Drive/R_PROJECTS_DATA/WESTGRID/Projects/FD_herb/haw_island_400N_reshuffle.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_weighting_evenness_biomass.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_major_trends_plots.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_READ_boots_samples.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/boots/haw/samples/haw_boot_random_samples_merged.csv",
		"/Users/jpwrobinson/Documents/git_repos/fishing-reefs-spectra/Analyses/old-scripts/CRED_models_explore.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/results/FD-data/boots/haw/haw_READ_boots_FDmetrics.R",
		"/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD-explore/FD_READ_boots_FDmetrics.R"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"2",
			"i",
			"data",
			"-1",
			"data",
			"i",
			"*nvars",
			"nvars",
			"data",
			"herb",
			"reef_scale",
			"sam",
			"write.csv",
			"dredge",
			"(",
			"island",
			"###",
			",c(\"ID\",",
			"reef_scale",
			"herb.biom",
			"herb.fg.biom",
			"ID2",
			"herb.biom",
			"reef_scale",
			"fg.",
			"bsites",
			"ISLAND",
			"b.island",
			"fd",
			"ID4",
			"herb",
			"DEPTH_BIN",
			"reef_scale",
			"bioms",
			"2",
			"bioms",
			"reef_scale",
			"ID",
			"bioms.clean",
			"biom.final",
			"samp.ID3",
			"biom.depth",
			"biom.final",
			"ID",
			"DEPTH_BIN",
			"4",
			"herb.",
			"land",
			"ID +",
			"ISLAND",
			"island_scale",
			"reef",
			"biom.final",
			"biom",
			"bioms",
			"biom",
			"unique.reef",
			"site",
			"b.site",
			"REEF",
			"isl",
			"reef",
			"site",
			"M_coral_set",
			" =\"",
			"b.site",
			"01",
			"benthic",
			"rod  +",
			"scraper + cropper + excavator +",
			"STATE",
			"benthic",
			"b.island",
			"==",
			"==\"Site",
			"ISLAND",
			"reef",
			"b.reef",
			"benthic",
			"gam",
			"beta.coral",
			"DEPTH",
			"ITES",
			"unique.site",
			"DEPTH",
			"pred.site",
			"_site_",
			"site",
			"reef_scale",
			"unique.site",
			"SITE",
			"4",
			"3",
			"2",
			"sapm.ID3",
			"D4",
			"$ID",
			"ID",
			"D,",
			",ID",
			"ID",
			"+ ISLAND",
			"unique.site",
			"FG",
			"3",
			"2",
			"unique.site",
			"DEPTH_BIN",
			"samp.ID",
			"unique.site",
			"DEPTH",
			"biom.final",
			"ID",
			"unique.site",
			"biom.reef",
			"bioms",
			"bioms.clean",
			"bioms",
			"DEPTH",
			"unique.site",
			"ID",
			"unique.site",
			"b.reef",
			"pred.reef",
			"benthic",
			"surveys",
			"pred.site",
			"haw.rem"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/indicator_data_create_master.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 210,
						"regions":
						{
						},
						"selection":
						[
							[
								210,
								210
							]
						],
						"settings":
						{
							"r_box_status": false,
							"syntax": "Packages/R-Box/syntax/R Extended.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 685907,
						"regions":
						{
						},
						"selection":
						[
							[
								685907,
								685907
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "r",
							"repl_id": "c100f18a49ea477081d070823fde992e",
							"repl_restart_args":
							{
								"additional_scopes":
								[
									"tex.latex.knitr"
								],
								"cmd":
								{
									"linux":
									[
										"R",
										"--interactive",
										"--no-readline"
									],
									"osx":
									[
										"R",
										"--interactive",
										"--no-readline"
									],
									"windows":
									[
										"Rterm.exe",
										"--ess",
										"--encoding=$win_cmd_encoding"
									]
								},
								"cmd_postfix": "\n",
								"cwd": "$file_path",
								"encoding":
								{
									"linux": "utf8",
									"osx": "utf8",
									"windows": "$win_cmd_encoding"
								},
								"extend_env":
								{
									"linux":
									{
										"PATH": "{PATH}:/usr/local/bin"
									},
									"osx":
									{
										"PATH": "{PATH}:/usr/local/bin"
									},
									"windows":
									{
									}
								},
								"external_id": "r",
								"soft_quit": "\nquit(save=\"no\")\n",
								"suppress_echo":
								{
									"linux": true,
									"osx": true,
									"windows": false
								},
								"syntax": "Packages/R/R Console.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/R/R Console.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 204650.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/jpwrobinson/Documents/git_repos/herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14530,
						"regions":
						{
						},
						"selection":
						[
							[
								433,
								433
							]
						],
						"settings":
						{
							"r_box_status": false,
							"syntax": "Packages/R-Box/syntax/R Extended.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.46677992079,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 24.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.markdown":
	{
		"height": 24.0
	},
	"output.unsaved_changes":
	{
		"height": 24.0
	},
	"pinned_build_system": "",
	"project": "reef-indicators.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"benthicr",
				"herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R"
			],
			[
				"ben",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"create",
				"herbivore-fd/Analyses/old-scripts/FD_create_density_biom.R"
			],
			[
				"read",
				"herbivore-fd/Analyses/FD-explore/read-fd/FD_READ_boots_FDmetrics_HAW.R"
			],
			[
				"clean",
				"herbivore-fd/Data/CRED.nSPC/CRED_2015_dataclean.R"
			],
			[
				"master",
				"herbivore-fd/Analyses/FD_master_dataframe_REEF.R"
			],
			[
				"fdherb.r",
				"herbivore-fd/Analyses/FD-explore/FD_herb_summary_table.R"
			],
			[
				"hersize",
				"herbivore-fd/Analyses/FD_herb_sizestructure_compile.R"
			],
			[
				"benthice",
				"herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R"
			],
			[
				"biomas",
				"herbivore-fd/Analyses/FD_UVC_biomass_estimates.R"
			],
			[
				"reef",
				"herbivore-fd/Analyses/benthic/reef-level/FD_benthic_beta_models_reef_REMOTE.R"
			],
			[
				"benthicrree",
				"herbivore-fd/Analyses/benthic/reef-level/FD_benthic_beta_models_reef_REMOTE.R"
			],
			[
				"benthicsiter",
				"herbivore-fd/Analyses/benthic/site-level/FD_benthic_beta_models_sites_REMOTE.R"
			],
			[
				"scal",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"remote.r",
				"herbivore-fd/Analyses/benthic/island-level/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"siteremo",
				"herbivore-fd/Analyses/benthic/site-level/FD_benthic_beta_models_sites_REMOTE.R"
			],
			[
				"mastersi",
				"herbivore-fd/Analyses/FD_master_dataframe_SITE.R"
			],
			[
				"benthicest",
				"herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R"
			],
			[
				"clea",
				"herbivore-fd/Data/CRED.nSPC/CRED_2015_dataclean.R"
			],
			[
				"models",
				"herbivore-fd/Analyses/benthic/island-level/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"biom",
				"herbivore-fd/Analyses/FD_UVC_biomass_estimates.R"
			],
			[
				"reefr",
				"herbivore-fd/Analyses/benthic/reef-level/FD_benthic_beta_models_reef_REMOTE.R"
			],
			[
				"remoter",
				"herbivore-fd/Analyses/benthic/island-level/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"benthic",
				"herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R"
			],
			[
				"benthi",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"maste",
				"herbivore-fd/Analyses/FD_master_dataframe_SITE.R"
			],
			[
				"site",
				"herbivore-fd/Analyses/FD_master_dataframe_SITE.R"
			],
			[
				"fishfun",
				"herbivore-fd/Functions/FD_fishing_function.R"
			],
			[
				"fishinr",
				"herbivore-fd/Analyses/FD_simulation/FD_eveness_fishing_simulation.R"
			],
			[
				"fish",
				"herbivore-fd/Functions/FD_fishing_function.R"
			],
			[
				"simul",
				"herbivore-fd/Analyses/FD_simulation/FD_eveness_fishing_simulation.R"
			],
			[
				"scale",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"explore",
				"herbivore-fd/Analyses/old-scripts/CRED_herbivore_explore.R"
			],
			[
				"scaled",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"benthisite",
				"herbivore-fd/Analyses/benthic/site-level/FD_benthic_beta_models_sites_REMOTE.R"
			],
			[
				"benthicremoter",
				"herbivore-fd/Analyses/benthic/island-level/FD_benthic_topmods_REMOTE.R"
			],
			[
				"redasapm",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/haw_READ_boots_samples.R"
			],
			[
				"even",
				"herbivore-fd/Analyses/FD_simulation/FD_eveness_fishing_simulation.R"
			],
			[
				"com",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R"
			],
			[
				"size",
				"herbivore-fd/Analyses/FD_herb_sizestructure_compile.R"
			],
			[
				"comp",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R"
			],
			[
				"simula",
				"herbivore-fd/Analyses/FD_simulation/FD_eveness_fishing_simulation.R"
			],
			[
				"scla",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"model",
				"herbivore-fd/Analyses/benthic/island-level/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"modelsrmeote",
				"herbivore-fd/Analyses/benthic/site-level/FD_benthic_beta_models_sites_REMOTE.R"
			],
			[
				"pop",
				"herbivore-fd/Analyses/benthic/FD_pred_benthic_cover_POPULATED.R"
			],
			[
				"popul",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_POPULATED.R"
			],
			[
				"figure",
				"herbivore-fd/Analyses/benthic/FD_benthic_cover_FIGURE.R"
			],
			[
				"be",
				"herbivore-fd/Analyses/benthic/CREP_benthic_cover_estimates.R"
			],
			[
				"",
				"herbivore-fd/.gitignore"
			],
			[
				"benthicpopul",
				"herbivore-fd/Analyses/benthic/FD_benthic_topmods_POPULATED.R"
			],
			[
				"modelsr",
				"herbivore-fd/Analyses/FD_fmetric_models.R"
			],
			[
				"benthicmodels",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_POPULATED.R"
			],
			[
				"figu",
				"herbivore-fd/Analyses/benthic/FD_benthic_cover_FIGURE.R"
			],
			[
				"populr",
				"herbivore-fd/Analyses/benthic/FD_pred_benthic_cover_POPULATED.R"
			],
			[
				"remotesour",
				"herbivore-fd/Analyses/benthic/FD_benthic_models_remote_SOURCE.R"
			],
			[
				"remote",
				"herbivore-fd/Analyses/benthic/FD_benthic_topmods_REMOTE.R"
			],
			[
				"benthipre",
				"herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R"
			],
			[
				"fig",
				"herbivore-fd/Analyses/benthic/FD_benthic_FIGURE1.R"
			],
			[
				"sacl",
				"herbivore-fd/Analyses/FD_benthic_scaled_dataframe.R"
			],
			[
				"figure2",
				"herbivore-fd/Analyses/benthic/FD_benthic_FIGURE2.R"
			],
			[
				"data",
				"herbivore-fd/Analyses/FD_master_dataframe.R"
			],
			[
				"benthicbeta",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"benthiremote",
				"herbivore-fd/Analyses/results/FD-data/benthic_remote_formodels_AVERAGED.csv"
			],
			[
				"mas",
				"herbivore-fd/Analyses/FD_master_dataframe.R"
			],
			[
				"fd",
				"herbivore-fd/Analyses/FD_master_dataframe.R"
			],
			[
				"sizestruc",
				"herbivore-fd/Analyses/FD_herb_sizestructure_compile.R"
			],
			[
				"mast",
				"herbivore-fd/Analyses/FD_master_dataframe.R"
			],
			[
				"compi",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R"
			],
			[
				"benthicremote",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"benremote",
				"herbivore-fd/Analyses/benthic/FD_benthic_topmods_REMOTE.R"
			],
			[
				"biomass",
				"herbivore-fd/Analyses/FD_UVC_biomass_estimates.R"
			],
			[
				"predic",
				"herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R"
			],
			[
				"figur",
				"herbivore-fd/Analyses/benthic/FD_benthic_cover_FIGURE.R"
			],
			[
				"populated",
				"herbivore-fd/Analyses/benthic/FD_benthic_topmods_POPULATED.R"
			],
			[
				"benthifire",
				"herbivore-fd/Analyses/benthic/FD_benthic_cover_FIGURE.R"
			],
			[
				"remotepre",
				"herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R"
			],
			[
				"benthreomte",
				"herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R"
			],
			[
				"predi",
				"herbivore-fd/Analyses/benthic/FD_pred_benthic_cover_POPULATED.R"
			],
			[
				"sourcer",
				"herbivore-fd/Analyses/benthic/FD_benthic_models_remote_SOURCE.R"
			],
			[
				"benthicmodelsso",
				"herbivore-fd/Analyses/benthic/FD_benthic_models_remote_SOURCE.R"
			],
			[
				"bio",
				"herbivore-fd/Analyses/FD_UVC_biomass_estimates.R"
			],
			[
				"mak",
				"herbivore-fd/Analyses/bootstrap_templates/FD_make_island.year_vec.R"
			],
			[
				"creater",
				"herbivore-fd/Analyses/FD-explore/FD_create_matrices.R"
			],
			[
				"bnethices",
				"herbivore-fd/Analyses/CREP_benthic_cover_estimates.R"
			],
			[
				"predicti",
				"herbivore-fd/Analyses/benthic/FD_benthic_remote_predictions.R"
			],
			[
				"bentmodel",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"remo",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"populate",
				"herbivore-fd/Analyses/benthic/FD_pred_benthic_cover_POPULATED.R"
			],
			[
				"rem",
				"herbivore-fd/Analyses/benthic/FD_benthic_beta_models_REMOTE.R"
			],
			[
				"herb",
				"herbivore-fd/Analyses/FD-explore/FD_herb_summary_table.R"
			],
			[
				"her",
				"herbivore-fd/Analyses/old-scripts/CRED_herbivore_explore.R"
			],
			[
				"mase",
				"herbivore-fd/Analyses/FD_master_dataframe.R"
			],
			[
				"hawr",
				"herbivore-fd/Analyses/benthic/FD_haw_herb_benthic_trends.R"
			],
			[
				"exl",
				"herbivore-fd/Analyses/FD_explore_Fmetrics.R"
			],
			[
				"gam",
				"herbivore-fd/Analyses/benthic/FD_benthic_gams_REMOTE.R"
			],
			[
				"resa",
				"herbivore-fd/Analyses/FD_resample_size_bias.R"
			],
			[
				"trait",
				"FD_herb/data/CREP_HAW_trait_matrix.csv"
			],
			[
				"sample",
				"herbivore-fd/Analyses/FD_explore_samplesize.R"
			],
			[
				"island",
				"FD_herb/data/haw_island_year.csv"
			],
			[
				"compil",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R"
			],
			[
				"mar_her",
				"herbivore-fd/Analyses/FD_mar_herb_benthic_trends.R"
			],
			[
				"shuff",
				"herbivore-fd/Analyses/bootstrap_templates/FD_island_reshuffle.R"
			],
			[
				"fdhaw",
				"herbivore-fd/Analyses/FD_haw_herb_benthic_trends.R"
			],
			[
				"rand",
				"herbivore-fd/Analyses/results/FD-data/boots/haw/samples/haw_boot_random_samples_merged.csv"
			],
			[
				"expl",
				"herbivore-fd/Analyses/FD_explore_Fmetrics.R"
			],
			[
				"mar",
				"FD_herb/mar_island_200N_reshuffle.R"
			],
			[
				"metr",
				"Analyses/old-scripts/FD_metric_tester.R"
			],
			[
				"test",
				"Analyses/old-scripts/FD_metric_tester.R"
			],
			[
				"sampl",
				"Analyses/FD_explore_samplesize.R"
			],
			[
				"haw_r",
				"Analyses/results/FD-data/boots/haw/haw_READ_boots_FDmetrics.R"
			],
			[
				"year",
				"Analyses/bootstrap_templates/FD_make_island.year_vec.R"
			],
			[
				"sizer",
				"Analyses/results/FD-data/boots/haw/haw_compile_biomass_sizes_FG.R"
			],
			[
				".r",
				"Analyses/old-scripts/CRED_herbivore_explore.R"
			],
			[
				"r",
				"Analyses/FD_explore_Fmetrics.R"
			],
			[
				"marre",
				"Analyses/results/FD-data/boots/mar/mar_READ_boots_samples.R"
			],
			[
				"mar_re",
				"Analyses/results/FD-data/boots/mar/mar_READ_boots_FDmetrics.R"
			],
			[
				"islandyear",
				"Analyses/bootstrap_templates/FD_make_island.year_vec.R"
			],
			[
				"mean",
				"Functions/Functions_meanMST.R"
			],
			[
				"mst",
				"Functions/Functions_MSTrichness.R"
			],
			[
				"reshu",
				"Analyses/bootstrap_templates/FD_island_reshuffle.R"
			],
			[
				"boo",
				"Analyses/FD_READ_boots_FDmetrics.R"
			],
			[
				"islandyea",
				"Analyses/bootstrap_templates/FD_make_island.year_vec.R"
			],
			[
				"cre",
				"Data/CRED.nSPC/CRED_2015_dataclean.R"
			],
			[
				"crea",
				"Data/CRED.nSPC/CRED_2015_dataclean.R"
			],
			[
				"mid",
				"Analyses/FD_test_metrics_MIDWAY.R"
			],
			[
				"islandyearr",
				"Analyses/bootstrap_templates/FD_make_island.year_vec.R"
			],
			[
				"metri",
				"Analyses/old-scripts/FD_metric_tester.R"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/git_repos/fishing-reefs-spectra/fishing-reefs-spectra.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"integral"
			]
		],
		"width": 437.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 317.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
